name: clang-format-check

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on:
      - self-hosted
      - software

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          submodules: false

      # Runs a set of commands using the runners shell
      #   Exclude register header files. Those don't follow clang formatting or it becomes unreadable
      - name: clang-format-check
        run: |
          CHANGE_FILES=$(git diff --ignore-submodules --name-only remotes/origin/main '*.c' '*.h' ':!*_regs.h')
          CHECK_FAIL=0

          set +e
          for change_file in ${CHANGE_FILES}
          do
            if [ -f ${change_file} ];
            then
            clang-format --verbose -style=file -n --ferror-limit=1 -Werror ${change_file}
            if [ $? != 0 ];
            then
              CHECK_FAIL=1
            fi
            fi
          done
          set -e

          exit $CHECK_FAIL
