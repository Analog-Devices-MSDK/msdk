name: clang-format

# Controls when the workflow will run
on:
  # Dependency to a forking workflow
  workflow_run:
    workflows: ["checkout", "checkout-pr"]
    types:
      - completed

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on:
      - self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Runs a set of commands using the runners shell
      - name: clang-format
        run: |

          # Remove the submodules
          git submodule deinit --force --all

          # Test modification
          echo "// test modification" >> Examples/MAX32665/Hello_World/main.c

          # # Reformat all of the c files
          # CFILES=$(find . -iname "*.c")
          # for cFile in ${CFILES}
          # do
          #   clang-format --verbose -style=file -i ${cFile}
          # done
          
          # # Reformat all of the header files
          # HFILES=$(find . -iname "*.h" -not -name "*regs*")
          # for hFile in ${HFILES}
          # do
          #   clang-format --verbose -style=file -i ${hFile}
          # done

          # Update the submodules, this will use ssh
          git submodule init
          git submodule sync
          git submodule update --init --recursive

      - name: Push reformatted files
        uses: EndBug/add-and-commit@v9.0.1
        with:
          add: '*'
          message: 'clang-format bot reformatting.'
          push: true
