from subprocess import run
from pathlib import Path

if __name__ == "__main__":
    # 'git describe will print a string with info about the current commit's relationship
    # to the last tag.  '--tags' gets it working with non-annoted tags.
    command = "git describe --tags"
    result = run(command, shell=True, capture_output=True)
    if result.returncode != 0:
        print(f"Failed to run {command} with error {result.returncode}:\n{result.stderr.decode(encoding='utf-8')}")
    
    version = result.stdout.decode(encoding="utf-8").strip()
    # Our tagging convention is v{version_year}_{version_month}
    # git describe will sometimes return something like v2024_02-5-g5f0770a64e
    version_year = int(version.split("_")[0][1:]) # Split the year and month based on the '_', and strip off the leading 'v'
    version_minor = version.split("_")[1].split("-")[0]
    version_month = int(version_minor[0]) if isinstance(version_minor, list) else int(version_minor)

    # Locate maxim_path relative to this file.
    maxim_path = Path(__file__).parent.parent.parent.parent

    # Place msdk_version.h in the root directory of the MSDK
    output_file = maxim_path / "msdk_version.h"
    with open(output_file, "w") as f:
        print(f"Writing to {output_file}")
        f.write(
f"""#ifndef _MSDK_VERSION_H
#define _MSDK_VERSION_H
// @autogenerated version info

#define MSDK_VERSION_STRING {version}
#define MSDK_VERSION_YEAR {version_year}
#define MSDK_VERSION_MONTH {version_month}

#endif""")
        
    # Place msdk_version.mk next to the gcc/gcc_riscv.mk files.
    # This file will be used to print version info at build time.
    # Generating it is easier than trying to parse msdk_version.h with native Make functions
    output_file = maxim_path / "Libraries/CMSIS/Device/Maxim/GCC/msdk_version.mk"
    with open(output_file, "w") as f:
        print(f"Writing to {output_file}")
        f.write(
f"""
# Autogenerated version info for build system.
MSDK_VERSION_STRING := {version}
MSDK_VERSION_YEAR := {version_year}
MSDK_VERSION_MONTH := {version_month}
"""
        )