<?xml version='1.0' encoding='utf-8'?>
<device xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="1.1" xsi:noNamespaceSchemaLocation="svd_schema.xsd">
  <vendor>Maxim-Integrated</vendor>
  <vendorID>Maxim</vendorID>
  <name>max32570</name>
  <series>ARMCM4</series>
  
  <version>1.0</version>
  <description>MAX32570 32-bit ARM Cortex-M4 microcontroller, 1024KB of flash, 760KB of system RAM, 128KB of Boot ROM.</description>
  <cpu>
    
    <name>CM4</name>
    <revision>r2p1</revision>
    <endian>little</endian>
    <mpuPresent>true</mpuPresent>
    <fpuPresent>true</fpuPresent>
    <nvicPrioBits>3</nvicPrioBits>
    <vendorSystickConfig>false</vendorSystickConfig>
  </cpu>
  <addressUnitBits>8</addressUnitBits>
  <width>32</width>
  <size>0x20</size>
  <access>read-write</access>
  <resetValue>0x00000000</resetValue>
  <resetMask>0xFFFFFFFF</resetMask>
  <peripherals><peripheral>
    <name>ADC</name>
    <description>10-bit Analog to Digital Converter</description>
    
    <baseAddress>0x40034000</baseAddress>
    <size>32</size>
    <access>read-write</access>
    <addressBlock>
      <offset>0</offset>
      <size>0x1000</size>
      <usage>registers</usage>
    </addressBlock>
    <interrupt>
      <name>ADC</name>
      <description>ADC IRQ</description>
      <value>20</value>
    </interrupt>
    <registers>
      
      <register>
        <name>CTRL</name>
        <description>ADC Control</description>
        <addressOffset>0x0000</addressOffset>
        <access>read-write</access>
        <fields>
          <field>
            <name>START</name>
            <description>Start ADC Conversion</description>
            <bitRange>[0:0]</bitRange>
            <access>read-write</access>
          </field>
          <field>
            <name>PWR</name>
            <description>ADC Power Up</description>
            <bitRange>[1:1]</bitRange>
            <access>read-write</access>
          </field>
          <field>
            <name>REBUF_PWR</name>
            <description>ADC Reference Buffer Power Up</description>
            <bitRange>[3:3]</bitRange>
            <access>read-write</access>
          </field>
          <field>
            <name>CHGPUMP_PWR</name>
            <description>ADC Charge Pump Power Up</description>
            <bitRange>[4:4]</bitRange>
            <access>read-write</access>
          </field>
          <field>
            <name>REF_SCALE</name>
            <description>ADC Reference Scale</description>
            <bitRange>[8:8]</bitRange>
            <access>read-write</access>
          </field>
          <field>
            <name>SCALE</name>
            <description>ADC Scale</description>
            <bitRange>[9:9]</bitRange>
            <access>read-write</access>
          </field>
          <field>
            <name>CLK_EN</name>
            <description>ADC Clock Enable</description>
            <bitRange>[11:11]</bitRange>
            <access>read-write</access>
          </field>
          <field>
            <name>CH_SEL</name>
            <description>ADC Channel Select</description>
            <bitRange>[16:12]</bitRange>
            <access>read-write</access>
            <enumeratedValues>
              <enumeratedValue>
                <name>AIN0</name>
                <value>0</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>AIN1</name>
                <value>1</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>AIN2</name>
                <value>2</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>AIN3</name>
                <value>3</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>AIN4</name>
                <value>4</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>AIN5</name>
                <value>5</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>AIN6</name>
                <value>6</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>AIN7</name>
                <value>7</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>VcoreA</name>
                <value>8</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>VcoreB</name>
                <value>9</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>Vrxout</name>
                <value>10</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>Vtxout</name>
                <value>11</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>VddA</name>
                <value>12</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>VddB</name>
                <description>VddB/4</description>
                <value>13</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>Vddio</name>
                <description>Vddio/4</description>
                <value>14</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>Vddioh</name>
                <description>Vddioh/4</description>
                <value>15</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>VregI</name>
                <description>VregI/4</description>
                <value>16</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field>
            <name>ADC_DIVSEL</name>
            <description>Scales the external inputs, all inputs are scaled the same</description>
            <bitRange>[18:17]</bitRange>
            <access>read-write</access>
            <enumeratedValues>
              <enumeratedValue>
                <name>DIV1</name>
                <value>0</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>DIV2</name>
                <value>1</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>DIV3</name>
                <value>2</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>DIV4</name>
                <value>3</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field>
            <name>DATA_ALIGN</name>
            <description>ADC Data Alignment Select</description>
            <bitRange>[20:20]</bitRange>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      
      <register>
        <name>STATUS</name>
        <description>ADC Status</description>
        <addressOffset>0x0004</addressOffset>
        <access>read-write</access>
        <fields>
          <field>
            <name>ACTIVE</name>
            <description>ADC Conversion In Progress</description>
            <bitRange>[0:0]</bitRange>
            <access>read-only</access>
          </field>
          <field>
            <name>AFE_PWR_UP_ACTIVE</name>
            <description>AFE Power Up Delay Active</description>
            <bitRange>[2:2]</bitRange>
            <access>read-only</access>
          </field>
          <field>
            <name>OVERFLOW</name>
            <description>ADC Overflow</description>
            <bitRange>[3:3]</bitRange>
            <access>read-only</access>
          </field>
        </fields>
      </register>
      
      <register>
        <name>DATA</name>
        <description>ADC Output Data</description>
        <addressOffset>0x0008</addressOffset>
        <access>read-write</access>
        <fields>
          <field>
            <name>DATA</name>
            <description>ADC Converted Sample Data Output</description>
            <bitRange>[15:0]</bitRange>
            <access>read-only</access>
          </field>
        </fields>
      </register>
      
      <register>
        <name>INTR</name>
        <description>ADC Interrupt Control Register</description>
        <addressOffset>0x000C</addressOffset>
        <access>read-write</access>
        <fields>
          <field>
            <name>DONE_IE</name>
            <description>ADC Done Interrupt Enable</description>
            <bitRange>[0:0]</bitRange>
            <access>read-write</access>
          </field>
          <field>
            <name>REF_READY_IE</name>
            <description>ADC Reference Ready Interrupt Enable</description>
            <bitRange>[1:1]</bitRange>
            <access>read-write</access>
          </field>
          <field>
            <name>HI_LIMIT_IE</name>
            <description>ADC Hi Limit Monitor Interrupt Enable</description>
            <bitRange>[2:2]</bitRange>
            <access>read-write</access>
          </field>
          <field>
            <name>LO_LIMIT_IE</name>
            <description>ADC Lo Limit Monitor Interrupt Enable</description>
            <bitRange>[3:3]</bitRange>
            <access>read-write</access>
          </field>
          <field>
            <name>OVERFLOW_IE</name>
            <description>ADC Overflow Interrupt Enable</description>
            <bitRange>[4:4]</bitRange>
            <access>read-write</access>
          </field>
          <field>
            <name>DONE_IF</name>
            <description>ADC Done Interrupt Flag</description>
            <bitRange>[16:16]</bitRange>
            <access>read-write</access>
            <modifiedWriteValues>oneToClear</modifiedWriteValues>
          </field>
          <field>
            <name>REF_READY_IF</name>
            <description>ADC Reference Ready Interrupt Flag</description>
            <bitRange>[17:17]</bitRange>
            <access>read-write</access>
            <modifiedWriteValues>oneToClear</modifiedWriteValues>
          </field>
          <field>
            <name>HI_LIMIT_IF</name>
            <description>ADC Hi Limit Monitor Interrupt Flag</description>
            <bitRange>[18:18]</bitRange>
            <access>read-write</access>
            <modifiedWriteValues>oneToClear</modifiedWriteValues>
          </field>
          <field>
            <name>LO_LIMIT_IF</name>
            <description>ADC Lo Limit Monitor Interrupt Flag</description>
            <bitRange>[19:19]</bitRange>
            <access>read-write</access>
            <modifiedWriteValues>oneToClear</modifiedWriteValues>
          </field>
          <field>
            <name>OVERFLOW_IF</name>
            <description>ADC Overflow Interrupt Flag</description>
            <bitRange>[20:20]</bitRange>
            <access>read-write</access>
            <modifiedWriteValues>oneToClear</modifiedWriteValues>
          </field>
          <field>
            <name>PENDING</name>
            <description>ADC Interrupt Pending Status</description>
            <bitRange>[22:22]</bitRange>
            <access>read-only</access>
          </field>
        </fields>
      </register>
      
      <register>
        <dim>4</dim>
        <dimIncrement>4</dimIncrement>
        <name>LIMIT[%s]</name>
        <description>ADC Limit</description>
        <addressOffset>0x0010</addressOffset>
        <access>read-write</access>
        <fields>
          <field>
            <name>CH_LO_LIMIT</name>
            <description>Low Limit Threshold</description>
            <bitRange>[9:0]</bitRange>
            <access>read-write</access>
          </field>
          <field>
            <name>CH_HI_LIMIT</name>
            <description>High Limit Threshold</description>
            <bitRange>[21:12]</bitRange>
            <access>read-write</access>
          </field>
          <field>
            <name>CH_SEL</name>
            <description>ADC Channel Select</description>
            <bitRange>[28:24]</bitRange>
            <access>read-write</access>
          </field>
          <field>
            <name>CH_LO_LIMIT_EN</name>
            <description>Low Limit Monitoring Enable</description>
            <bitRange>[29:29]</bitRange>
            <access>read-write</access>
          </field>
          <field>
            <name>CH_HI_LIMIT_EN</name>
            <description>High Limit Monitoring Enable</description>
            <bitRange>[30:30]</bitRange>
            <access>read-write</access>
          </field>
        </fields>
      </register>
    </registers>
  </peripheral>
  
<!--ADC 10-bit Analog to Digital Converter--><peripheral>
    
    <name>AESKEYS</name>
    <description>AES Keys.</description>
    <baseAddress>0x40005000</baseAddress>
    <addressBlock>
      <offset>0x00</offset>
      <size>0x400</size>
      <usage>registers</usage>
    </addressBlock>
    <registers>
      <register>
        <name>SRAM_KEY</name>
        <description>AES SRAM KEY</description>
        <addressOffset>0x00</addressOffset>
        <size>32</size>
      </register>
      <register>
        <name>CODE_KEY</name>
        <description>AES CODE Key </description>
        <addressOffset>0x20</addressOffset>
      </register>
      <register>
        <name>DATA_KEY</name>
        <description>AES DATA KEY</description>
        <addressOffset>0x40</addressOffset>
      </register>
    </registers>
  </peripheral>
  
<!--AESKEYS AES Keys.--><peripheral>
  <name>CAMERAIF</name>
  <description>Parallel Camera Interface.</description>
  <baseAddress>0x4000E000</baseAddress>
  <size>32</size>
  <access>read-write</access>
  <addressBlock>
   <offset>0</offset>
   <size>0x1000</size>
   <usage>registers</usage>
  </addressBlock>
  <interrupt>
   <name>CameraIF</name>
   <value>91</value>
  </interrupt>
  <registers>

   <register>
    <name>VER</name>
    <description>Hardware Version.</description>
    <addressOffset>0x0000</addressOffset>
    <access>read-write</access>
    <fields>
     <field>
      <name>minor</name>
      <description>Minor Version Number.</description>
      <bitRange>[7:0]</bitRange>
      <access>read-write</access>
     </field>
     <field>
      <name>major</name>
      <description>Major Version Number.</description>
      <bitRange>[15:8]</bitRange>
      <access>read-write</access>
     </field>
    </fields>
   </register>

   <register>
    <name>FIFO_SIZE</name>
    <description>FIFO Depth.</description>
    <addressOffset>0x0004</addressOffset>
    <access>read-write</access>
    <fields>
     <field>
      <name>fifo_size</name>
      <description>FIFO size.</description>
      <bitRange>[7:0]</bitRange>
      <access>read-write</access>
     </field>
    </fields>
   </register>

   <register>
    <name>CTRL</name>
    <description>Control Register.</description>
    <addressOffset>0x0008</addressOffset>
    <access>read-write</access>
    <fields>
     <field>
      <name>READ_MODE</name>
      <description>Read Mode.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>2</bitWidth>
      <access>read-write</access>
      <enumeratedValues>
       <enumeratedValue>
        <name>dis</name>
        <description>Camera Interface Disabled.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>single_img</name>
        <description>Single Image Capture.</description>
        <value>1</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>continuous</name>
        <description>Continuous Image Capture.</description>
        <value>2</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>DATA_WIDTH</name>
      <description>Data Width.</description>
      <bitOffset>2</bitOffset>
      <bitWidth>2</bitWidth>
      <access>read-write</access>
      <enumeratedValues>
       <enumeratedValue>
        <name>8bit</name>
        <description>8 bit.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>10bit</name>
        <description>10 bit.</description>
        <value>1</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>12bit</name>
        <description>12 bit.</description>
        <value>2</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>DS_TIMING_EN</name>
      <description>DS Timing Enable.</description>
      <bitOffset>4</bitOffset>
      <bitWidth>1</bitWidth>
      <access>read-write</access>
      <enumeratedValues>
       <enumeratedValue>
        <name>dis</name>
        <description>Timing from VSYNC and HSYNC.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>en</name>
        <description>Timing embedded in data using SAV and EAV codes.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>FIFO_THRSH</name>
      <description>Data FIFO Threshold.</description>
      <bitOffset>5</bitOffset>
      <bitWidth>5</bitWidth>
      <access>read-write</access>
     </field>
     <field>
      <name>RX_DMA</name>
      <description>DMA Enable.</description>
      <bitOffset>10</bitOffset>
      <bitWidth>1</bitWidth>
      <access>read-write</access>
      <enumeratedValues>
       <enumeratedValue>
        <name>dis</name>
        <description>DMA disabled.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>en</name>
        <description>DMA enabled.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>RX_DMA_THRSH</name>
      <description>DMA Threshold.</description>
      <bitOffset>11</bitOffset>
      <bitWidth>4</bitWidth>
      <access>read-write</access>
     </field>
     <field>
      <name>PCIF_SYS</name>
      <description>PCIF Control.</description>
      <bitOffset>15</bitOffset>
      <bitWidth>1</bitWidth>
      <access>read-write</access>
      <enumeratedValues>
       <enumeratedValue>
        <name>dis</name>
        <description>PCIF disabled.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>en</name>
        <description>PCIF enabled.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
    </fields>
   </register>

   <register>
    <name>INT_EN</name>
    <description>Interupt Enable Register.</description>
    <addressOffset>0x000C</addressOffset>
    <access>read-write</access>
    <fields>
     <field>
      <name>IMG_DONE</name>
      <description>Image Done.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>1</bitWidth>
      <access>read-write</access>
     </field>
     <field>
      <name>FIFO_FULL</name>
      <description>FIFO Full.</description>
      <bitOffset>1</bitOffset>
      <bitWidth>1</bitWidth>
      <access>read-write</access>
     </field>
     <field>
      <name>FIFO_THRESH</name>
      <description>FIFO Threshold Level Met.</description>
      <bitOffset>2</bitOffset>
      <bitWidth>1</bitWidth>
      <access>read-write</access>
     </field>
     <field>
      <name>FIFO_NOT_EMPTY</name>
      <description>FIFO Not Empty.</description>
      <bitOffset>3</bitOffset>
      <bitWidth>1</bitWidth>
      <access>read-write</access>
     </field>
    </fields>
   </register>

   <register>
    <name>INT_FL</name>
    <description>Interupt Flag Register.</description>
    <addressOffset>0x0010</addressOffset>
    <access>read-write</access>
    <fields>
     <field>
      <name>IMG_DONE</name>
      <description>Image Done.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>1</bitWidth>
      <access>read-write</access>
     </field>
     <field>
      <name>FIFO_FULL</name>
      <description>FIFO Full.</description>
      <bitOffset>1</bitOffset>
      <bitWidth>1</bitWidth>
      <access>read-write</access>
     </field>
     <field>
      <name>FIFO_THRESH</name>
      <description>FIFO Threshold Level Met.</description>
      <bitOffset>2</bitOffset>
      <bitWidth>1</bitWidth>
      <access>read-write</access>
     </field>
     <field>
      <name>FIFO_NOT_EMPTY</name>
      <description>FIFO Not Empty.</description>
      <bitOffset>3</bitOffset>
      <bitWidth>1</bitWidth>
      <access>read-write</access>
     </field>
    </fields>
   </register>

   <register>
    <name>DS_TIMING_CODES</name>
    <description>DS Timing Code Register.</description>
    <addressOffset>0x0014</addressOffset>
    <access>read-write</access>
    <fields>
     <field>
      <name>SAV</name>
      <description>Start Active Video Code.</description>
      <bitRange>[7:0]</bitRange>
      <access>read-write</access>
     </field>
     <field>
      <name>EAV</name>
      <description>End Active Video Code.</description>
      <bitRange>[15:8]</bitRange>
      <access>read-write</access>
     </field>
    </fields>
   </register>

   <register>
    <name>FIFO_DATA</name>
    <description>FIFO DATA Register.</description>
    <addressOffset>0x0030</addressOffset>
    <access>read-write</access>
    <fields>
     <field>
      <name>DATA</name>
      <description>Data from FIFO to be read by DMA.</description>
      <bitRange>[31:0]</bitRange>
      <access>read-write</access>
     </field>
    </fields>
   </register>
  </registers>
 </peripheral>

<!--CAMERAIF Parallel Camera Interface.--><peripheral>
    <name>CLCD</name>
    <description>Color LCD Controller</description>
    <baseAddress>0x40031000</baseAddress>
    <addressBlock>
      <offset>0x00</offset>
      <size>0x1000</size>
      <usage>registers</usage>
    </addressBlock>
    <registers>
      <register>
        <name>CLKCTRL</name>
        <description>LCD Clock Control Register</description>
        <addressOffset>0x000</addressOffset>
        <fields>
          <field>
            <name>CLKDIV</name>
            <description>Clock divsor</description>
            <bitOffset>0</bitOffset>
            <bitWidth>8</bitWidth>
          </field>
          <field>
            <name>ACB</name>
            <description>ACB</description>
            <bitOffset>8</bitOffset>
            <bitWidth>8</bitWidth>
          </field>
          <field>
            <name>DPOL</name>
            <description>D Polarity</description>
            <bitOffset>16</bitOffset>
            <bitWidth>1</bitWidth>
            <enumeratedValues>
              <enumeratedValue>
                <name>ACTIVEHI</name>
                <description>Active Hi</description>
                <value>0</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>ACTIVELO</name>
                <description>Active Low</description>
                <value>1</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field>
            <name>VPOL</name>
            <description>V Polarity</description>
            <bitOffset>17</bitOffset>
            <bitWidth>1</bitWidth>
            <enumeratedValues>
              <enumeratedValue>
                <name>ACTIVEHI</name>
                <description>Active Hi</description>
                <value>1</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>ACTIVELO</name>
                <description>Active Low</description>
                <value>0</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field>
            <name>HPOL</name>
            <description>H Polarity</description>
            <bitOffset>18</bitOffset>
            <bitWidth>1</bitWidth>
            <enumeratedValues>
              <enumeratedValue>
                <name>ACTIVEHI</name>
                <description>Active Hi</description>
                <value>1</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>ACTIVELO</name>
                <description>Active Low</description>
                <value>0</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field>
            <name>EDGE</name>
            <description>Edge Selection</description>
            <bitOffset>19</bitOffset>
            <bitWidth>1</bitWidth>
            <enumeratedValues>
              <enumeratedValue>
                <name>RISEEDGE</name>
                <description>Rising edge</description>
                <value>0</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>FALLEDGE</name>
                <description>Falling Edge</description>
                <value>1</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field>
            <name>PASCLK</name>
            <description>Clock Active on Data</description>
            <bitOffset>20</bitOffset>
            <bitWidth>1</bitWidth>
            <enumeratedValues>
              <enumeratedValue>
                <name>ALWAYSACTIVE</name>
                <description>Always Active</description>
                <value>0</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>ACTIVEONDATA</name>
                <description>ACTIVE ON DATA</description>
                <value>1</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
        </fields>
      </register>
      <register>
        <name>VTIM0</name>
        <description>LCD Vertical Timing 0 Register</description>
        <addressOffset>0x004</addressOffset>
        <fields>
          <field>
            <name>VLINES</name>
            <description>V Lines</description>
            <bitOffset>0</bitOffset>
            <bitWidth>8</bitWidth>
          </field>
          <field>
            <name>VBACKPORCH</name>
            <description>V BACK PORCH</description>
            <bitOffset>16</bitOffset>
            <bitWidth>8</bitWidth>
          </field>
        </fields>
      </register>
      <register>
        <name>VTIM1</name>
        <description>LCD Vertical Timing 1 Register</description>
        <addressOffset>0x008</addressOffset>
        <fields>
          <field>
            <name>VSYNCWIDTH</name>
            <description>V Sync Width</description>
            <bitOffset>0</bitOffset>
            <bitWidth>8</bitWidth>
          </field>
          <field>
            <name>VFRONTPORCH</name>
            <description>V Front PORCH</description>
            <bitOffset>16</bitOffset>
            <bitWidth>8</bitWidth>
          </field>
        </fields>
      </register>
      <register>
        <name>HTIM</name>
        <description>LCD Horizontal Timing Register.</description>
        <addressOffset>0x00C</addressOffset>
        <fields>
          <field>
            <name>HSYNCWIDTH</name>
            <description>Horizontal Sync Width in CLCD Clocks from 1 to 256 HSync Width = HSYNCWIDTH+1 Clocks</description>
            <bitOffset>0</bitOffset>
            <bitWidth>8</bitWidth>
          </field>
          <field>
            <name>HFRONTPORCH</name>
            <description>Horizontal Front Porch size in lines from 1 to 256</description>
            <bitOffset>8</bitOffset>
            <bitWidth>8</bitWidth>
          </field>
          <field>
            <name>HSIZE</name>
            <description>Horizontal Front Porch Size in Pixels = (HSIZE + 1) *16</description>
            <bitOffset>16</bitOffset>
            <bitWidth>8</bitWidth>
          </field>
          <field>
            <name>HBACKPORCH</name>
            <description>Horizontal Back Porch size in CLCD Clocks from 1 to 256 -&gt; HBP= (HBACKPORCH+1) </description>
            <bitOffset>24</bitOffset>
            <bitWidth>8</bitWidth>
          </field>
        </fields>
      </register>
      <register>
        <name>CTRL</name>
        <description>LCD Control Register</description>
        <addressOffset>0x010</addressOffset>
        <fields>
          <field>
            <name>EN</name>
            <description>LCD Enable</description>
            <bitOffset>0</bitOffset>
            <bitWidth>1</bitWidth>
            <enumeratedValues>
              <enumeratedValue>
                <name>DISABLE</name>
                <description>Disable</description>
                <value>0</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>ENABLE</name>
                <description>Enable</description>
                <value>1</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field>
            <name>VISEL</name>
            <description>VI Select</description>
            <bitOffset>1</bitOffset>
            <bitWidth>2</bitWidth>
            <enumeratedValues>
              <enumeratedValue>
                <name>ONVERTSYNC</name>
                <description>On Vertical Sync</description>
                <value>0</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>ONVERTBACKPORCH</name>
                <description>On Vertical Back Porch</description>
                <value>1</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>ONACTIVEVIDEO</name>
                <description>On Active Video</description>
                <value>2</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>ONVERTFRONTPORCH</name>
                <description>On Vertical Front Porch</description>
                <value>3</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field>
            <name>DISPTYPE</name>
            <description>Display Type</description>
            <bitOffset>4</bitOffset>
            <bitWidth>4</bitWidth>
            <enumeratedValues>
              <enumeratedValue>
                <name>STNCOLOR8BIT</name>
                <description>STN Color 8 bit</description>
                <value>4</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>CLCD</name>
                <description>CLCD</description>
                <value>8</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field>
            <name>BPP</name>
            <description>BPP</description>
            <bitOffset>8</bitOffset>
            <bitWidth>3</bitWidth>
            <enumeratedValues>
              <enumeratedValue>
                <name>BPP1</name>
                <description>BPP 1</description>
                <value>0</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>BPP2</name>
                <description>BPP 2</description>
                <value>1</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>BPP4</name>
                <description>BPP 4</description>
                <value>2</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>BPP8</name>
                <description>BPP 8</description>
                <value>3</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>BPP16</name>
                <description>BPP 16</description>
                <value>4</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>BPP24</name>
                <description>BPP 24</description>
                <value>5</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field>
            <name>MODE565</name>
            <description>MODE565</description>
            <bitOffset>11</bitOffset>
            <bitWidth>1</bitWidth>
            <enumeratedValues>
              <enumeratedValue>
                <name>BGR556</name>
                <description>MODE 556</description>
                <value>0</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>RGB565</name>
                <description>MODE 565</description>
                <value>1</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field>
            <name>EMODE</name>
            <description>EMODE</description>
            <bitOffset>12</bitOffset>
            <bitWidth>2</bitWidth>
            <enumeratedValues>
              <enumeratedValue>
                <name>LLBP</name>
                <description>LLBP</description>
                <value>0</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>BBBP</name>
                <description>BBBP</description>
                <value>1</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>LBBP</name>
                <description>LBBP</description>
                <value>2</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>RFU</name>
                <description>RFU</description>
                <value>3</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field>
            <name>C24</name>
            <description>C24</description>
            <bitOffset>15</bitOffset>
            <bitWidth>1</bitWidth>
          </field>
          <field>
            <name>BURST</name>
            <description>BURST</description>
            <bitOffset>19</bitOffset>
            <bitWidth>2</bitWidth>
            <enumeratedValues>
              <enumeratedValue>
                <name>WORDS4</name>
                <description>WORDS4</description>
                <value>0</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>WORDS8</name>
                <description>WORDS8</description>
                <value>1</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field>
            <name>LPOL</name>
            <description>LPOL</description>
            <bitOffset>21</bitOffset>
            <bitWidth>1</bitWidth>
            <enumeratedValues>
              <enumeratedValue>
                <name>ACTIVEHI</name>
                <description>ACTIVE HIGH</description>
                <value>0</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>ACTIVELO</name>
                <description>ACTIVE LOW</description>
                <value>1</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field>
            <name>PEN</name>
            <description>PEN</description>
            <bitOffset>22</bitOffset>
            <bitWidth>1</bitWidth>
          </field>
        </fields>
      </register>
      <register>
        <dim>2</dim>
        <dimIncrement>4</dimIncrement>
        <name>FRBUF[%s]</name>
        <description>Frame Buffer Address Register.</description>
        <addressOffset>0x018</addressOffset>
        <fields>
          <field>
            <name>ADDR</name>
            <description>Frame Buffer Address.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>32</bitWidth>
          </field>
        </fields>
      </register>
      <register>
        <name>INTEN</name>
        <description>LCD Interrupt Enable Register.</description>
        <addressOffset>0x020</addressOffset>
        <fields>
          <field>
            <name>UFLO</name>
            <description>Under FLow Interupt Enable</description>
            <bitOffset>0</bitOffset>
            <bitWidth>1</bitWidth>
          </field>
          <field>
            <name>ADRRDY</name>
            <description>Address Ready Interupt Enable</description>
            <bitOffset>1</bitOffset>
            <bitWidth>1</bitWidth>
          </field>
          <field>
            <name>VCI</name>
            <description>VCI Interupt Enable</description>
            <bitOffset>2</bitOffset>
            <bitWidth>1</bitWidth>
          </field>
          <field>
            <name>BERR</name>
            <description>BERR Interupt Enable</description>
            <bitOffset>3</bitOffset>
            <bitWidth>1</bitWidth>
          </field>
        </fields>
      </register>
      <register>
        <name>INTFL</name>
        <description>LCD Interrupt Status Register.</description>
        <addressOffset>0x024</addressOffset>
        <modifiedWriteValues>oneToClear</modifiedWriteValues>
        <fields>
          <field>
            <name>UFLO</name>
            <description>Under FLow Interupt Status</description>
            <bitOffset>0</bitOffset>
            <bitWidth>1</bitWidth>
            <enumeratedValues>
              <usage>read</usage>
              <enumeratedValue>
                <name>Inactive</name>
                <description>No interrupt pending</description>
                <value>0</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>Pending</name>
                <description>Interrupt pending</description>
                <value>1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <usage>write</usage>
              <enumeratedValue>
                <name>Clear</name>
                <description>Clears the interrupt flag</description>
                <value>1</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field>
            <name>ADRRDY</name>
            <description>Address Ready Interupt Status</description>
            <bitOffset>1</bitOffset>
            <bitWidth>1</bitWidth>
            <enumeratedValues>
              <usage>read</usage>
              <enumeratedValue>
                <name>Inactive</name>
                <description>No interrupt pending</description>
                <value>0</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>Pending</name>
                <description>Interrupt pending</description>
                <value>1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <usage>write</usage>
              <enumeratedValue>
                <name>Clear</name>
                <description>Clears the interrupt flag</description>
                <value>1</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field>
            <name>VCI</name>
            <description>VCI Interupt Status</description>
            <bitOffset>2</bitOffset>
            <bitWidth>1</bitWidth>
            <enumeratedValues>
              <usage>read</usage>
              <enumeratedValue>
                <name>Inactive</name>
                <description>No interrupt pending</description>
                <value>0</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>Pending</name>
                <description>Interrupt pending</description>
                <value>1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <usage>write</usage>
              <enumeratedValue>
                <name>Clear</name>
                <description>Clears the interrupt flag</description>
                <value>1</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field>
            <name>BERR</name>
            <description>BERR Interupt Status</description>
            <bitOffset>3</bitOffset>
            <bitWidth>1</bitWidth>
            <enumeratedValues>
              <usage>read</usage>
              <enumeratedValue>
                <name>Inactive</name>
                <description>No interrupt pending</description>
                <value>0</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>Pending</name>
                <description>Interrupt pending</description>
                <value>1</value>
              </enumeratedValue>
            </enumeratedValues>
            <enumeratedValues>
              <usage>write</usage>
              <enumeratedValue>
                <name>Clear</name>
                <description>Clears the interrupt flag</description>
                <value>1</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field>
            <name>LCDIDLE</name>
            <description>LCD IDLE Staus</description>
            <bitOffset>8</bitOffset>
            <bitWidth>1</bitWidth>
            <enumeratedValues>
              <enumeratedValue>
                <name>BUSY</name>
                <description>BUSY</description>
                <value>0</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>READY</name>
                <description>READY</description>
                <value>1</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
        </fields>
      </register>
      <register>
        <name>HVPHA</name>
        <description>LCD PHASE, between HSYNC and VSYNC, Register.</description>
        <addressOffset>0x030</addressOffset>
        <fields>
          <field>
            <name>THV</name>
            <description>Phase Difference in number of pixel clock.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>8</bitWidth>
          </field>
        </fields>
      </register>
      <register>
        <dim>256</dim>
        <dimIncrement>4</dimIncrement>
        <name>PALETTE[%s]</name>
        <description>Palette</description>
        <addressOffset>0x400</addressOffset>
        <fields>
          <field>
            <name>RED</name>
            <description>Red Data for Pallet Entry.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>8</bitWidth>
          </field>
          <field>
            <name>GREEN</name>
            <description>Green Data for Pallet Entry.</description>
            <bitOffset>8</bitOffset>
            <bitWidth>8</bitWidth>
          </field>
          <field>
            <name>BLUE</name>
            <description>Blue Data for Pallet Entry.</description>
            <bitOffset>16</bitOffset>
            <bitWidth>8</bitWidth>
          </field>
        </fields>
      </register>
    </registers>
  </peripheral>
<!--CLCD Color LCD Controller--><peripheral>
  <name>CTB</name>
  <description>The Cryptographic Toolbox is a combination of cryptographic engines and a secure cryptographic accelerator (SCA) used to provide advanced cryptographic security.</description>
  <baseAddress>0x40001000</baseAddress>
  <addressBlock>
   <offset>0x00</offset>
   <size>0x1000</size>
   <usage>registers</usage>
  </addressBlock>
  <interrupt>
   <name>Crypto_Engine</name>
   <description>Crypto Engine interrupt.</description>
   <value>27</value>
  </interrupt>
  <registers>
   <register>
    <name>CRYPTO_CTRL</name>
    <description>Crypto Control Register.</description>
    <addressOffset>0x00</addressOffset>
    <resetValue>0xC0000000</resetValue>
    <fields>
     <field>
      <name>RST</name>
      <description>Reset. This bit is used to reset the crypto accelerator.  All crypto internal states and related registers are reset to their default reset values. Control register such as CRYPTO_CTRL, CIPHER_CTRL, HASH_CTRL, CRC_CTRL, MAA_CTRL (with the exception of the STC bit), HASH_MSG_SZ_[3:0] and MAA_MAWS will retain their values. This bit will automatically clear itself after one cycle.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <name>reset_write</name>
       <usage>write</usage>
       <enumeratedValue>
        <name>reset</name>
        <description>Starts reset operation.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
      <enumeratedValues>
       <name>reset_read</name>
       <usage>read</usage>
       <enumeratedValue>
        <name>reset_done</name>
        <description>Reset complete.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>busy</name>
        <description>Reset in progress.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>INTR</name>
      <description>Interrupt Enable. Generates an interrupt when done or error set.</description>
      <bitOffset>1</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>dis</name>
        <description>Disable</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>en</name>
        <description>Enable</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>SRC</name>
      <description>Source Select.  This bit selects the hash function and CRC generator input source.</description>
      <bitOffset>2</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>inputFIFO</name>
        <description>Input FIFO</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>outputFIFO</name>
        <description>Output FIFO</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field derivedFrom="INTR">
      <name>BSO</name>
      <description>Byte Swap Output. Note. No byte swap will occur if there is not a full word.</description>
      <bitOffset>4</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field derivedFrom="INTR">
      <name>BSI</name>
      <description>Byte Swap Input. Note. No byte swap will occur if there is not a full word.</description>
      <bitOffset>5</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field derivedFrom="INTR">
      <name>WAIT_EN</name>
      <description>Wait Pin Enable. This can be used to hold off the crypto DMA until an external memory is ready. This is useful for transferring pages from NAND flash which may take several microseconds to become ready.</description>
      <bitOffset>6</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>WAIT_POL</name>
      <description>Wait Pin Polarity. When the wait pin is enabled, this bit selects its active state.</description>
      <bitOffset>7</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>activeLo</name>
        <description>Active Low.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>activeHi</name>
        <description>Active High.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>WRSRC</name>
      <description>Write FIFO Source Select. This field determines where data written to the write FIFO comes from. When data is written to the write FIFO, it is always written out the DMA. To decrypt or encrypt data, the write FIFO source should be set to the cipher output. To implement memcpy() or memset() functions, or to fill memory with random data, the write FIFO source should be set to the read FIFO. When calculating a HASH or CMAC, the write FIFO should be disabled.</description>
      <bitOffset>8</bitOffset>
      <bitWidth>2</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>none</name>
        <description>None.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>cipherOutput</name>
        <description>Cipher Output.</description>
        <value>1</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>readFIFO</name>
        <description>Read FIFO.</description>
        <value>2</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>RDSRC</name>
      <description>Read FIFO Source Select. This field selects the source of the read FIFO. Typically, it is set to use the DMA. To implement a memset() function, the read FIFO DMA should be disabled. To fill memory with random data or to hash random numbers, the read FIFO source should be set to the random number generator.</description>
      <bitOffset>10</bitOffset>
      <bitWidth>2</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>dmaDisabled</name>
        <description>DMA Disable.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>dmaOrApb</name>
        <description>DMA Or APB.</description>
        <value>1</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>rng</name>
        <description>RNG.</description>
        <value>2</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>FLAG_MODE</name>
      <description>Done Flag Mode. This bit configures the access behavior of the individual CRYPTO_CTRL Done flags (CRYPTO_CTRL[27:24]). This bit is cleared only on reset to limit upkeep, i.e. once set, it will remain set until a reset occurs.</description>
      <bitOffset>14</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>unres_wr</name>
        <description>Unrestricted write (0 or 1) of CRYPTO_CTRL[27:24] flags.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>res_wr</name>
        <description>Access to CRYPTO_CTRL[27:24] are write 1 to clear/write 0 no effect.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>DMADNEMSK</name>
      <description>DMA Done Flag Mask. This bit masks the DMA_DONE flag from being used to generate the CRYPTO_CTRL.DONE flag, and this disables a DMA_DONE condition from generating and interrupt. The DMA_DONE flag itself is unaffected and still may be monitored. This allows more optimal interrupt-driven crypto operations using DMA.</description>
      <bitOffset>15</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>not_used</name>
        <description>DMA_DONE not used in setting CRYPTO_CTRL.DONE bit.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>used</name>
        <description>DMA_DONE used in setting CRYPTO_CTRL.DONE bit.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>DMA_DONE</name>
      <description>DMA Done. DMA write/read operation is complete. This bit must be cleared before starting a DMA operation.</description>
      <bitOffset>24</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>notDone</name>
        <description>Not Done.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>done</name>
        <description>Done.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field derivedFrom="DMA_DONE">
      <name>GLS_DONE</name>
      <description>Galois Done. FIFO is full and CRC or Hamming Code Generator is enabled. This bit must be cleared before starting a CRC operation Note that DMA_DONE must be polled instead of this bit to determine the end of DMA operation during the utilization of Hamming Code Generator.</description>
      <bitOffset>25</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field derivedFrom="DMA_DONE">
      <name>HSH_DONE</name>
      <description>Hash Done. SHA operation is complete. This bit must be cleared before starting a HASH operation.</description>
      <bitOffset>26</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field derivedFrom="DMA_DONE">
      <name>CPH_DONE</name>
      <description>Cipher Done. Either AES or DES encryption/decryption operation is complete. This bit must be cleared before starting a cipher operation.</description>
      <bitOffset>27</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>ERR</name>
      <description>AHB Bus Error. This bit is set when the DMA encounters a bus error during a read or write operation. Once this bit is set, the DMA will stop. This bit can only be cleared by resetting the crypto block.</description>
      <bitOffset>29</bitOffset>
      <bitWidth>1</bitWidth>
      <access>read-only</access>
      <enumeratedValues>
       <enumeratedValue>
        <name>noError</name>
        <description>No Error.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>error</name>
        <description>Error.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>RDY</name>
      <description>Ready. Crypto block ready for more data.</description>
      <bitOffset>30</bitOffset>
      <bitWidth>1</bitWidth>
      <access>read-only</access>
      <enumeratedValues>
       <enumeratedValue>
        <name>busy</name>
        <description>Busy.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>ready</name>
        <description>Ready.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field derivedFrom="DMA_DONE">
      <name>DONE</name>
      <description>Done. One or more cryptographic calculations complete (logical OR of done flags).</description>
      <bitOffset>31</bitOffset>
      <bitWidth>1</bitWidth>
      <access>read-only</access>
     </field>
    </fields>
   </register>
   <register>
    <name>CIPHER_CTRL</name>
    <description>Cipher Control Register.</description>
    <addressOffset>0x04</addressOffset>
    <fields>
     <field>
      <name>ENC</name>
      <description>Encrypt. Select encryption or decryption of input data.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>encrypt</name>
        <description>Encrypt.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>decrypt</name>
        <description>Decrypt.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>KEY</name>
      <description>Load Key from crypto DMA. This bit is automatically cleared by hardware after the DMA has completed loading the key. When the DMA operation is done, it sets the appropriate crypto DMA Done flag.</description>
      <bitOffset>1</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>complete</name>
        <description>No operation/complete.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>start</name>
        <description>Start operation.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>SRC</name>
      <description>Source of Random key.</description>
      <bitOffset>2</bitOffset>
      <bitWidth>2</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>cipherKey</name>
        <description>User cipher key (0x4000_1060).</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>regFile</name>
        <description>Key from battery-backed register file (0x4000_5000 to 0x4000_501F).</description>
        <value>2</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>qspiKey_regFile</name>
        <description>Key from battery-backed register file (0x4000_5020 to 0x4000_502F).</description>
        <value>3</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>CIPHER</name>
      <description>Cipher Operation Select.  Symmetric Block Cipher algorithm selection or memory operation.</description>
      <bitOffset>4</bitOffset>
      <bitWidth>3</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>dis</name>
        <description>Disabled.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>aes128</name>
        <description>AES 128.</description>
        <value>1</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>aes192</name>
        <description>AES 192.</description>
        <value>2</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>aes256</name>
        <description>AES 256.</description>
        <value>3</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>des</name>
        <description>DES.</description>
        <value>4</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>tdes</name>
        <description>Triple DES.</description>
        <value>5</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>MODE</name>
      <description>Mode Select. Mode of operation for block cipher or memory operation. DES/TDES cannot be used in CFB, OFB or CTR modes.</description>
      <bitOffset>8</bitOffset>
      <bitWidth>3</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>ECB</name>
        <description>ECB Mode.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>CBC</name>
        <description>CBC Mode.</description>
        <value>1</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>CFB</name>
        <description>CFB (AES only).</description>
        <value>2</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>OFB</name>
        <description>OFB (AES only).</description>
        <value>3</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>CTR</name>
        <description>CTR (AES only).</description>
        <value>4</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>HVC</name>
      <description>H Vector Computation.</description>
      <bitOffset>11</bitOffset>
      <bitWidth>1</bitWidth>
      <access>read-only</access>
     </field>
     <field>
      <name>DTYPE</name>
      <description>GCM/CCM data type.</description>
      <bitOffset>12</bitOffset>
      <bitWidth>1</bitWidth>
      <access>read-only</access>
     </field>
     <field>
      <name>CCMM</name>
      <description>CCM M Parameter.</description>
      <bitOffset>13</bitOffset>
      <bitWidth>3</bitWidth>
      <access>read-only</access>
     </field>
     <field>
      <name>CCML</name>
      <description>CCM L Parameter.</description>
      <bitOffset>16</bitOffset>
      <bitWidth>3</bitWidth>
      <access>read-only</access>
     </field>
    </fields>
   </register>
   <register>
    <name>HASH_CTRL</name>
    <description>HASH Control Register.</description>
    <addressOffset>0x08</addressOffset>
    <fields>
     <field>
      <name>INIT</name>
      <description>Initialize. Initializes hash registers with standard constants.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>nop</name>
        <description>No operation/complete.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>start</name>
        <description>Start operation.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>XOR</name>
      <description>XOR data with IV from cipher block. Useful when calculating HMAC to XOR the input pad and output pad.</description>
      <bitOffset>1</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>dis</name>
        <description>Disable.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>en</name>
        <description>Enable.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>HASH</name>
      <description>Hash function selection.</description>
      <bitOffset>2</bitOffset>
      <bitWidth>3</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>dis</name>
        <description>Disabled.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>sha1</name>
        <description>SHA-1.</description>
        <value>1</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>sha224</name>
        <description>SHA 224.</description>
        <value>2</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>sha256</name>
        <description>SHA 256.</description>
        <value>3</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>sha384</name>
        <description>SHA 384.</description>
        <value>4</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>sha512</name>
        <description>SHA 512.</description>
        <value>5</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>LAST</name>
      <description>Last Message Bit. This bit shall be set along with the HASH_MSG_SZ register prior to hashing the last 512 or 1024-bit block of the message data. It will allow automatic preprocessing of the last message padding, which includes the trailing bit 1, followed by the respective number of zero bits for the last block size and finally the message length represented in bytes. The bit will be automatically cleared at the same time the HASH DONE is set, designating the completion of the last message hash.</description>
      <bitOffset>5</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>noEffect</name>
        <description>No Effect.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>lastMsgData</name>
        <description>Last Message Data.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
    </fields>
   </register>
   <register>
    <name>CRC_CTRL</name>
    <description>CRC Control Register.</description>
    <addressOffset>0x0C</addressOffset>
    <fields>
     <field>
      <name>CRC</name>
      <description>Cyclic Redundancy Check Enable. The CRC cannot be enabled if the PRNG is enabled.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>dis</name>
        <description>Disable.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>en</name>
        <description>Enable.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>MSB</name>
      <description>MSB select. This bit selects the order of calculating CRC on data.</description>
      <bitOffset>1</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>lsbFirst</name>
        <description>LSB First.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>msbFirst</name>
        <description>MSB First.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field derivedFrom="CRC">
      <name>PRNG</name>
      <description>Pseudo Random Number Generator Enable. If entropy is disabled, this outputs one byte of pseudo random data per clock cycle. If entropy is enabled, data is output at a rate of one bit per clock cycle.</description>
      <bitOffset>2</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field derivedFrom="CRC">
      <name>ENT</name>
      <description>Entropy Enable. If the PRNG is enabled, this mixes the high frequency ring oscillator with the LFSR. If the PRNG is disabled, the raw entropy data is output at a rate of 1 bit per clock. This makes it possible to characterize the quality of the entropy source.</description>
      <bitOffset>3</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field derivedFrom="CRC">
      <name>HAM</name>
      <description>Hamming Code Enable. Enable hamming code calculation.</description>
      <bitOffset>4</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>HRST</name>
      <description>Hamming Reset. Reset Hamming code ECC generator for next block.</description>
      <bitOffset>5</bitOffset>
      <bitWidth>1</bitWidth>
      <access>write-only</access>
      <enumeratedValues>
       <usage>write</usage>
       <enumeratedValue>
        <name>reset</name>
        <description>Starts reset operation.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
    </fields>
   </register>
   <register>
    <name>DMA_SRC</name>
    <description>Crypto DMA Source Address.</description>
    <addressOffset>0x10</addressOffset>
    <fields>
     <field>
      <name>ADDR</name>
      <description>DMA Source Address.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>DMA_DEST</name>
    <description>Crypto DMA Destination Address.</description>
    <addressOffset>0x14</addressOffset>
    <fields>
     <field>
      <name>ADDR</name>
      <description>DMA Destination Address.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>DMA_CNT</name>
    <description>Crypto DMA Byte Count.</description>
    <addressOffset>0x18</addressOffset>
    <fields>
     <field>
      <name>COUNT</name>
      <description>DMA Byte Address.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <dim>4</dim>
    <dimIncrement>4</dimIncrement>
    <name>CRYPTO_DIN[%s]</name>
    <description>Crypto Data Input. Data input can be written to this register instead of using the DMA. This register writes to the FIFO. This register occupies four successive words to allow the use of multi-store instructions. Words can be written to any location, they will be placed in the FIFO in the order they are written. The endian swap input control bit affects this register.</description>
    <addressOffset>0x20</addressOffset>
    <access>write-only</access>
    <fields>
     <field>
      <name>DATA</name>
      <description>Crypto Data Input. Input can be written to this register instead of using DMA.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <dim>4</dim>
    <dimIncrement>4</dimIncrement>
    <name>CRYPTO_DOUT[%s]</name>
    <description>Crypto Data Output. Resulting data from cipher calculation. Data is placed in the lower words of these four registers depending on the algorithm. For block cipher modes, this register holds the result of most recent encryption or decryption operation. These registers are affected by the endian swap bits.</description>
    <addressOffset>0x30</addressOffset>
    <access>read-only</access>
    <fields>
     <field>
      <name>DATA</name>
      <description>Crypto Data Output. Resulting data from cipher calculation. Data is placed in the lower words of these four registers depending on algorithm.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>CRC_POLY</name>
    <description>CRC Polynomial. The polynomial to be used for Galois Field calculations (CRC or LFSR) should be written to this register. This register is affected by the MSB control bit.</description>
    <addressOffset>0x40</addressOffset>
    <resetValue>0xEDB88320</resetValue>
    <fields>
     <field>
      <name>DATA</name>
      <description>CRC Polynomial. The polynomial to be used for Galois Field calculations (CRC or LFSR) should be written to this register. This register is affected by the MSB control bit.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>CRC_VAL</name>
    <description>CRC Value. This is the state for the Galois Field. This register holds the result of a CRC calculation or the current state of the LFSR. This register is affected by the MSB control bit.</description>
    <addressOffset>0x44</addressOffset>
    <resetValue>0xFFFFFFFF</resetValue>
    <fields>
     <field>
      <name>VAL</name>
      <description>CRC Value. This is the state for the Galois Field. This register holds the result of a CRC calculation or the current state of LFSR. This register is affected by the MSB control bit.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>HAM_ECC</name>
    <description>Hamming ECC Register.</description>
    <addressOffset>0x4C</addressOffset>
    <fields>
     <field>
      <name>ECC</name>
      <description>Hamming ECC Value. These bits are the even parity of their corresponding bit groups.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>16</bitWidth>
     </field>
     <field>
      <name>PAR</name>
      <description>Parity. This is the parity of the entire array.</description>
      <bitOffset>16</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>even</name>
        <description>Even.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>odd</name>
        <description>Odd.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
    </fields>
   </register>
   <register>
    <dim>4</dim>
    <dimIncrement>4</dimIncrement>
    <name>CIPHER_INIT[%s]</name>
    <description>Initial Vector. For block cipher operations that use CBC, CFB, OFB, or CNTR modes, this register holds the initial value. This register is updated with each encryption or decryption operation. This register is affected by the endian swap bits.</description>
    <addressOffset>0x50</addressOffset>
    <fields>
     <field>
      <name>IVEC</name>
      <description>Initial Vector. For block cipher operations that use CBC, CFB, OFB, or CNTR modes, this register holds the initial value. This register is updated with each encryption or decryption operation. This register is affected by the endian swap bits.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <dim>8</dim>
    <dimIncrement>4</dimIncrement>
    <name>CIPHER_KEY[%s]</name>
    <description>Cipher Key.  This register holds the key used for block cipher operations. The lower words are used for block ciphers that use shorter key lengths. This register is affected by the endian swap input control bits.</description>
    <addressOffset>0x60</addressOffset>
    <access>write-only</access>
    <fields>
     <field>
      <name>KEY</name>
      <description>Cipher Key. This register holds the key used for block cipher operations. The lower words are used for block ciphers that use shorter kye lengths. This register is affected by the endian swap input control bits.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <dim>16</dim>
    <dimIncrement>4</dimIncrement>
    <name>HASH_DIGEST[%s]</name>
    <description>This register holds the calculated hash value. This register is affected by the endian swap bits.</description>
    <addressOffset>0x80</addressOffset>
    <fields>
     <field>
      <name>HASH</name>
      <description>This register holds the calculated hash value. This register is affected by the endian swap bits.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <dim>4</dim>
    <dimIncrement>4</dimIncrement>
    <name>HASH_MSG_SZ[%s]</name>
    <description>Message Size. This register holds the lowest 32-bit of message size in bytes.</description>
    <addressOffset>0xC0</addressOffset>
    <fields>
     <field>
      <name>MSGSZ</name>
      <description>Message Size. This register holds the lowest 32-bit of message size in bytes.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>AAD_LENGTH_0</name>
    <description>.AAD Length Register 0.</description>
    <addressOffset>0xD0</addressOffset>
    <resetValue>0x0</resetValue>
    <fields>
     <field>
      <name>LENGTH</name>
      <description>AAD length in bytes for AES GCM and CCM operations.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>AAD_LENGTH_1</name>
    <description>.AAD Length Register 1.</description>
    <addressOffset>0xD4</addressOffset>
    <resetValue>0x0</resetValue>
    <fields>
     <field>
      <name>LENGTH</name>
      <description>AAD length in bytes for AES GCM and CCM operations.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>PLD_LENGTH_0</name>
    <description>.PLD Length Register 0.</description>
    <addressOffset>0xD8</addressOffset>
    <resetValue>0x0</resetValue>
    <fields>
     <field>
      <name>LENGTH</name>
      <description>PLD length in bytes for AES GCM and CCM operations.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>PLD_LENGTH_1</name>
    <description>.LENGTH.</description>
    <addressOffset>0xDC</addressOffset>
    <resetValue>0x0</resetValue>
    <fields>
     <field>
      <name>LENGTH</name>
      <description>PLD length in bytes for AES GCM and CCM operations.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <dim>4</dim>
    <dimIncrement>4</dimIncrement>
    <name>TAGMIC[%s]</name>
    <description>TAG/MIC Registers.</description>
    <addressOffset>0xE0</addressOffset>
    <fields>
     <field>
      <name>LENGTH</name>
      <description>TAG/MIC output for AES GCM and CCM operations.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>SCA_CTRL0</name>
    <description>SCA Control 0 Register.</description>
    <addressOffset>0x100</addressOffset>
    <fields>
     <field>
      <name>STC</name>
      <description>Start Calculation.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>SCAIE</name>
      <description>SCA Interrupt Enable.</description>
      <bitOffset>1</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>disable</name>
        <description>Disable</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>enable</name>
        <description>Enable</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>ABORT</name>
      <description>Abort Operation.</description>
      <bitOffset>2</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>ERMEM</name>
      <description>Erase Cryptographic Memory.</description>
      <bitOffset>4</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>MANPARAM</name>
      <description>ECC Parameter Source.</description>
      <bitOffset>5</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>HWKEY</name>
      <description>Hardware Key Select.</description>
      <bitOffset>6</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>OPCODE</name>
      <description>SCA Opcode.</description>
      <bitOffset>8</bitOffset>
      <bitWidth>5</bitWidth>
     </field>
     <field>
      <name>MODADDR</name>
      <description>MODULO Address Offset.</description>
      <bitOffset>16</bitOffset>
      <bitWidth>5</bitWidth>
     </field>
     <field>
      <name>ECCSIZE</name>
      <description>ECC Size.</description>
      <bitOffset>24</bitOffset>
      <bitWidth>2</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>SCA_CTRL1</name>
    <description>SCA Advanced Control Register.</description>
    <addressOffset>0x104</addressOffset>
    <fields>
     <field>
      <name>MAN</name>
      <description>SCA Mode.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>auto</name>
        <description>Auto Mode</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>manual</name>
        <description>Manual Mode</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>AUTOCARRY</name>
      <description>Automatically propagate the carry for the next operation.</description>
      <bitOffset>1</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>PLUSONE</name>
      <description>Enable Carry propagation for the next operation.</description>
      <bitOffset>2</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>RESSELECT</name>
      <description>ALU Selection.</description>
      <bitOffset>3</bitOffset>
      <bitWidth>2</bitWidth>
     </field>
     <field>
      <name>CARRYPOS</name>
      <description>To set Carry location.</description>
      <bitOffset>8</bitOffset>
      <bitWidth>10</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>SCA_STAT</name>
    <description>SCA Status Register.</description>
    <addressOffset>0x108</addressOffset>
    <fields>
     <field>
      <name>BUSY</name>
      <description>SCA Busy.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>SCAIF</name>
      <description>SCA Interrupt Flag.</description>
      <bitOffset>1</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>PVF1</name>
      <description>Point 1 Verification Failed.</description>
      <bitOffset>2</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>PVF2</name>
      <description>Point 2 Verification Failed.</description>
      <bitOffset>3</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>FSMERR</name>
      <description>FSM Transition Error.</description>
      <bitOffset>4</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>COMPERR</name>
      <description>EC Computation Error.</description>
      <bitOffset>5</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>MEMERR</name>
      <description>SCA Memory Access Error.</description>
      <bitOffset>6</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>CARRY</name>
      <description>Carry on ongoing operation.</description>
      <bitOffset>8</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>GTE2I2</name>
      <description>Modulo 2x Result.</description>
      <bitOffset>9</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>ALUNEG1</name>
      <description>ALU 2 SubSign of the subtraction result for ALU_2.</description>
      <bitOffset>10</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>ALUNEG2</name>
      <description>ALU 2 SubSign of the subtraction result for ALU_2.</description>
      <bitOffset>11</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>SCA_PPX_ADDR</name>
    <description>PPX Coordinate Data Pointer Register.</description>
    <addressOffset>0x10C</addressOffset>
    <resetValue>0x0</resetValue>
    <fields>
     <field>
      <name>ADDR</name>
      <description>Point P Coordinate Data Pointer.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>SCA_PPY_ADDR</name>
    <description>PPY Coordinate Data Pointer Register.</description>
    <addressOffset>0x110</addressOffset>
    <resetValue>0x0</resetValue>
    <fields>
     <field>
      <name>ADDR</name>
      <description>Point P Coordinate Data Pointer.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>SCA_PPZ_ADDR</name>
    <description>PPZ Coordinate Data Pointer Register.</description>
    <addressOffset>0x114</addressOffset>
    <resetValue>0x0</resetValue>
    <fields>
     <field>
      <name>ADDR</name>
      <description>Point P Coordinate Data Pointer.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>SCA_PQX_ADDR</name>
    <description>PQX Coordinate Data Pointer Register.</description>
    <addressOffset>0x118</addressOffset>
    <resetValue>0x0</resetValue>
    <fields>
     <field>
      <name>ADDR</name>
      <description>Point Q Coordinate Data Pointer.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>SCA_PQY_ADDR</name>
    <description>PQY Coordinate Data Pointer Register.</description>
    <addressOffset>0x11C</addressOffset>
    <resetValue>0x0</resetValue>
    <fields>
     <field>
      <name>ADDR</name>
      <description>Point Q Coordinate Data Pointer.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>SCA_PQZ_ADDR</name>
    <description>PQZ Coordinate Data Pointer Register.</description>
    <addressOffset>0x120</addressOffset>
    <resetValue>0x0</resetValue>
    <fields>
     <field>
      <name>ADDR</name>
      <description>Point Q Coordinate Data Pointer.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>SCA_RDSA_ADDR</name>
    <description>SCA RDSA Address Register.</description>
    <addressOffset>0x124</addressOffset>
    <resetValue>0x0</resetValue>
    <fields>
     <field>
      <name>ADDR</name>
      <description>The starting address of the R portion for R, S ECDSA signature.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>SCA_RES_ADDR</name>
    <description>SCA Result Address Register.</description>
    <addressOffset>0x128</addressOffset>
    <resetValue>0x0</resetValue>
    <fields>
     <field>
      <name>ADDR</name>
      <description>Starting address of result storage.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>SCA_OP_BUFF_ADDR</name>
    <description>SCA Operation Buffer Address Register.</description>
    <addressOffset>0x12C</addressOffset>
    <resetValue>0x0</resetValue>
    <fields>
     <field>
      <name>ADDR</name>
      <description>Starting address of operation buffer.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>SCA_MODDATA</name>
    <description>SCA Modulo Data Input Register.</description>
    <addressOffset>0x130</addressOffset>
    <resetValue>0x0</resetValue>
    <fields>
     <field>
      <name>DATA</name>
      <description>Used to load the SCA modulo for modular operations.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
  </registers>
 </peripheral>

<!--CTB The Cryptographic Toolbox is a combination of cryptographic engines and a secure cryptographic accelerator (SCA) used to provide advanced cryptographic security.--><peripheral>
    <name>DMA</name>
    <description>DMA Controller Fully programmable, chaining capable DMA channels.</description>
    <baseAddress>0x40028000</baseAddress>
    <size>32</size>
    <addressBlock>
      <offset>0x00</offset>
      <size>0x1000</size>
      <usage>registers</usage>
    </addressBlock>
    <interrupt>
      <name>DMA0</name>
      <value>28</value>
    </interrupt>
    <interrupt>
      <name>DMA1</name>
      <value>29</value>
    </interrupt>
    <interrupt>
      <name>DMA2</name>
      <value>30</value>
    </interrupt>
    <interrupt>
      <name>DMA3</name>
      <value>31</value>
    </interrupt>
    <interrupt>
      <name>DMA4</name>
      <value>68</value>
    </interrupt>
    <interrupt>
      <name>DMA5</name>
      <value>69</value>
    </interrupt>
    <interrupt>
      <name>DMA6</name>
      <value>70</value>
    </interrupt>
    <interrupt>
      <name>DMA7</name>
      <value>71</value>
    </interrupt>
    <interrupt>
      <name>DMA8</name>
      <value>72</value>
    </interrupt>
    <interrupt>
      <name>DMA9</name>
      <value>73</value>
    </interrupt>
    <interrupt>
      <name>DMA10</name>
      <value>74</value>
    </interrupt>
    <interrupt>
      <name>DMA11</name>
      <value>75</value>
    </interrupt>
    <interrupt>
      <name>DMA12</name>
      <value>76</value>
    </interrupt>
    <interrupt>
      <name>DMA13</name>
      <value>77</value>
    </interrupt>
    <interrupt>
      <name>DMA14</name>
      <value>78</value>
    </interrupt>
    <interrupt>
      <name>DMA15</name>
      <value>79</value>
    </interrupt>
    <registers>
      <register>
        <name>CN</name>
        <description>DMA Control Register.</description>
        <addressOffset>0x000</addressOffset>
        <fields>
          <field>
            <name>CH0_IEN</name>
            <description>Channel 0 Interrupt Enable.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>1</bitWidth>
            <enumeratedValues>
              <enumeratedValue>
                <name>dis</name>
                <description>Disable.</description>
                <value>0</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>en</name>
                <description>Enable.</description>
                <value>1</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field derivedFrom="CH0_IEN">
            <name>CH2_IEN</name>
            <description>Channel 2 Interrupt Enable.</description>
            <bitOffset>2</bitOffset>
            <bitWidth>1</bitWidth>
          </field>
          <field derivedFrom="CH0_IEN">
            <name>CH3_IEN</name>
            <description>Channel 3 Interrupt Enable.</description>
            <bitOffset>3</bitOffset>
            <bitWidth>1</bitWidth>
          </field>
          <field derivedFrom="CH0_IEN">
            <name>CH4_IEN</name>
            <description>Channel 4 Interrupt Enable.</description>
            <bitOffset>4</bitOffset>
            <bitWidth>1</bitWidth>
          </field>
          <field derivedFrom="CH0_IEN">
            <name>CH5_IEN</name>
            <description>Channel 5 Interrupt Enable.</description>
            <bitOffset>5</bitOffset>
            <bitWidth>1</bitWidth>
          </field>
          <field derivedFrom="CH0_IEN">
            <name>CH6_IEN</name>
            <description>Channel 6 Interrupt Enable.</description>
            <bitOffset>6</bitOffset>
            <bitWidth>1</bitWidth>
          </field>
          <field derivedFrom="CH0_IEN">
            <name>CH7_IEN</name>
            <description>Channel 7 Interrupt Enable.</description>
            <bitOffset>7</bitOffset>
            <bitWidth>1</bitWidth>
          </field>
        </fields>
      </register>
      <register>
        <name>INTR</name>
        <description>DMA Interrupt Register.</description>
        <addressOffset>0x004</addressOffset>
        <access>read-only</access>
        <fields>
          <field>
            <name>CH0_IPEND</name>
            <description>Channel Interrupt.   To clear an interrupt, all active interrupt bits of the DMA_ST must be cleared. The interrupt bits are set only if their corresponding interrupt enable bits are set in DMA_CN.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>1</bitWidth>
            <enumeratedValues>
              <enumeratedValue>
                <name>inactive</name>
                <description>No interrupt is pending.</description>
                <value>0</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>pending</name>
                <description>An interrupt is pending.</description>
                <value>1</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field derivedFrom="CH0_IPEND">
            <name>CH1_IPEND</name>
            <bitOffset>1</bitOffset>
            <bitWidth>1</bitWidth>
          </field>
          <field derivedFrom="CH0_IPEND">
            <name>CH2_IPEND</name>
            <bitOffset>2</bitOffset>
            <bitWidth>1</bitWidth>
          </field>
          <field derivedFrom="CH0_IPEND">
            <name>CH3_IPEND</name>
            <bitOffset>3</bitOffset>
            <bitWidth>1</bitWidth>
          </field>
          <field derivedFrom="CH0_IPEND">
            <name>CH4_IPEND</name>
            <bitOffset>4</bitOffset>
            <bitWidth>1</bitWidth>
          </field>
          <field derivedFrom="CH0_IPEND">
            <name>CH5_IPEND</name>
            <bitOffset>5</bitOffset>
            <bitWidth>1</bitWidth>
          </field>
          <field derivedFrom="CH0_IPEND">
            <name>CH6_IPEND</name>
            <bitOffset>6</bitOffset>
            <bitWidth>1</bitWidth>
          </field>
          <field derivedFrom="CH0_IPEND">
            <name>CH7_IPEND</name>
            <bitOffset>7</bitOffset>
            <bitWidth>1</bitWidth>
          </field>
        </fields>
      </register>
      <cluster>
        <dim>8</dim>
        <dimIncrement>0x20</dimIncrement>
        <name>CH[%s]</name>
        <description>DMA Channel registers.</description>
        <headerStructName>dma_ch</headerStructName>
        <addressOffset>0x100</addressOffset>
        <access>read-write</access>
        <register>
          <name>CFG</name>
          <description>DMA Channel Configuration Register.</description>
          <addressOffset>0x000</addressOffset>
          <fields>
            <field>
              <name>CHEN</name>
              <description>Channel Enable.  This bit is automatically cleared when DMA_ST.CH_ST changes from 1 to 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <enumeratedValues>
                <enumeratedValue>
                  <name>dis</name>
                  <description>Disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>en</name>
                  <description>Enable.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RLDEN</name>
              <description>Reload Enable. Setting this bit to 1 enables DMA_SRC, DMA_DST and DMA_CNT to be reloaded with their corresponding reload registers upon count-to-zero. This bit is also writeable in the Count Reload Register. Refer to the description on Buffer Chaining for use of this bit. If buffer chaining is not used this bit must be written with a 0. This bit should be set after the reload registers have been programmed.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <enumeratedValues>
                <enumeratedValue>
                  <name>dis</name>
                  <description>Disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>en</name>
                  <description>Enable.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRI</name>
              <description>DMA Priority.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <enumeratedValues>
                <enumeratedValue>
                  <name>high</name>
                  <description>Highest Priority.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>medHigh</name>
                  <description>Medium High Priority.</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>medLow</name>
                  <description>Medium Low Priority.</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>low</name>
                  <description>Lowest Priority.</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REQSEL</name>
              <description>Request Select. Select DMA request line for this channel. If memory-to-memory is selected, the channel operates as if the request is always active.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>6</bitWidth>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MEMTOMEM</name>
                  <description>Memory To Memory</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI0RX</name>
                  <description>SPI0 RX</description>
                  <value>0x01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI1RX</name>
                  <description>SPI1 RX</description>
                  <value>0x02</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART0RX</name>
                  <description>UART0 RX</description>
                  <value>0x04</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART1RX</name>
                  <description>UART1 RX</description>
                  <value>0x05</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2C0RX</name>
                  <description>I2C0 RX</description>
                  <value>0x07</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2C1RX</name>
                  <description>I2C1 RX</description>
                  <value>0x08</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC</name>
                  <description>Analog-to-Digital Converter Channel</description>
                  <value>0x09</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2C2RX</name>
                  <description>I2C2 RX</description>
                  <value>0x0A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART2RX</name>
                  <description>UART2 RX</description>
                  <value>0x0E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI2RX</name>
                  <description>SPI2 RX</description>
                  <value>0x0F</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBRXEP1</name>
                  <description>USB Endpoint 1 RX</description>
                  <value>0x11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBRXEP2</name>
                  <description>USB Endpoint 2 RX</description>
                  <value>0x12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBRXEP3</name>
                  <description>USB Endpoint 3 RX</description>
                  <value>0x13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBRXEP4</name>
                  <description>USB Endpoint 4 RX</description>
                  <value>0x14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBRXEP5</name>
                  <description>USB Endpoint 5 RX</description>
                  <value>0x15</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBRXEP6</name>
                  <description>USB Endpoint 6 RX</description>
                  <value>0x16</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBRXEP7</name>
                  <description>USB Endpoint 7 RX</description>
                  <value>0x17</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBRXEP8</name>
                  <description>USB Endpoint 8 RX</description>
                  <value>0x18</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBRXEP9</name>
                  <description>USB Endpoint 9 RX</description>
                  <value>0x19</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBRXEP10</name>
                  <description>USB Endpoint 10 RX</description>
                  <value>0x1A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBRXEP11</name>
                  <description>USB Endpoint 11 RX</description>
                  <value>0x1B</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI0TX</name>
                  <description>SPI0 TX</description>
                  <value>0x21</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI1TX</name>
                  <description>SPI1 TX</description>
                  <value>0x22</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART0TX</name>
                  <description>UART0 TX</description>
                  <value>0x24</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART1TX</name>
                  <description>UART1 TX</description>
                  <value>0x25</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2C0TX</name>
                  <description>I2C0 TX</description>
                  <value>0x27</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2C1TX</name>
                  <description>I2C1 TX</description>
                  <value>0x28</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2C2TX</name>
                  <description>I2C2 TX</description>
                  <value>0x2A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART2TX</name>
                  <description>UART2 TX</description>
                  <value>0x2E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI2TX</name>
                  <description>SPI3 TX</description>
                  <value>0x2F</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBTXEP1</name>
                  <description>USB Endpoint 1 TX</description>
                  <value>0x31</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBTXEP2</name>
                  <description>USB Endpoint 2 TX</description>
                  <value>0x32</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBTXEP3</name>
                  <description>USB Endpoint 3 TX</description>
                  <value>0x33</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBTXEP4</name>
                  <description>USB Endpoint 4 TX</description>
                  <value>0x34</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBTXEP5</name>
                  <description>USB Endpoint 5 TX</description>
                  <value>0x35</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBTXEP6</name>
                  <description>USB Endpoint 6 TX</description>
                  <value>0x36</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBTXEP7</name>
                  <description>USB Endpoint 7 TX</description>
                  <value>0x37</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBTXEP8</name>
                  <description>USB Endpoint 8 TX</description>
                  <value>0x38</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBTXEP9</name>
                  <description>USB Endpoint 9 TX</description>
                  <value>0x39</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBTXEP10</name>
                  <description>USB Endpoint 10 TX</description>
                  <value>0x3A</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBTXEP11</name>
                  <description>USB Endpoint 11 TX</description>
                  <value>0x3B</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REQWAIT</name>
              <description>Request Wait Enable.  When enabled, delay timer start until DMA request transitions from active to inactive.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <enumeratedValues>
                <enumeratedValue>
                  <name>dis</name>
                  <description>Disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>en</name>
                  <description>Enable.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TOSEL</name>
              <description>Timeout Period Select.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>3</bitWidth>
              <enumeratedValues>
                <enumeratedValue>
                  <name>to4</name>
                  <description>Timeout of 3 to 4 prescale clocks.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>to8</name>
                  <description>Timeout of 7 to 8 prescale clocks.</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>to16</name>
                  <description>Timeout of 15 to 16 prescale clocks.</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>to32</name>
                  <description>Timeout of 31 to 32 prescale clocks.</description>
                  <value>3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>to64</name>
                  <description>Timeout of 63 to 64 prescale clocks.</description>
                  <value>4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>to128</name>
                  <description>Timeout of 127 to 128 prescale clocks.</description>
                  <value>5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>to256</name>
                  <description>Timeout of 255 to 256 prescale clocks.</description>
                  <value>6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>to512</name>
                  <description>Timeout of 511 to 512 prescale clocks.</description>
                  <value>7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PSSEL</name>
              <description>Pre-Scale Select. Selects the Pre-Scale divider for timer clock input.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <enumeratedValues>
                <enumeratedValue>
                  <name>dis</name>
                  <description>Disable timer.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>div256</name>
                  <description>hclk / 256.</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>div64k</name>
                  <description>hclk / 64k.</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>div16M</name>
                  <description>hclk / 16M.</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRCWD</name>
              <description>Source Width. In most cases, this will be the data width of each AHB transactions. However, the width will be reduced in the cases where DMA_CNT indicates a smaller value.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <enumeratedValues>
                <enumeratedValue>
                  <name>byte</name>
                  <description>Byte.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>halfWord</name>
                  <description>Halfword.</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>word</name>
                  <description>Word.</description>
                  <value>2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRCINC</name>
              <description>Source Increment Enable. This bit enables DMA_SRC increment upon every AHB transaction. This bit is forced to 0 for DMA receive from peripherals.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <enumeratedValues>
                <enumeratedValue>
                  <name>dis</name>
                  <description>Disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>en</name>
                  <description>Enable.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSTWD</name>
              <description>Destination Width. Indicates the width of the each AHB transactions to the destination peripheral or memory. (The actual width may be less than this if there are insufficient bytes in the DMA FIFO for the full width).</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <enumeratedValues>
                <enumeratedValue>
                  <name>byte</name>
                  <description>Byte.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>halfWord</name>
                  <description>Halfword.</description>
                  <value>1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>word</name>
                  <description>Word.</description>
                  <value>2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSTINC</name>
              <description>Destination Increment Enable. This bit enables DMA_DST increment upon every AHB transaction. This bit is forced to 0 for DMA transmit to peripherals.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <enumeratedValues>
                <enumeratedValue>
                  <name>dis</name>
                  <description>Disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>en</name>
                  <description>Enable.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BRST</name>
              <description>Burst Size. The number of bytes to be transferred into and out of the DMA FIFO in a single burst.  Burst size equals 1 + value stored in this field.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>5</bitWidth>
            </field>
            <field>
              <name>CHDIEN</name>
              <description>Channel Disable Interrupt Enable. When enabled, the IPEND will be set to 1 whenever CH_ST changes from 1 to 0.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <enumeratedValues>
                <enumeratedValue>
                  <name>dis</name>
                  <description>Disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>en</name>
                  <description>Enable.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTZIEN</name>
              <description>Count-to-zero Interrupts Enable. When enabled, the IPEND will be set to 1 whenever a count-to-zero event occurs.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <enumeratedValues>
                <enumeratedValue>
                  <name>dis</name>
                  <description>Disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>en</name>
                  <description>Enable.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ST</name>
          <description>DMA Channel Status Register.</description>
          <addressOffset>0x004</addressOffset>
          <fields>
            <field>
              <name>CH_ST</name>
              <description>Channel Status. This bit is used to indicate to the programmer when it is safe to change the configuration, address, and count registers for the channel. Whenever this bit is cleared by hardware,  the DMA_CFG.CHEN bit is also cleared (if not cleared already).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>dis</name>
                  <description>Disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>en</name>
                  <description>Enable.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IPEND</name>
              <description>Channel Interrupt.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>inactive</name>
                  <description>No interrupt is pending.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>pending</name>
                  <description>An interrupt is pending.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTZ_ST</name>
              <description>Count-to-Zero (CTZ) Event Interrupt Flag</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RLD_ST</name>
              <description>Reload Event Interrupt Flag.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>BUS_ERR</name>
              <description>Bus Error. Indicates that an AHB abort was received and the channel has been disabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TO_ST</name>
              <description>Time-Out Event Interrupt Flag.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SRC</name>
          <description>Source Device Address. If SRCINC=1, the counter bits are incremented by 1,2, or 4, depending on the data width of each AHB cycle. For peripheral transfers, some or all of the actual address bits are fixed. If SRCINC=0, this register remains constant. In the case where a count-to-zero condition occurs while RLDEN=1, the register is reloaded with the contents of DMA_SRC_RLD.</description>
          <addressOffset>0x008</addressOffset>
          <fields>
            <field>
              <name>SRC</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
            </field>
          </fields>
        </register>
        <register>
          <name>DST</name>
          <description>Destination Device Address. For peripheral transfers, some or all of the actual address bits are fixed. If DSTINC=1, this register is incremented on every AHB write out of the DMA FIFO. They are incremented by 1, 2, or 4, depending on the data width of each AHB cycle. In the case where a count-to-zero condition occurs while RLDEN=1, the register is reloaded with DMA_DST_RLD.</description>
          <addressOffset>0x00C</addressOffset>
          <fields>
            <field>
              <name>DST</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
            </field>
          </fields>
        </register>
        <register>
          <name>CNT</name>
          <description>DMA Counter. The user loads this register with the number of bytes to transfer. This counter decreases on every AHB cycle into the DMA FIFO. The decrement will be 1, 2, or 4 depending on the data width of each AHB cycle. When the counter reaches 0, a count-to-zero condition is triggered.</description>
          <addressOffset>0x010</addressOffset>
          <fields>
            <field>
              <name>CNT</name>
              <description>DMA Counter.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
            </field>
          </fields>
        </register>
        <register>
          <name>SRC_RLD</name>
          <description>Source Address Reload Value. The value of this register is loaded into DMA0_SRC upon a count-to-zero condition.</description>
          <addressOffset>0x014</addressOffset>
          <fields>
            <field>
              <name>SRC_RLD</name>
              <description>Source Address Reload Value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>31</bitWidth>
            </field>
          </fields>
        </register>
        <register>
          <name>DST_RLD</name>
          <description>Destination Address Reload Value. The value of this register is loaded into DMA0_DST upon a count-to-zero condition.</description>
          <addressOffset>0x018</addressOffset>
          <fields>
            <field>
              <name>DST_RLD</name>
              <description>Destination Address Reload Value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>31</bitWidth>
            </field>
          </fields>
        </register>
        <register>
          <name>CNT_RLD</name>
          <description>DMA Channel Count Reload Register.</description>
          <addressOffset>0x01C</addressOffset>
          <fields>
            <field>
              <name>CNT_RLD</name>
              <description>Count Reload Value. The value of this register is loaded into DMA0_CNT upon a count-to-zero condition.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
            </field>
            <field>
              <name>RLDEN</name>
              <description>Reload Enable. This bit should be set after the address reload registers have been programmed. This bit is automatically cleared to 0 when reload occurs.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <enumeratedValues>
                <enumeratedValue>
                  <name>dis</name>
                  <description>Disable.</description>
                  <value>0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>en</name>
                  <description>Enable.</description>
                  <value>1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </cluster>
    </registers>
  </peripheral>
  
<!--DMA DMA Controller Fully programmable, chaining capable DMA channels.--><peripheral>
    <name>EMAC</name>
    <description>10/100 Ethernet MAC.</description>
    <baseAddress>0x4004F000</baseAddress>
    <addressBlock>
      <offset>0</offset>
      <size>0x1000</size>
      <usage>registers</usage>
    </addressBlock>
    <interrupt>
      <name>EMAC</name>
      <description>EMAC IRQ</description>
      <value>64</value>
    </interrupt>
    <registers>
      <register>
        <name>CN</name>
        <description>Network Control Register.</description>
        <addressOffset>0x00</addressOffset>
        <resetValue>0x00</resetValue>
        <fields>
          <field>
            <name>LB</name>
            <description>Loopback.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>LBL</name>
            <description>Loopback local.</description>
            <bitOffset>1</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>RXEN</name>
            <description>Receive Enable.</description>
            <bitOffset>2</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>TXEN</name>
            <description>Transmit Enable.</description>
            <bitOffset>3</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>MPEN</name>
            <description>Management Port Enable.</description>
            <bitOffset>4</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>CLST</name>
            <description>Clear Statistics.</description>
            <bitOffset>5</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>INCST</name>
            <description>Increment Statistics.</description>
            <bitOffset>6</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>WREN</name>
            <description>Write enable for statistics registers.</description>
            <bitOffset>7</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>BP</name>
            <description>Back pressure.</description>
            <bitOffset>8</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>TXSTART</name>
            <description>Transmission start.</description>
            <bitOffset>9</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>TXHALT</name>
            <description>Transmit halt.</description>
            <bitOffset>10</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>TXPF</name>
            <description>Transmit pause frame.</description>
            <bitOffset>11</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>TXZQPF</name>
            <description>Transmit zero quantum pause frame.</description>
            <bitOffset>12</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
        </fields>
      </register>
      <register>
        <name>CFG</name>
        <description>Network Configuration Register.</description>
        <addressOffset>0x04</addressOffset>
        <fields>
          <field>
            <name>SPEED</name>
            <description>Speed Select.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>FULLDPLX</name>
            <description>Full Duplex. If set to 1 the transmit block ignores the state of collision and carrier sense and allows Rx while transmitting.</description>
            <bitOffset>1</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>BITRATE</name>
            <description>Bit Rate. Writing 1 to this bit configures the interface for serial operation. </description>
            <bitOffset>2</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>JUMBOFR</name>
            <description>Jumbo Frames. Writing 1 to this bit enables jumbo frames of up to 10,240 bytes to be accepted.</description>
            <bitOffset>3</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>COPYAF</name>
            <description>Copy All Frames. If 1, all valid frames will be received.</description>
            <bitOffset>4</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>NOBC</name>
            <description>No Broadcast. If 1, frames addressed to the broadcast address of all ones will not be received.</description>
            <bitOffset>5</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>MHEN</name>
            <description>Multicast Hash Enable. If 1, multicast frames will be received when the 6 bit hash function of the destination address points to a bit that is set in the hash register.</description>
            <bitOffset>6</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>UHEN</name>
            <description>Unicast Hash Enable. If 1, unicast frames will be received when the 6 bit hash function of the destination address points to a bit that is set in the hash register.</description>
            <bitOffset>7</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>RXFR</name>
            <description>Receive 1536 Byte Frames. Writing 1 to this bit means the MAC receives packets up to 1536 bytes in length. Normally the MAC rejects any packet above 1518 bytes</description>
            <bitOffset>8</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>MDCCLK</name>
            <description>MDC Frequency. Set according to PCLK speed. This field determines by what number PCLK is divided to generate MDC.</description>
            <bitOffset>10</bitOffset>
            <bitWidth>2</bitWidth>
            <access>write-only</access>
            <enumeratedValues>
              <enumeratedValue>
                <name>div8</name>
                <description>PCLK up to 20MHz</description>
                <value>0</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>div16</name>
                <description>PCLK up to 40MHz</description>
                <value>1</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>div32</name>
                <description>PCLK up to 80MHz</description>
                <value>2</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>div64</name>
                <description>PCLK up to 160MHz</description>
                <value>3</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field>
            <name>RTTST</name>
            <description>Retry Test. Must be set to zero for normal operation. If set to 1, the back-off between collisions is always one slot time.</description>
            <bitOffset>12</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>PAUSEEN</name>
            <description>Pause Enable. If 1, Ethernet packet transmission pauses when a valid pause packet is received.</description>
            <bitOffset>13</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>RXBUFFOFS</name>
            <description>Receive buffer offset. These bits indicate the number of bytes by which the received data is offset from the start of the first receive buffer.</description>
            <bitOffset>14</bitOffset>
            <bitWidth>2</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>RXLFCEN</name>
            <description>Receive length field checking enable. If 1, packets with measured lengths shorter than their length fields are discarded. Packets containing a type ID in bytes 13 and 14 (length/type field &gt;=0600) are not counted as length errors.</description>
            <bitOffset>16</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>DCRXFCS</name>
            <description>Discard receive FCS. If 1, the FCS field of received frames will not be copied to memory.</description>
            <bitOffset>17</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>HDPLXRXEN</name>
            <description>Enable packets to be received in half-duplex mode while transmitting.</description>
            <bitOffset>18</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>IGNRXFCS</name>
            <description>Ignore RX FCS. If 1, packets with FCS/CRC errors are not rejected and no FCS error statistics are counted. For normal operation, this bit must be set to 0.</description>
            <bitOffset>19</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
        </fields>
      </register>
      <register>
        <name>STATUS</name>
        <description>Network Status Register.</description>
        <addressOffset>0x08</addressOffset>
        <access>read-only</access>
        <fields>
          <field>
            <name>LINK</name>
            <description>LINK pin status. Returns status of EMAC_LINK pin.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-only</access>
          </field>
          <field>
            <name>MDIO</name>
            <description>MDIO pin status. Returns status of the EMAC_MDIO pin. Use the PHY maintenance register for reading managed frames rather than this bit.</description>
            <bitOffset>1</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-only</access>
          </field>
          <field>
            <name>IDLE</name>
            <description>PHY management logic status.</description>
            <bitOffset>2</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-only</access>
          </field>
        </fields>
      </register>
      <register>
        <name>TX_ST</name>
        <description>Transmit Status Register.</description>
        <addressOffset>0x14</addressOffset>
        <fields>
          <field>
            <name>UBR</name>
            <description>Used Bit Read. Set when a transmit buffer descriptor is read with its used bit set. Write 1 to clear this bit.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>COLS</name>
            <description>Collision Occurred. Set when a collision occurs. Write 1 to clear this bit.</description>
            <bitOffset>1</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>RTYLIM</name>
            <description>Retry Limit Exceeded. Set when the retry limit has been exceeded. Write 1 to clear this bit. </description>
            <bitOffset>2</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>TXGO</name>
            <description>Transmit Go. If 1, transmit is active.</description>
            <bitOffset>3</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>BEMF</name>
            <description>Buffers Exhausted Mid Frame. If the buffers run out during transmission of a frame then transmission stops, FCS shall be bad and EMAC_TXER asserted. Write 1 to clear this bit.</description>
            <bitOffset>4</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>TXCMPL</name>
            <description>Transmit Complete. Set when a frame has been transmitted. Write 1 to clear this bit.</description>
            <bitOffset>5</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>TXUR</name>
            <description>Transmit Underrun. Set when the MAC transmit FIFO was read while was empty. If this happens the transmitter forces bad. Write 1 to clear this bit.</description>
            <bitOffset>6</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>RXBUF_PTR</name>
        <description>Receive Buffer Queue Pointer Register.</description>
        <addressOffset>0x18</addressOffset>
        <fields>
          <field>
            <name>RXBUF</name>
            <description>Receive buffer queue pointer. Written with the address of the start of the receive queue, reads as a pointer to the current buffer being used.</description>
            <bitOffset>2</bitOffset>
            <bitWidth>30</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>TXBUF_PTR</name>
        <description>Transmit Buffer Queue Pointer Register.</description>
        <addressOffset>0x1C</addressOffset>
        <fields>
          <field>
            <name>TXBUF</name>
            <description>Transmit buffer queue pointer. Written with the address of the start of the transmit queue, reads as a pointer to the first buffer of the frame being transmitted or about to be transmitted.</description>
            <bitOffset>2</bitOffset>
            <bitWidth>30</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>RX_ST</name>
        <description>Receive Status Register.</description>
        <addressOffset>0x20</addressOffset>
        <fields>
          <field>
            <name>BNA</name>
            <description>Buffer Not Available. An attempt was made to get a new buffer and the pointer indicated that it was owned by the processor. The DMA will reread the pointer each time a new frame starts until a valid pointer is found. This bit will be set at each attempt that fails even if it has not had a successful pointer read since it has been cleared. Write 1 to clear this bit.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>FR</name>
            <description>Frame Received. One or more frames have been received and placed in memory. Write 1 to clear this bit.</description>
            <bitOffset>1</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>RXOR</name>
            <description>Receive Overrun. The DMA block was unable to store the receive frame to memory. Either because the AHB bus was not granted in time or because a not OK hresp was returned. The buffer will be recovered if this happens. Write 1 to clear this bit.</description>
            <bitOffset>2</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>INT_ST</name>
        <description>Interrupt Status Register.</description>
        <addressOffset>0x24</addressOffset>
        <fields>
          <field>
            <name>MPS</name>
            <description>Management Packet Sent Interrupt Status. The PHY maintenance register has completed its operation. Cleared when read.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>RXCMPL</name>
            <description>Receive Complete Interrupt Status. Set when a frame has been stored in memory. Cleared when read.</description>
            <bitOffset>1</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>RXUBR</name>
            <description>RX Used Bit Read Interrupt Status. Set when a receive buffer descriptor is read with its used bit set. Cleared when read.</description>
            <bitOffset>2</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>TXUBR</name>
            <description>TX Used Bit Read Interrupt Status. Set when a transmit buffer descriptor is read with its used bit set. Cleared when read</description>
            <bitOffset>3</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>TXUR</name>
            <description>Ethernet Transmit Underrun Interrupt Status. Set when the MAC transmit FIFO was read while was empty. If this happens the transmitter forces bad CRC and forces EMAC_TXER high. Cleared when read.</description>
            <bitOffset>4</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>RLE</name>
            <description>Retry Limit Exceeded Interrupt Status. Transmit error. Cleared when read.</description>
            <bitOffset>5</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>TXERR</name>
            <description>Transmit Buffers Exhausted In Mid-frame Interrupt Status. Transmit error. Cleared when read.</description>
            <bitOffset>6</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>TXCMPL</name>
            <description>Transmit Complete Interrupt Status. Set when a frame has been transmitted. Cleared when read.</description>
            <bitOffset>7</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>LC</name>
            <description>Link Change Interrupt Status. Set when the external link signal changes. Cleared when read.</description>
            <bitOffset>9</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>RXOR</name>
            <description>Receive Overrun Interrupt Status. Set when the receive overrun status bit gets set. Cleared when read.</description>
            <bitOffset>10</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>HRESPNO</name>
            <description>hresp not OK Interrupt Status. Set when the DMA block sees hresp not OK. Cleared when read.</description>
            <bitOffset>11</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>PPR</name>
            <description>Pause Packet Received Interrupt Status. Indicates a valid pause packet has been received. Cleared when read.</description>
            <bitOffset>12</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>PTZ</name>
            <description>Pause Time Zero Interrupt Status. Set when the MAC Pause Time register (MAC_PT) decrements to zero. Cleared when read.</description>
            <bitOffset>13</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>INT_EN</name>
        <description>Interrupt Enable Register.</description>
        <addressOffset>0x28</addressOffset>
        <access>write-only</access>
        <fields>
          <field>
            <name>MPS</name>
            <description>Management Packet Sent Interrupt Enable</description>
            <bitOffset>0</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>RXCMPL</name>
            <description>Receive Complete Interrupt Enable</description>
            <bitOffset>1</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>RXUBR</name>
            <description>RX Used Bit Read Interrupt Enable</description>
            <bitOffset>2</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>TXUBR</name>
            <description>TX Used Bit Read Interrupt Enable</description>
            <bitOffset>3</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>TXUR</name>
            <description>Ethernet Transmit Underrun Interrupt Enable</description>
            <bitOffset>4</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>RLE</name>
            <description>Retry Limit Exceeded Interrupt Enable</description>
            <bitOffset>5</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>TXERR</name>
            <description>Transmit Buffers Exhausted In Mid-frame Interrupt Enable</description>
            <bitOffset>6</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>TXCMPL</name>
            <description>Transmit Complete Interrupt Enable</description>
            <bitOffset>7</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>LC</name>
            <description>Link Change Interrupt Enable</description>
            <bitOffset>9</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>RXOR</name>
            <description>Receive Overrun Interrupt Enable</description>
            <bitOffset>10</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>HRESPNO</name>
            <description>hresp not OK Interrupt Enable</description>
            <bitOffset>11</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>PPR</name>
            <description>Pause Packet Received Interrupt Enable</description>
            <bitOffset>12</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>PTZ</name>
            <description>Pause Time Zero Interrupt Enable</description>
            <bitOffset>13</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
        </fields>
      </register>
      <register>
        <name>INT_DIS</name>
        <description>Interrupt Disable Register.</description>
        <addressOffset>0x2C</addressOffset>
        <access>write-only</access>
        <fields>
          <field>
            <name>MPS</name>
            <description>Management Packet Sent Interrupt Disable</description>
            <bitOffset>0</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>RXCMPL</name>
            <description>Receive Complete Interrupt Disable</description>
            <bitOffset>1</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>RXUBR</name>
            <description>RX Used Bit Read Interrupt Disable</description>
            <bitOffset>2</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>TXUBR</name>
            <description>TX Used Bit Read Interrupt Disable</description>
            <bitOffset>3</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>TXUR</name>
            <description>Ethernet Transmit Underrun Interrupt Disable</description>
            <bitOffset>4</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>RLE</name>
            <description>Retry Limit Exceeded Interrupt Disable</description>
            <bitOffset>5</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>TXERR</name>
            <description>Transmit Buffers Exhausted In Mid-frame Interrupt Disable</description>
            <bitOffset>6</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>TXCMPL</name>
            <description>Transmit Complete Interrupt Disable</description>
            <bitOffset>7</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>LC</name>
            <description>Link Change Interrupt Disable</description>
            <bitOffset>9</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>RXOR</name>
            <description>Receive Overrun Interrupt Disable</description>
            <bitOffset>10</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>HRESPNO</name>
            <description>hresp not OK Interrupt Disable</description>
            <bitOffset>11</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>PPR</name>
            <description>Pause Packet Received Interrupt Disable</description>
            <bitOffset>12</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
          <field>
            <name>PTZ</name>
            <description>Pause Time Zero Interrupt Disable</description>
            <bitOffset>13</bitOffset>
            <bitWidth>1</bitWidth>
            <access>write-only</access>
          </field>
        </fields>
      </register>
      <register>
        <name>INT_MASK</name>
        <description>Interrupt Mask Register.</description>
        <addressOffset>0x30</addressOffset>
        <access>read-only</access>
        <fields>
          <field>
            <name>MPS</name>
            <description>Management Packet Sent Interrupt Mask</description>
            <bitOffset>0</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-only</access>
          </field>
          <field>
            <name>RXCMPL</name>
            <description>Receive Complete Interrupt Mask</description>
            <bitOffset>1</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-only</access>
          </field>
          <field>
            <name>RXUBR</name>
            <description>RX Used Bit Read Interrupt Mask</description>
            <bitOffset>2</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-only</access>
          </field>
          <field>
            <name>TXUBR</name>
            <description>TX Used Bit Read Interrupt Mask</description>
            <bitOffset>3</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-only</access>
          </field>
          <field>
            <name>TXUR</name>
            <description>Ethernet Transmit Underrun Interrupt Mask</description>
            <bitOffset>4</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-only</access>
          </field>
          <field>
            <name>RLE</name>
            <description>Retry Limit Exceeded Interrupt Mask</description>
            <bitOffset>5</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-only</access>
          </field>
          <field>
            <name>TXERR</name>
            <description>Transmit Buffers Exhausted In Mid-frame Interrupt Mask</description>
            <bitOffset>6</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-only</access>
          </field>
          <field>
            <name>TXCMPL</name>
            <description>Transmit Complete Interrupt Mask</description>
            <bitOffset>7</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-only</access>
          </field>
          <field>
            <name>LC</name>
            <description>Link Change Interrupt Mask</description>
            <bitOffset>9</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-only</access>
          </field>
          <field>
            <name>RXOR</name>
            <description>Receive Overrun Interrupt Mask</description>
            <bitOffset>10</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-only</access>
          </field>
          <field>
            <name>HRESPNO</name>
            <description>hresp not OK Interrupt Mask</description>
            <bitOffset>11</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-only</access>
          </field>
          <field>
            <name>PPR</name>
            <description>Pause Packet Received Interrupt Mask</description>
            <bitOffset>12</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-only</access>
          </field>
          <field>
            <name>PTZ</name>
            <description>Pause Time Zero Interrupt Mask</description>
            <bitOffset>13</bitOffset>
            <bitWidth>1</bitWidth>
            <access>read-only</access>
          </field>
        </fields>
      </register>
      <register>
        <name>PHY_MT</name>
        <description>PHY Maintenance Register.</description>
        <addressOffset>0x34</addressOffset>
        <fields>
          <field>
            <name>DATA</name>
            <description>PHY Data. For a write operation this field is the data to be written to the PHY. </description>
            <bitOffset>0</bitOffset>
            <bitWidth>16</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>REGADDR</name>
            <description>Register Address. Specifies the register in the PHY to access.</description>
            <bitOffset>18</bitOffset>
            <bitWidth>5</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>PHYADDR</name>
            <description>PHY Address. Specifies the PHY to access.</description>
            <bitOffset>23</bitOffset>
            <bitWidth>5</bitWidth>
            <access>read-write</access>
          </field>
          <field>
            <name>OP</name>
            <description>Operation</description>
            <bitOffset>28</bitOffset>
            <bitWidth>2</bitWidth>
            <access>read-write</access>
            <enumeratedValues>
              <enumeratedValue>
                <name>write</name>
                <description>Write</description>
                <value>1</value>
              </enumeratedValue>
              <enumeratedValue>
                <name>read</name>
                <description>Read</description>
                <value>2</value>
              </enumeratedValue>
            </enumeratedValues>
          </field>
          <field>
            <name>SOP</name>
            <description>TBD </description>
            <bitOffset>30</bitOffset>
            <bitWidth>2</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>PT</name>
        <description>Pause Time Register.</description>
        <addressOffset>0x38</addressOffset>
        <access>read-only</access>
        <fields>
          <field>
            <name>TIME</name>
            <description>Pause Time. Stores the current value of the pause time register, which is decremented every 512 bit times.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>16</bitWidth>
            <access>read-only</access>
          </field>
        </fields>
      </register>
      <register>
        <name>PFR</name>
        <description>Pause Frame Received OK.</description>
        <addressOffset>0x3C</addressOffset>
        <fields>
          <field>
            <name>PFR</name>
            <description>Pause Frames Received OK. A 16-bit register counting the number of good pause frames received. </description>
            <bitOffset>0</bitOffset>
            <bitWidth>16</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>FTOK</name>
        <description>Frames Transmitted OK.</description>
        <addressOffset>0x40</addressOffset>
        <fields>
          <field>
            <name>FTOK</name>
            <description>Frames Transmitted OK. A 32-bit register counting the number of frames successfully transmitted, i.e. no underrun and not too many retries.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>32</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>SCF</name>
        <description>Single Collision Frames.</description>
        <addressOffset>0x44</addressOffset>
        <fields>
          <field>
            <name>SCF</name>
            <description>Single Collision Frames. A 16-bit register counting the number of frames experiencing a single collision before being successfully transmitted, i.e. no underrun.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>16</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>MCF</name>
        <description>Multiple Collision Frames.</description>
        <addressOffset>0x48</addressOffset>
        <fields>
          <field>
            <name>MCF</name>
            <description>Multiple Collision Frames. A 16-bit register counting the number of frames experiencing between two and fifteen collisions prior to being successfully transmitted, i.e. no underrun and not too many retries.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>16</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>FROK</name>
        <description>Fames Received OK.</description>
        <addressOffset>0x4C</addressOffset>
        <fields>
          <field>
            <name>FROK</name>
            <description>Frames Received OK. A 24-bit register counting the number of good packets received</description>
            <bitOffset>0</bitOffset>
            <bitWidth>24</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>FCS_ERR</name>
        <description>Frame Check Sequence Errors.</description>
        <addressOffset>0x50</addressOffset>
        <fields>
          <field>
            <name>FCSERR</name>
            <description>Frame Check Sequence Errors.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>8</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>ALGN_ERR</name>
        <description>Alignment Errors.</description>
        <addressOffset>0x54</addressOffset>
        <fields>
          <field>
            <name>ALGNERR</name>
            <description>Alignment Errors. </description>
            <bitOffset>0</bitOffset>
            <bitWidth>8</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>DFTXF</name>
        <description>Deferred Transmission Frames.</description>
        <addressOffset>0x58</addressOffset>
        <fields>
          <field>
            <name>DFTXF</name>
            <description>Deferred Transmission Frames. A 16-bit register counting the number of packets experiencing deferral due to carrier sense being active on their first attempt at transmission</description>
            <bitOffset>0</bitOffset>
            <bitWidth>16</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>LC</name>
        <description>Late Collisions.</description>
        <addressOffset>0x5C</addressOffset>
        <fields>
          <field>
            <name>LC</name>
            <description>Late Collisions. An 8-bit register counting the number of packets that experience a collision after the slot time (512 bits) has expired.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>8</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>EC</name>
        <description>Excessive Collisions.</description>
        <addressOffset>0x60</addressOffset>
        <fields>
          <field>
            <name>EC</name>
            <description>Excessive Collisions. An 8-bit register counting the number of packets that failed to be transmitted because they experienced 16 collisions.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>8</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>TUR_ERR</name>
        <description>Transmit Underrun Errors.</description>
        <addressOffset>0x64</addressOffset>
        <fields>
          <field>
            <name>TURERR</name>
            <description>Transmit Underrun Error. An 8-bit register counting the number of packets not transmitted due to a transmit FIFO underrun.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>8</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>CS_ERR</name>
        <description>Carrier Sense Errors.</description>
        <addressOffset>0x68</addressOffset>
        <fields>
          <field>
            <name>CSERR</name>
            <description>An 8-bit register counting the number of packets transmitted where carrier sense was not seen during transmission or where carrier sense was deasserted after being asserted in a transmit packet without collision (no underrun).</description>
            <bitOffset>0</bitOffset>
            <bitWidth>8</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>RR_ERR</name>
        <description>Receive Resource Errors.</description>
        <addressOffset>0x6C</addressOffset>
        <fields>
          <field>
            <name>RRERR</name>
            <description>Receive Resource Errors. A 16 bit register counting the number of frames that were address matched but could not be copied to memory because no receive buffer was available.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>16</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>ROR_ERR</name>
        <description>Receive Overrun Errors.</description>
        <addressOffset>0x70</addressOffset>
        <fields>
          <field>
            <name>RORERR</name>
            <description>Receive Overruns. An 8 bit register counting the number of frames that are address recognized but were not copied to memory due to a receive DMA overrun.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>8</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>RS_ERR</name>
        <description>Receive Symbol Errors.</description>
        <addressOffset>0x74</addressOffset>
        <fields>
          <field>
            <name>RSERR</name>
            <description>Receive Symbol Errors. An 8-bit register counting the number of packets that had EMAC_RXER asserted during reception.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>8</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>EL_ERR</name>
        <description>Excessive Length Errors.</description>
        <addressOffset>0x78</addressOffset>
        <fields>
          <field>
            <name>ELERR</name>
            <description>Excessive Length Errors. An 8-bit register counting the number of packets received exceeding 1518 bytes in length (1536 if RXFR is set in the MAC_CFG register;</description>
            <bitOffset>0</bitOffset>
            <bitWidth>8</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>RJ</name>
        <description>Receive Jabber.</description>
        <addressOffset>0x7C</addressOffset>
        <fields>
          <field>
            <name>RJERR</name>
            <description>Receive Jabbers. An 8-bit register counting the number of packets received exceeding 1518 bytes in length (1536 if RXFR is set in the MAC_CFG register; </description>
            <bitOffset>0</bitOffset>
            <bitWidth>8</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>USF</name>
        <description>Undersize Frames.</description>
        <addressOffset>0x80</addressOffset>
        <fields>
          <field>
            <name>USF</name>
            <description>Undersize Frames. An 8-bit register counting the number of packets received less than 64 bytes in length but do not have either a CRC error, an alignment error or a receive symbol error.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>8</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>SQE_ERR</name>
        <description>SQE Test Errors.</description>
        <addressOffset>0x84</addressOffset>
        <fields>
          <field>
            <name>SQEERR</name>
            <description>SQE Test Errors. An 8-bit register counting the number of packets where collision was not asserted within 96 bit times (an interframe gap) of EMAC_TXEN being deasserted in half duplex mode.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>8</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>RLFM</name>
        <description>Received Length Field Mismatch.</description>
        <addressOffset>0x88</addressOffset>
        <fields>
          <field>
            <name>RLFM</name>
            <description>Receive length field mismatch </description>
            <bitOffset>0</bitOffset>
            <bitWidth>8</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>TPF</name>
        <description>Transmitted Pause Frames.</description>
        <addressOffset>0x8C</addressOffset>
        <fields>
          <field>
            <name>TPF</name>
            <description>Transmitted Pause Frames. A 16-bit register counting the number of pause packets transmitted.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>16</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>HASHL</name>
        <description>Hash Register Bottom [31:0].</description>
        <addressOffset>0x90</addressOffset>
        <fields>
          <field>
            <name>HASH</name>
            <description>Bits 31:0 of the hash address register. See Hash Addressing</description>
            <bitOffset>0</bitOffset>
            <bitWidth>32</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>HASHH</name>
        <description>Hash Register top [63:32].</description>
        <addressOffset>0x94</addressOffset>
        <fields>
          <field>
            <name>HASH</name>
            <description>Bits 63:32 of the hash address register. See Hash Addressing</description>
            <bitOffset>0</bitOffset>
            <bitWidth>32</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>SA1L</name>
        <description>Specific Address 1 Bottom.</description>
        <addressOffset>0x98</addressOffset>
        <fields>
          <field>
            <name>ADDR</name>
            <description>MAC Specific Address 1 [31:0]. Least significant bits of the MAC specific address 1, i.e. bits 31:0. This field is used for transmission of pause packets</description>
            <bitOffset>0</bitOffset>
            <bitWidth>32</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>SA1H</name>
        <description>Specific Address 1 Top.</description>
        <addressOffset>0x9C</addressOffset>
        <fields>
          <field>
            <name>ADDR</name>
            <description>MAC Specific Address 1 [47:32]. Most significant bits of the MAC specific address 1, i.e. bits 47:32.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>16</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>SA2L</name>
        <description>Specific Address 2 Bottom.</description>
        <addressOffset>0xA0</addressOffset>
        <fields>
          <field>
            <name>ADDR</name>
            <description>MAC Specific Address 2 [31:0]. Least significant bits of the MAC specific address 2, i.e. bits 31:0. This field is used for transmission of pause packets</description>
            <bitOffset>0</bitOffset>
            <bitWidth>32</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>SA2H</name>
        <description>Specific Address 2 Top.</description>
        <addressOffset>0xA4</addressOffset>
        <fields>
          <field>
            <name>ADDR</name>
            <description>MAC Specific Address 2 [47:32]. Most significant bits of the MAC specific address 2, i.e. bits 47:32.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>16</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>SA3L</name>
        <description>Specific Address 3 Bottom.</description>
        <addressOffset>0xA8</addressOffset>
        <fields>
          <field>
            <name>ADDR</name>
            <description>MAC Specific Address 3 [31:0]. Least significant bits of the MAC specific address 3, i.e. bits 31:0. This field is used for transmission of pause packets</description>
            <bitOffset>0</bitOffset>
            <bitWidth>32</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>SA3H</name>
        <description>Specific Address 3 Top.</description>
        <addressOffset>0xAC</addressOffset>
        <fields>
          <field>
            <name>ADDR</name>
            <description>MAC Specific Address 3 [47:32]. Most significant bits of the MAC specific address 3, i.e. bits 47:32.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>16</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>SA4L</name>
        <description>Specific Address 4 Bottom.</description>
        <addressOffset>0xB0</addressOffset>
        <fields>
          <field>
            <name>ADDR</name>
            <description>MAC Specific Address 4 [31:0]. Least significant bits of the MAC specific address 4, i.e. bits 31:0. This field is used for transmission of pause packets</description>
            <bitOffset>0</bitOffset>
            <bitWidth>32</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>SA4H</name>
        <description>Specific Address 4 Top.</description>
        <addressOffset>0xB4</addressOffset>
        <fields>
          <field>
            <name>ADDR</name>
            <description>MAC Specific Address 4 [47:32]. Most significant bits of the MAC specific address 4, i.e. bits 47:32.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>16</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>TID_CK</name>
        <description>Type ID Checking.</description>
        <addressOffset>0xB8</addressOffset>
        <fields>
          <field>
            <name>TID</name>
            <description>Type ID Checking. For use in comparisons with received frames TypeID/Length field.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>16</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>TPQ</name>
        <description>Transmit Pause Quantum.</description>
        <addressOffset>0xBC</addressOffset>
        <fields>
          <field>
            <name>TPQ</name>
            <description>Transmit Pause Quantum. Used in hardware generation of transmitted pause packets as value for pause quantum</description>
            <bitOffset>0</bitOffset>
            <bitWidth>16</bitWidth>
            <access>read-write</access>
          </field>
        </fields>
      </register>
      <register>
        <name>REV</name>
        <description>Revision register.</description>
        <addressOffset>0xFC</addressOffset>
        <access>read-only</access>
        <fields>
          <field>
            <name>REV</name>
            <description>Revision Reference. Fixed two byte value specific to revision of design.</description>
            <bitOffset>0</bitOffset>
            <bitWidth>16</bitWidth>
            <access>read-only</access>
          </field>
          <field>
            <name>PART</name>
            <description>Part Reference. For Ethernet MAC design, this is fixed at 0x01.</description>
            <bitOffset>16</bitOffset>
            <bitWidth>16</bitWidth>
            <access>read-only</access>
          </field>
        </fields>
      </register>
    </registers>
  </peripheral>
  
<!--EMAC 10/100 Ethernet MAC.--><peripheral>
  <name>FCR</name>
  <description>Function Control Register.</description>
  <baseAddress>0x40000800</baseAddress>
  <addressBlock>
   <offset>0x00</offset>
   <size>0x400</size>
   <usage>registers</usage>
  </addressBlock>
  <registers>
   <register>
    <name>FCTRL0</name>
    <description>Register 0.</description>
    <addressOffset>0x00</addressOffset>
    <access>read-write</access>
    <fields>
     <field>
      <name>USB_EXTCLK_SEL</name>
      <description>USB External Core Clock Select.</description>
      <bitOffset>16</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>sys</name>
        <description>Generated clock from system clock.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>dig</name>
        <description>Digital clock from a GPIO.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>I2C0_SDA_FILTER_EN</name>
      <description>I2C0 SDA Glitch Filter Enable.</description>
      <bitOffset>20</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>dis</name>
        <description>Filter disabled.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>en</name>
        <description>Filter enabled.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>I2C0_SCL_FILTER_EN</name>
      <description>I2C0 SCL Glitch Filter Enable.</description>
      <bitOffset>21</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>dis</name>
        <description>Filter disabled.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>en</name>
        <description>Filter enabled.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>I2C1_SDA_FILTER_EN</name>
      <description>I2C1 SDA Glitch Filter Enable.</description>
      <bitOffset>22</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>dis</name>
        <description>Filter disabled.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>en</name>
        <description>Filter enabled.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>I2C1_SCL_FILTER_EN</name>
      <description>I2C1 SCL Glitch Filter Enable.</description>
      <bitOffset>23</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>dis</name>
        <description>Filter disabled.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>en</name>
        <description>Filter enabled.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>I2C2AF2_SDA_FILTER_EN</name>
      <description>I2C2 AF2 SDA Glitch Filter Enable.</description>
      <bitOffset>24</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>dis</name>
        <description>Filter disabled.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>en</name>
        <description>Filter enabled.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>I2C2AF2_SCL_FILTER_EN</name>
      <description>I2C2 AF2 SCL Glitch Filter Enable.</description>
      <bitOffset>25</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>dis</name>
        <description>Filter disabled.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>en</name>
        <description>Filter enabled.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>I2C2AF3_SDA_FILTER_EN</name>
      <description>I2C2 AF3 SDA Glitch Filter Enable.</description>
      <bitOffset>26</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>dis</name>
        <description>Filter disabled.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>en</name>
        <description>Filter enabled.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>I2C2AF3_SCL_FILTER_EN</name>
      <description>I2C2 AF3 SCL Glitch Filter Enable.</description>
      <bitOffset>27</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>dis</name>
        <description>Filter disabled.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>en</name>
        <description>Filter enabled.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>I2C2AF4_SDA_FILTER_EN</name>
      <description>I2C2 AF4 SDA Glitch Filter Enable</description>
      <bitOffset>28</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>dis</name>
        <description>Filter disabled.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>en</name>
        <description>Filter enabled.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>I2C2AF4_SCL_FILTER_EN</name>
      <description>I2C2 AF4 SCL Glitch Filter Enable</description>
      <bitOffset>29</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>dis</name>
        <description>Filter disabled.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>en</name>
        <description>Filter enabled.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
    </fields>
   </register>
   <register>
    <name>AUTOCAL0</name>
    <description>Register 1.</description>
    <addressOffset>0x04</addressOffset>
    <access>read-write</access>
    <fields>
     <field>
      <name>SEL</name>
      <description>Auto-calibration Enable.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>dis</name>
        <description>Disabled.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>en</name>
        <description>Enabled.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>EN</name>
      <description>Autocalibration Run.</description>
      <bitOffset>1</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>not</name>
        <description>Not Running.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>run</name>
        <description>Running.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>LOAD</name>
      <description>Load Trim.</description>
      <bitOffset>2</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>INVERT</name>
      <description>Invert Gain.</description>
      <bitOffset>3</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>not</name>
        <description>Not Running.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>run</name>
        <description>Running.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>ATOMIC</name>
      <description>Atomic mode.</description>
      <bitOffset>4</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>not</name>
        <description>Not Running.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>run</name>
        <description>Running.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>GAIN</name>
      <description>MU value.</description>
      <bitOffset>8</bitOffset>
      <bitWidth>12</bitWidth>
     </field>
     <field>
      <name>TRIM</name>
      <description>150MHz HFIO Auto Calibration Trim</description>
      <bitOffset>23</bitOffset>
      <bitWidth>9</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>AUTOCAL1</name>
    <description>Register 2.</description>
    <addressOffset>0x08</addressOffset>
    <access>read-write</access>
    <fields>
     <field>
      <name>NFC_FWD_EN</name>
      <description>Enabled FWD mode for NFC block</description>
      <bitOffset>0</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>NFC_CLK_EN</name>
      <description>Enabled the NFC blocks clock divider in Analog</description>
      <bitOffset>1</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>NFC_FWD_TX_DATA_OVR</name>
      <description>FWD input for NFC block</description>
      <bitOffset>2</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>XO_EN_DGL</name>
      <description>TBD</description>
      <bitOffset>3</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>RX_BIAS_PD</name>
      <description>Power down enable for NFC receiver analog block</description>
      <bitOffset>4</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>RX_BIAS_EN</name>
      <description>Enable the NFC receiver analog blocks</description>
      <bitOffset>5</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>RX_TM_VBG_VABUS</name>
      <description>TBD</description>
      <bitOffset>6</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>RX_TM_BIAS</name>
      <description>TBD</description>
      <bitOffset>7</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
     <field>
      <name>NFC_FWD_DOUT</name>
      <description>FWD output from FNC block</description>
      <bitOffset>8</bitOffset>
      <bitWidth>1</bitWidth>
     </field>
    </fields>
   </register>
   <register>
    <name>AUTOCAL2</name>
    <description>Register 3.</description>
    <addressOffset>0x0C</addressOffset>
    <access>read-write</access>
    <fields>
     <field>
      <name>RUNTIME</name>
      <description>Automatic Calibration Run Time.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>8</bitWidth>
     </field>
    </fields>
   </register>
  </registers>
 </peripheral>

<!--FCR Function Control Register.--></peripherals>
</device>