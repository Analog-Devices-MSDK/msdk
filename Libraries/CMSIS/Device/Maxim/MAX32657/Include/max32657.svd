<?xml version='1.0' encoding='utf-8'?>
<device xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="1.1" xsi:noNamespaceSchemaLocation="svd_schema.xsd">
 <vendor>Maxim-Integrated</vendor>
 <vendorID>Maxim</vendorID>
 <name>max32657</name>
 <series>ARMCM33</series>
 <version>1.0</version>
 <description>MAX32657 32-bit ARM Cortex-M33 microcontroller.</description>
 <cpu>
  <name>CM33</name>
  <revision>r1p0</revision>
  <endian>little</endian>
  <mpuPresent>true</mpuPresent>
  <fpuPresent>true</fpuPresent>
  <nvicPrioBits>3</nvicPrioBits>
  <vendorSystickConfig>false</vendorSystickConfig>
 </cpu>
 <addressUnitBits>8</addressUnitBits>
 <width>32</width>
 <size>0x20</size>
 <access>read-write</access>
 <resetValue>0x00000000</resetValue>
 <resetMask>0xFFFFFFFF</resetMask>
 <peripherals>
  <peripheral>
   <name>AES</name>
   <description>AES Keys.</description>
   <baseAddress>0x40007400</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>CTRL</name>
     <description>AES Control Register</description>
     <addressOffset>0x0000</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>EN</name>
       <description>AES Enable</description>
       <bitRange>[0:0]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>DMA_RX_EN</name>
       <description>DMA Request To Read Data Output FIFO</description>
       <bitRange>[1:1]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>DMA_TX_EN</name>
       <description>DMA Request To Write Data Input FIFO</description>
       <bitRange>[2:2]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>START</name>
       <description>Start AES Calculation</description>
       <bitRange>[3:3]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>INPUT_FLUSH</name>
       <description>Flush the data input FIFO</description>
       <bitRange>[4:4]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>OUTPUT_FLUSH</name>
       <description>Flush the data output FIFO</description>
       <bitRange>[5:5]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>KEY_SIZE</name>
       <description>Encryption Key Size</description>
       <bitRange>[7:6]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>AES128</name>
         <description>128 Bits.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>AES192</name>
         <description>192 Bits.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>AES256</name>
         <description>256 Bits.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TYPE</name>
       <description>Encryption Type Selection</description>
       <bitRange>[9:8]</bitRange>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>STATUS</name>
     <description>AES Status Register</description>
     <addressOffset>0x0004</addressOffset>
     <fields>
      <field>
       <name>BUSY</name>
       <description>AES Busy Status</description>
       <bitRange>[0:0]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>INPUT_EM</name>
       <description>Data input FIFO empty status</description>
       <bitRange>[1:1]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>INPUT_FULL</name>
       <description>Data input FIFO full status</description>
       <bitRange>[2:2]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>OUTPUT_EM</name>
       <description>Data output FIFO empty status</description>
       <bitRange>[3:3]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>OUTPUT_FULL</name>
       <description>Data output FIFO full status</description>
       <bitRange>[4:4]</bitRange>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INTFL</name>
     <description>AES Interrupt Flag Register</description>
     <addressOffset>0x0008</addressOffset>
     <fields>
      <field>
       <name>DONE</name>
       <description>AES Done Interrupt</description>
       <bitRange>[0:0]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>KEY_CHANGE</name>
       <description>External AES Key Changed Interrupt</description>
       <bitRange>[1:1]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>KEY_ZERO</name>
       <description>External AES Key Zero Interrupt</description>
       <bitRange>[2:2]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>OV</name>
       <description>Data Output FIFO Overrun Interrupt</description>
       <bitRange>[3:3]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>KEY_ONE</name>
       <description>KEY_ONE</description>
       <bitRange>[4:4]</bitRange>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INTEN</name>
     <description>AES Interrupt Enable Register</description>
     <addressOffset>0x000C</addressOffset>
     <fields>
      <field>
       <name>DONE</name>
       <description>AES Done Interrupt Enable</description>
       <bitRange>[0:0]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>KEY_CHANGE</name>
       <description>External AES Key Changed Interrupt Enable</description>
       <bitRange>[1:1]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>KEY_ZERO</name>
       <description>External AES Key Zero Interrupt Enable</description>
       <bitRange>[2:2]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>OV</name>
       <description>Data Output FIFO Overrun Interrupt Enable</description>
       <bitRange>[3:3]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>KEY_ONE</name>
       <description>KEY_ONE</description>
       <bitRange>[4:4]</bitRange>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO</name>
     <description>AES Data Register</description>
     <addressOffset>0x0010</addressOffset>
     <fields>
      <field>
       <name>DATA</name>
       <description>AES FIFO</description>
       <bitRange>[0:0]</bitRange>
       <access>read-write</access>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
  <!--AES AES Keys.-->
  <peripheral>
   <name>AESKEYS</name>
   <description>AES Key Registers.</description>
   <baseAddress>0x40007800</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>KEY0</name>
     <description>AES Key 0.</description>
     <addressOffset>0x00</addressOffset>
     <size>32</size>
    </register>
    <register>
     <name>KEY1</name>
     <description>AES Key 1.</description>
     <addressOffset>0x04</addressOffset>
     <size>32</size>
    </register>
    <register>
     <name>KEY2</name>
     <description>AES Key 2.</description>
     <addressOffset>0x08</addressOffset>
     <size>32</size>
    </register>
    <register>
     <name>KEY3</name>
     <description>AES Key 3.</description>
     <addressOffset>0x0C</addressOffset>
     <size>32</size>
    </register>
    <register>
     <name>KEY4</name>
     <description>AES Key 4.</description>
     <addressOffset>0x10</addressOffset>
     <size>32</size>
    </register>
    <register>
     <name>KEY5</name>
     <description>AES Key 5.</description>
     <addressOffset>0x14</addressOffset>
     <size>32</size>
    </register>
    <register>
     <name>KEY6</name>
     <description>AES Key 6.</description>
     <addressOffset>0x18</addressOffset>
     <size>32</size>
    </register>
    <register>
     <name>KEY7</name>
     <description>AES Key 7.</description>
     <addressOffset>0x1C</addressOffset>
     <size>32</size>
    </register>
   </registers>
  </peripheral>
  <!--AESKEYS AES Key Registers.-->
  <peripheral>
   <name>CRC</name>
   <description>CRC Registers.</description>
   <baseAddress>0x4000F000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>CTRL</name>
     <description>CRC Control</description>
     <addressOffset>0x0000</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>EN</name>
       <description>CRC Enable</description>
       <bitRange>[0:0]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>DMA_EN</name>
       <description>DMA Request Enable</description>
       <bitRange>[1:1]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>MSB</name>
       <description>MSB Select</description>
       <bitRange>[2:2]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>BYTE_SWAP_IN</name>
       <description>Byte Swap CRC Data Input</description>
       <bitRange>[3:3]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>BYTE_SWAP_OUT</name>
       <description>Byte Swap CRC Value Output</description>
       <bitRange>[4:4]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>BUSY</name>
       <description>CRC Busy</description>
       <bitRange>[16:16]</bitRange>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>DATAIN32</name>
     <description>CRC Data Input</description>
     <addressOffset>0x0004</addressOffset>
     <fields>
      <field>
       <name>DATA</name>
       <description>CRC Data</description>
       <bitRange>[31:0]</bitRange>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <dim>2</dim>
     <dimIncrement>2</dimIncrement>
     <name>DATAIN16[%s]</name>
     <description>CRC Data Input</description>
     <addressOffset>0x0004</addressOffset>
     <size>16</size>
     <access>read-write</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>CRC Data</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>1</dimIncrement>
     <name>DATAIN8[%s]</name>
     <description>CRC Data Input</description>
     <addressOffset>0x0004</addressOffset>
     <size>8</size>
     <access>read-write</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>CRC Data</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>POLY</name>
     <description>CRC Polynomial</description>
     <addressOffset>0x0008</addressOffset>
     <fields>
      <field>
       <name>POLY</name>
       <description>CRC Polynomial</description>
       <bitRange>[31:0]</bitRange>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>VAL</name>
     <description>Current CRC Value</description>
     <addressOffset>0x000C</addressOffset>
     <fields>
      <field>
       <name>VALUE</name>
       <description>Current CRC Value</description>
       <bitRange>[31:0]</bitRange>
       <access>read-write</access>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
  <!--CRC CRC Registers.-->
  <peripheral>
   <name>DMA0</name>
   <description>DMA Controller Fully programmable, chaining capable DMA channels.</description>
   <baseAddress>0x40028000</baseAddress>
   <size>32</size>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>DMA_CH0</name>
    <value>16</value>
   </interrupt>
   <interrupt>
    <name>DMA_CH1</name>
    <value>17</value>
   </interrupt>
   <interrupt>
    <name>DMA_CH2</name>
    <value>18</value>
   </interrupt>
   <interrupt>
    <name>DMA_CH3</name>
    <value>19</value>
   </interrupt>
   <registers>
    <register>
     <name>INTEN</name>
     <description>DMA Control Register.</description>
     <addressOffset>0x000</addressOffset>
     <fields>
      <field>
       <name>CH0</name>
       <description>Channel 0 Interrupt Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0">
       <name>CH1</name>
       <description>Channel 1 Interrupt Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="CH0">
       <name>CH2</name>
       <description>Channel 2 Interrupt Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="CH0">
       <name>CH3</name>
       <description>Channel 3 Interrupt Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INTFL</name>
     <description>DMA Interrupt Register.</description>
     <addressOffset>0x004</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>CH0</name>
       <description>Channel Interrupt. To clear an interrupt, all active interrupt bits of the DMA_ST must be cleared. The interrupt bits are set only if their corresponding interrupt enable bits are set in DMA_CN.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0">
       <name>CH1</name>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="CH0">
       <name>CH2</name>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="CH0">
       <name>CH3</name>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <cluster>
     <dim>4</dim>
     <dimIncrement>0x20</dimIncrement>
     <name>CH[%s]</name>
     <description>DMA Channel registers.</description>
     <headerStructName>dma_ch</headerStructName>
     <addressOffset>0x100</addressOffset>
     <access>read-write</access>
     <register>
      <name>CTRL</name>
      <description>DMA Channel Control Register.</description>
      <addressOffset>0x000</addressOffset>
      <fields>
       <field>
        <name>EN</name>
        <description>Channel Enable.  This bit is automatically cleared when DMA_ST.CH_ST changes from 1 to 0.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>RLDEN</name>
        <description>Reload Enable. Setting this bit to 1 enables DMA_SRC, DMA_DST and DMA_CNT to be reloaded with their corresponding reload registers upon count-to-zero. This bit is also writeable in the Count Reload Register. Refer to the description on Buffer Chaining for use of this bit. If buffer chaining is not used this bit must be written with a 0. This bit should be set after the reload registers have been programmed.</description>
        <bitOffset>1</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>PRI</name>
        <description>DMA Priority.</description>
        <bitOffset>2</bitOffset>
        <bitWidth>2</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>high</name>
          <description>Highest Priority.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>medHigh</name>
          <description>Medium High Priority.</description>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>medLow</name>
          <description>Medium Low Priority.</description>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>low</name>
          <description>Lowest Priority.</description>
          <value>3</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>REQUEST</name>
        <description>Request Select. Select DMA request line for this channel. If memory-to-memory is selected, the channel operates as if the request is always active.</description>
        <bitOffset>4</bitOffset>
        <bitWidth>6</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>MEMTOMEM</name>
          <description>Memory To Memory</description>
          <value>0x00</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI1RX</name>
          <description>SPI1 RX</description>
          <value>0x01</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART0RX</name>
          <description>UART0 RX</description>
          <value>0x04</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART1RX</name>
          <description>UART1 RX</description>
          <value>0x05</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>I2C0RX</name>
          <description>I2C0 RX</description>
          <value>0x07</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>I2C1RX</name>
          <description>I2C1 RX</description>
          <value>0x08</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>ADC</name>
          <description>ADC</description>
          <value>0x09</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>I2C2RX</name>
          <description>I2C2 RX</description>
          <value>0x0A</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART2RX</name>
          <description>UART2 RX</description>
          <value>0x0E</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI0RX</name>
          <description>SPI0 RX</description>
          <value>0x0F</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>AESRX</name>
          <description>AES RX</description>
          <value>0x10</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART3RX</name>
          <description>UART3 RX</description>
          <value>0x1C</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>I2SRX</name>
          <description>I2S RX</description>
          <value>0x1E</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI1TX</name>
          <description>SPI1 TX</description>
          <value>0x21</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART0TX</name>
          <description>UART0 TX</description>
          <value>0x24</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART1TX</name>
          <description>UART1 TX</description>
          <value>0x25</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>I2C0TX</name>
          <description>I2C0 TX</description>
          <value>0x27</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>I2C1TX</name>
          <description>I2C1 TX</description>
          <value>0x28</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>I2C2TX</name>
          <description>I2C2 TX</description>
          <value>0x2A</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>CRCTX</name>
          <description>CRC TX</description>
          <value>0x2C</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART2TX</name>
          <description>UART2 TX</description>
          <value>0x2E</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI0TX</name>
          <description>SPI0 TX</description>
          <value>0x2F</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>AESTX</name>
          <description>AES TX</description>
          <value>0x30</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART3TX</name>
          <description>UART3 TX</description>
          <value>0x3C</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>I2STX</name>
          <description>I2S TX</description>
          <value>0x3E</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>TO_WAIT</name>
        <description>Request Wait Enable.  When enabled, delay timer start until DMA request transitions from active to inactive.</description>
        <bitOffset>10</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>TO_PER</name>
        <description>Timeout Period Select.</description>
        <bitOffset>11</bitOffset>
        <bitWidth>3</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>to4</name>
          <description>Timeout of 3 to 4 prescale clocks.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to8</name>
          <description>Timeout of 7 to 8 prescale clocks.</description>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to16</name>
          <description>Timeout of 15 to 16 prescale clocks.</description>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to32</name>
          <description>Timeout of 31 to 32 prescale clocks.</description>
          <value>3</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to64</name>
          <description>Timeout of 63 to 64 prescale clocks.</description>
          <value>4</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to128</name>
          <description>Timeout of 127 to 128 prescale clocks.</description>
          <value>5</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to256</name>
          <description>Timeout of 255 to 256 prescale clocks.</description>
          <value>6</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to512</name>
          <description>Timeout of 511 to 512 prescale clocks.</description>
          <value>7</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>TO_CLKDIV</name>
        <description>Pre-Scale Select. Selects the Pre-Scale divider for timer clock input.</description>
        <bitOffset>14</bitOffset>
        <bitWidth>2</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable timer.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div256</name>
          <description>hclk / 256.</description>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div64k</name>
          <description>hclk / 64k.</description>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div16M</name>
          <description>hclk / 16M.</description>
          <value>3</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>SRCWD</name>
        <description>Source Width. In most cases, this will be the data width of each AHB transactions. However, the width will be reduced in the cases where DMA_CNT indicates a smaller value.</description>
        <bitOffset>16</bitOffset>
        <bitWidth>2</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>byte</name>
          <description>Byte.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>halfWord</name>
          <description>Halfword.</description>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>word</name>
          <description>Word.</description>
          <value>2</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>SRCINC</name>
        <description>Source Increment Enable. This bit enables DMA_SRC increment upon every AHB transaction. This bit is forced to 0 for DMA receive from peripherals.</description>
        <bitOffset>18</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>DSTWD</name>
        <description>Destination Width. Indicates the width of the each AHB transactions to the destination peripheral or memory. (The actual width may be less than this if there are insufficient bytes in the DMA FIFO for the full width).</description>
        <bitOffset>20</bitOffset>
        <bitWidth>2</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>byte</name>
          <description>Byte.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>halfWord</name>
          <description>Halfword.</description>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>word</name>
          <description>Word.</description>
          <value>2</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>DSTINC</name>
        <description>Destination Increment Enable. This bit enables DMA_DST increment upon every AHB transaction. This bit is forced to 0 for DMA transmit to peripherals.</description>
        <bitOffset>22</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>BURST_SIZE</name>
        <description>Burst Size. The number of bytes to be transferred into and out of the DMA FIFO in a single burst.  Burst size equals 1 + value stored in this field.</description>
        <bitOffset>24</bitOffset>
        <bitWidth>5</bitWidth>
       </field>
       <field>
        <name>DIS_IE</name>
        <description>Channel Disable Interrupt Enable. When enabled, the IPEND will be set to 1 whenever CH_ST changes from 1 to 0.</description>
        <bitOffset>30</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>CTZ_IE</name>
        <description>Count-to-zero Interrupts Enable. When enabled, the IPEND will be set to 1 whenever a count-to-zero event occurs.</description>
        <bitOffset>31</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
      </fields>
     </register>
     <register>
      <name>STATUS</name>
      <description>DMA Channel Status Register.</description>
      <addressOffset>0x004</addressOffset>
      <fields>
       <field>
        <name>STATUS</name>
        <description>Channel Status. This bit is used to indicate to the programmer when it is safe to change the configuration, address, and count registers for the channel. Whenever this bit is cleared by hardware,  the DMA_CFG.CHEN bit is also cleared (if not cleared already).</description>
        <bitOffset>0</bitOffset>
        <bitWidth>1</bitWidth>
        <access>read-only</access>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>IPEND</name>
        <description>Channel Interrupt.</description>
        <bitOffset>1</bitOffset>
        <bitWidth>1</bitWidth>
        <access>read-only</access>
        <enumeratedValues>
         <enumeratedValue>
          <name>inactive</name>
          <description>No interrupt is pending.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>pending</name>
          <description>An interrupt is pending.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>CTZ_IF</name>
        <description>Count-to-Zero (CTZ) Interrupt Flag</description>
        <bitOffset>2</bitOffset>
        <bitWidth>1</bitWidth>
        <modifiedWriteValues>oneToClear</modifiedWriteValues>
       </field>
       <field>
        <name>RLD_IF</name>
        <description>Reload Event Interrupt Flag.</description>
        <bitOffset>3</bitOffset>
        <bitWidth>1</bitWidth>
        <modifiedWriteValues>oneToClear</modifiedWriteValues>
       </field>
       <field>
        <name>BUS_ERR</name>
        <description>Bus Error. Indicates that an AHB abort was received and the channel has been disabled.</description>
        <bitOffset>4</bitOffset>
        <bitWidth>1</bitWidth>
        <modifiedWriteValues>oneToClear</modifiedWriteValues>
       </field>
       <field>
        <name>TO_IF</name>
        <description>Time-Out Event Interrupt Flag.</description>
        <bitOffset>6</bitOffset>
        <bitWidth>1</bitWidth>
        <modifiedWriteValues>oneToClear</modifiedWriteValues>
       </field>
      </fields>
     </register>
     <register>
      <name>SRC</name>
      <description>Source Device Address. If SRCINC=1, the counter bits are incremented by 1,2, or 4, depending on the data width of each AHB cycle. For peripheral transfers, some or all of the actual address bits are fixed. If SRCINC=0, this register remains constant. In the case where a count-to-zero condition occurs while RLDEN=1, the register is reloaded with the contents of DMA_SRC_RLD.</description>
      <addressOffset>0x008</addressOffset>
      <fields>
       <field>
        <name>ADDR</name>
        <bitOffset>0</bitOffset>
        <bitWidth>32</bitWidth>
       </field>
      </fields>
     </register>
     <register>
      <name>DST</name>
      <description>Destination Device Address. For peripheral transfers, some or all of the actual address bits are fixed. If DSTINC=1, this register is incremented on every AHB write out of the DMA FIFO. They are incremented by 1, 2, or 4, depending on the data width of each AHB cycle. In the case where a count-to-zero condition occurs while RLDEN=1, the register is reloaded with DMA_DST_RLD.</description>
      <addressOffset>0x00C</addressOffset>
      <fields>
       <field>
        <name>ADDR</name>
        <bitOffset>0</bitOffset>
        <bitWidth>32</bitWidth>
       </field>
      </fields>
     </register>
     <register>
      <name>CNT</name>
      <description>DMA Counter. The user loads this register with the number of bytes to transfer. This counter decreases on every AHB cycle into the DMA FIFO. The decrement will be 1, 2, or 4 depending on the data width of each AHB cycle. When the counter reaches 0, a count-to-zero condition is triggered.</description>
      <addressOffset>0x010</addressOffset>
      <fields>
       <field>
        <name>CNT</name>
        <description>DMA Counter.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>24</bitWidth>
       </field>
      </fields>
     </register>
     <register>
      <name>SRCRLD</name>
      <description>Source Address Reload Value. The value of this register is loaded into DMA0_SRC upon a count-to-zero condition.</description>
      <addressOffset>0x014</addressOffset>
      <fields>
       <field>
        <name>ADDR</name>
        <description>Source Address Reload Value.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>31</bitWidth>
       </field>
      </fields>
     </register>
     <register>
      <name>DSTRLD</name>
      <description>Destination Address Reload Value. The value of this register is loaded into DMA0_DST upon a count-to-zero condition.</description>
      <addressOffset>0x018</addressOffset>
      <fields>
       <field>
        <name>ADDR</name>
        <description>Destination Address Reload Value.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>31</bitWidth>
       </field>
      </fields>
     </register>
     <register>
      <name>CNTRLD</name>
      <description>DMA Channel Count Reload Register.</description>
      <addressOffset>0x01C</addressOffset>
      <fields>
       <field>
        <name>CNT</name>
        <description>Count Reload Value. The value of this register is loaded into DMA0_CNT upon a count-to-zero condition.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>24</bitWidth>
       </field>
       <field>
        <name>EN</name>
        <description>Reload Enable. This bit should be set after the address reload registers have been programmed. This bit is automatically cleared to 0 when reload occurs.</description>
        <bitOffset>31</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
      </fields>
     </register>
    </cluster>
   </registers>
  </peripheral>
  <!--DMA0 DMA Controller Fully programmable, chaining capable DMA channels.-->
  <peripheral derivedFrom="DMA0">
   <name>DMA1</name>
   <description>DMA Controller Fully programmable, chaining capable DMA channels. 1</description>
   <baseAddress>0x40035000</baseAddress>
   <interrupt>
    <name>DMA1</name>
    <description>DMA1 IRQ</description>
    <value>20</value>
   </interrupt>
  </peripheral>
  <!--DMA1 DMA Controller Fully programmable, chaining capable DMA channels. 1-->
  <peripheral>
   <name>FLC</name>
   <description>Flash Memory Control.</description>
   <prependToName>FLSH_</prependToName>
   <baseAddress>0x40029000</baseAddress>
   <access>read-write</access>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>Flash_Controller</name>
    <description>Flash Controller interrupt.</description>
    <value>13</value>
   </interrupt>
   <registers>
    <register>
     <name>ADDR</name>
     <description>Flash Write Address.</description>
     <addressOffset>0x00</addressOffset>
     <resetValue>0x10000000</resetValue>
     <fields>
      <field>
       <name>ADDR</name>
       <description>Address for next operation.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CLKDIV</name>
     <description>Flash Clock Divide. The clock (PLL0) is divided by this value to generate a 1 MHz clock for Flash controller.</description>
     <addressOffset>0x04</addressOffset>
     <resetValue>0x00000064</resetValue>
     <fields>
      <field>
       <name>CLKDIV</name>
       <description>Flash Clock Divide. The clock is divided by this value to generate a 1MHz clock for flash controller.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL</name>
     <description>Flash Control Register.</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>WR</name>
       <description>Write.  This bit is automatically cleared after the operation.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>complete</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="WR">
       <name>ME</name>
       <description>Mass Erase.  This bit is automatically cleared after the operation.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="WR">
       <name>PGE</name>
       <description>Page Erase.  This bit is automatically cleared after the operation.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>WDTH</name>
       <description>TBD</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ERASE_CODE</name>
       <description>Erase Code.  The ERASE_CODE must be set up property before erase operation can be initiated. These bits are automatically cleared after the operation is complete.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No operation.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>erasePage</name>
         <description>Enable Page Erase.</description>
         <value>0x55</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>eraseAll</name>
         <description>Enable Mass Erase. The debug port must be enabled.</description>
         <value>0xAA</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PEND</name>
       <description>Flash Pending.  When Flash operation is in progress (busy), Flash reads and writes will fail. When PEND is set, write to all Flash registers, with exception of the Flash interrupt register, are ignored.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>idle</name>
         <description>Idle.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>busy</name>
         <description>Busy.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LVE</name>
       <description>Low Voltage enable.</description>
       <bitOffset>25</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>UNLOCK</name>
       <description>Flash Unlock.  The correct unlock code must be written to these four bits before any Flash write or erase operation is allowed.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>unlocked</name>
         <description>Flash Unlocked.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>locked</name>
         <description>Flash Locked.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INTR</name>
     <description>Flash Interrupt Register.</description>
     <addressOffset>0x024</addressOffset>
     <fields>
      <field>
       <name>DONE_IF</name>
       <description>Flash Done Interrupt.  This bit is set to 1 upon Flash write or erase completion.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AF_IF</name>
       <description>Flash Access Fail.  This bit is set when an attempt is made to write the flash while the flash is busy or the flash is locked. This bit can only be set to 1 by hardware.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noerr</name>
         <description>No Failure.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>error</name>
         <description>Failure occurs.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DONE_IE</name>
       <description>Flash Done Interrupt Enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AF_IE</name>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>4</dimIncrement>
     <name>DATA[%s]</name>
     <description>Flash Write Data.</description>
     <addressOffset>0x30</addressOffset>
     <fields>
      <field>
       <name>DATA</name>
       <description>Data next operation.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ACTRL</name>
     <description>Access Control Register. Writing the ACNTL register with the following values in the order shown, allows read and write access to the system and user Information block: pflc-acntl = 0x3a7f5ca3; pflc-acntl = 0xa1e34f20; pflc-acntl = 0x9608b2c1. When unlocked, a write of any word will disable access to system and user information block. Readback of this register is always zero.</description>
     <addressOffset>0x40</addressOffset>
     <fields>
      <field>
       <name>ACTRL</name>
       <description>Access control.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>WELR0</name>
     <description>Flash Write/Lock 0 Register.</description>
     <addressOffset>0x80</addressOffset>
     <resetValue>0xFFFFFFFF</resetValue>
     <fields>
      <field>
       <name>WELR0</name>
       <description>Flash Write/Lock Bit.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>RLR0</name>
     <description>Flash Read Lock 0 Register.</description>
     <addressOffset>0x84</addressOffset>
     <resetValue>0xFFFFFFFF</resetValue>
     <fields>
      <field>
       <name>RLR0</name>
       <description>Read Lock Bit.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
  <!--FLC Flash Memory Control.-->
  <peripheral>
   <name>GPIO0</name>
   <description>Individual I/O for each GPIO</description>
   <groupName>GPIO</groupName>
   <baseAddress>0x40008000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>GPIO0</name>
    <description>GPIO0 interrupt.</description>
    <value>14</value>
   </interrupt>
   <registers>
    <register>
     <name>EN0</name>
     <description>GPIO Function Enable Register. Each bit controls the GPIO_EN setting for one GPIO pin on the associated port.</description>
     <addressOffset>0x00</addressOffset>
     <fields>
      <field>
       <name>GPIO_EN</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ALTERNATE</name>
         <description>Alternate function enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>GPIO</name>
         <description>GPIO function is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>EN0_SET</name>
     <description>GPIO Set Function Enable Register. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_EN to 1, without affecting other bits in that register.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>EN0_CLR</name>
     <description>GPIO Clear Function Enable Register. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_EN to 0, without affecting other bits in that register.</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>OUTEN</name>
     <description>GPIO Output Enable Register. Each bit controls the GPIO_OUT_EN setting for one GPIO pin in the associated port.</description>
     <addressOffset>0x0C</addressOffset>
     <fields>
      <field>
       <name>EN</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>GPIO Output Disable</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>GPIO Output Enable</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>OUTEN_SET</name>
     <description>GPIO Output Enable Set Function Enable Register. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_OUT_EN to 1, without affecting other bits in that register.</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>OUTEN_CLR</name>
     <description>GPIO Output Enable Clear Function Enable Register. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_OUT_EN to 0, without affecting other bits in that register.</description>
     <addressOffset>0x14</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>OUT</name>
     <description>GPIO Output Register. Each bit controls the GPIO_OUT setting for one pin in the associated port.  This register can be written either directly, or by using the GPIO_OUT_SET and GPIO_OUT_CLR registers.</description>
     <addressOffset>0x18</addressOffset>
     <fields>
      <field>
       <name>GPIO_OUT</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>low</name>
         <description>Drive Logic 0 (low) on GPIO output.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>high</name>
         <description>Drive logic 1 (high) on GPIO output.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>OUT_SET</name>
     <description>GPIO Output Set. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_OUT to 1, without affecting other bits in that register.</description>
     <addressOffset>0x1C</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>GPIO_OUT_SET</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No Effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>set</name>
         <description>Set GPIO_OUT bit in this position to '1'</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>OUT_CLR</name>
     <description>GPIO Output Clear. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_OUT to 0, without affecting other bits in that register.</description>
     <addressOffset>0x20</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>GPIO_OUT_CLR</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>IN</name>
     <description>GPIO Input Register. Read-only register to read from the logic states of the GPIO pins on this port.</description>
     <addressOffset>0x24</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>GPIO_IN</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INTMODE</name>
     <description>GPIO Interrupt Mode Register. Each bit in this register controls the interrupt mode setting for the associated GPIO pin on this port.</description>
     <addressOffset>0x28</addressOffset>
     <fields>
      <field>
       <name>GPIO_INTMODE</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>level</name>
         <description>Interrupts for this pin are level triggered.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>edge</name>
         <description>Interrupts for this pin are edge triggered.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INTPOL</name>
     <description>GPIO Interrupt Polarity Register. Each bit in this register controls the interrupt polarity setting for one GPIO pin in the associated port.</description>
     <addressOffset>0x2C</addressOffset>
     <fields>
      <field>
       <name>GPIO_INTPOL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>falling</name>
         <description>Interrupts are latched on a falling edge or low level condition for this pin.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>rising</name>
         <description>Interrupts are latched on a rising edge or high condition for this pin.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INEN</name>
     <description>GPIO Input Enable</description>
     <addressOffset>0x30</addressOffset>
    </register>
    <register>
     <name>INTEN</name>
     <description>GPIO Interrupt Enable Register. Each bit in this register controls the GPIO interrupt enable for the associated pin on the GPIO port.</description>
     <addressOffset>0x34</addressOffset>
     <fields>
      <field>
       <name>GPIO_INTEN</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupts are disabled for this GPIO pin.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupts are enabled for this GPIO pin.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INTEN_SET</name>
     <description>GPIO Interrupt Enable Set. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_INT_EN to 1, without affecting other bits in that register.</description>
     <addressOffset>0x38</addressOffset>
     <fields>
      <field>
       <name>GPIO_INTEN_SET</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>set</name>
         <description>Set GPIO_INT_EN bit in this position to '1'</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INTEN_CLR</name>
     <description>GPIO Interrupt Enable Clear. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_INT_EN to 0, without affecting other bits in that register.</description>
     <addressOffset>0x3C</addressOffset>
     <fields>
      <field>
       <name>GPIO_INTEN_CLR</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No Effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>clear</name>
         <description>Clear GPIO_INT_EN bit in this position to '0'</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INTFL</name>
     <description>GPIO Interrupt Status Register. Each bit in this register contains the pending interrupt status for the associated GPIO pin in this port.</description>
     <addressOffset>0x40</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>GPIO_INTFL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No Interrupt is pending on this GPIO pin.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An Interrupt is pending on this GPIO pin.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INTFL_CLR</name>
     <description>GPIO Status Clear. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_INT_STAT to 0, without affecting other bits in that register.</description>
     <addressOffset>0x48</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>WKEN</name>
     <description>GPIO Wakeup Enable Register.</description>
     <addressOffset>0x4C</addressOffset>
     <fields>
      <field>
       <name>GPIO_WKEN</name>
       <description>Reserved.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>WKEN_SET</name>
     <description>GPIO Wakeup Enable Atomic Set Register.</description>
     <addressOffset>0x50</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Reserved.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>WKEN_CLR</name>
     <description>GPIO Wakeup Enable Atomic Clear Register.</description>
     <addressOffset>0x54</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>DUALEDGE</name>
     <description>GPIO Interrupt Dual Edge Mode Register. Each bit in this register selects dual edge mode for the associated GPIO pin in this port.</description>
     <addressOffset>0x5C</addressOffset>
     <fields>
      <field>
       <name>GPIO_DUALEDGE</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Dual Edge mode is enabled. If edge-triggered interrupts are enabled on this GPIO pin, then both rising and falling edges will trigger interrupts regardless of the GPIO_INT_POL setting.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>PADCTRL0</name>
     <description>GPIO Port n Pad Control 0 Register. Each bit in this register enables the weak pull-up or weak pull-down for the associated GPIO pin in this port.</description>
     <addressOffset>0x60</addressOffset>
     <fields>
      <field>
       <name>GPIO_PADCTRL0</name>
       <description>Setting a bit in this field enables either the weak pullup or weak pulldown resistor on the corresponding GPIO port device pin. The selection for pullup or pulldown resistor is set using the GPIOn_PS register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable pull-up or pull-down.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>PADCTRL1</name>
     <description>GPIO Input Mode Config 2. Each bit in this register enables the weak pull-up for the associated GPIO pin in this port.</description>
     <addressOffset>0x64</addressOffset>
     <fields>
      <field>
       <name>GPIO_PADCTRL1</name>
       <description>Reserved.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>EN1</name>
     <description>GPIO Port n Configuration Enable Bit 1 Register. Each bit in this register selects between primary/secondary functions for the associated GPIO pin in this port.</description>
     <addressOffset>0x68</addressOffset>
     <fields>
      <field>
       <name>GPIO_EN1</name>
       <description>GPIO AF 1 Mode Select.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>primary</name>
         <description>Primary function selected.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>secondary</name>
         <description>Secondary function selected.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>EN1_SET</name>
     <description>GPIO Alternate Function Set. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_EN1 to 1, without affecting other bits in that register.</description>
     <addressOffset>0x6C</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>EN1_CLR</name>
     <description>GPIO Alternate Function Clear. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_EN1 to 0, without affecting other bits in that register.</description>
     <addressOffset>0x70</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>EN2</name>
     <description>GPIO Alternate Function Enable Register. Each bit in this register selects between primary/secondary functions for the associated GPIO pin in this port.</description>
     <addressOffset>0x74</addressOffset>
     <fields>
      <field>
       <name>GPIO_EN2</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>primary</name>
         <description>Primary function selected.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>secondary</name>
         <description>Secondary function selected.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>EN2_SET</name>
     <description>GPIO Alternate Function 2 Set. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_EN2 to 1, without affecting other bits in that register.</description>
     <addressOffset>0x78</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>EN2_CLR</name>
     <description>GPIO Wake Alternate Function Clear. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_EN2 to 0, without affecting other bits in that register.</description>
     <addressOffset>0x7C</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>HYSEN</name>
     <description>GPIO Input Hysteresis Enable.</description>
     <addressOffset>0xA8</addressOffset>
     <fields>
      <field>
       <name>GPIO_HYSEN</name>
       <description>GPIO Input Hysteresis Enable. Setting a bit in this field enables a Schmitt input to introduce hysteresis for better noise immunity on the corresponding GPIO port device pin.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Input hysteresis disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Input hysteresis enabled.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SRSEL</name>
     <description>GPIO Slew Rate Enable Register.</description>
     <addressOffset>0xAC</addressOffset>
     <fields>
      <field>
       <name>GPIO_SRSEL</name>
       <description>GPIO Slew Rate Mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>FAST</name>
         <description>Fast Slew Rate selected.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SLOW</name>
         <description>Slow Slew Rate selected.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>DS0</name>
     <description>GPIO Drive Strength Register. The mode selection is set using the combination of the GPIOn_DS1 and GPIOn_DS0 bits for the associated GPIO pin. See the GPIO Drive Strength section for the selection options on these I/O pins.</description>
     <addressOffset>0xB0</addressOffset>
     <fields>
      <field>
       <name>GPIO_DS0</name>
       <description>GPIO Drive Strength 0 Select.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ld</name>
         <description>GPIO port pin is in low-drive mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>hd</name>
         <description>GPIO port pin is in high-drive mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>DS1</name>
     <description>GPIO Drive Strength 1 Register. The mode selection is set using the combination of the GPIOn_DS1 and GPIOn_DS0 bits for the associated GPIO pin. See the GPIO Drive Strength section for the selection options on these I/O pins.</description>
     <addressOffset>0xB4</addressOffset>
     <fields>
      <field>
       <name>GPIO_DS1</name>
       <description>GPIO Drive Strength 1 Select.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PS</name>
     <description>GPIO Pulldown/Pullup Strength Select Register.</description>
     <addressOffset>0xB8</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>pd</name>
         <description>Pulldown resistor selected.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pu</name>
         <description>Pullup resistor selected.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>VSSEL</name>
     <description>GPIO Voltage Select.</description>
     <addressOffset>0xC0</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Reserved.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
  <!--GPIO0 Individual I/O for each GPIO-->
  <peripheral>
   <name>I3C</name>
   <description>I3C Registers</description>
   <baseAddress>0x40018000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>I3C</name>
    <description>I3C interrupt.</description>
    <value>10</value>
   </interrupt>
   <registers>
    <register>
     <name>MCONFIG</name>
     <description>Controller Configuration Register</description>
     <addressOffset>0x000</addressOffset>
     <fields>
      <field>
       <name>CTARENA</name>
       <description>Controller device enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>OFF</name>
         <description>Controller mode off.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ON</name>
         <description>Controller mode on.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CAPABLE</name>
         <description>Controller mode capable.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DISTO</name>
       <description>Disable timeout error (used only when configuration parameter
              WITH_TIMEOUT = 1).</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ENABLE</name>
         <description>Enable timeout error.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DISABLE</name>
         <description>Disable the timeout error (MERRWARN.TIMEOUT) that occurs
                  when the controller remains in a state other than stopped for more
                  than 100 us.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>HKEEP</name>
       <description>High-keeper implementation. Specifies how high-keeper control is
              implemented in this device.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>OFF</name>
         <description>No high-keeper support.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ONCHIP_SCL_SDA</name>
         <description>On-chip high-keeper support.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>EXTERNAL_SDA</name>
         <description>External high-keeper support for SDA.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>EXTERNAL_SCL_SDA</name>
         <description>External high-keeper support for SCL and SDA.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ODSTOP</name>
       <description>Use open-drain speed for STOP.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>PUSH_PULL</name>
         <description>The I3C_11_AC emits STOP at push-pull speed for I3C messages.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>OPEN_DRAIN</name>
         <description>The I3C_11_AC emits STOP at open-drain speed for I3C messages.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PPBAUD</name>
       <description>SCL frequency for push-pull drive.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>FCLK1</name>
         <description>SCL high period is one fclk period.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK2</name>
         <description>SCL high period is two fclk periods.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK3</name>
         <description>SCL high period is three fclk periods.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK4</name>
         <description>SCL high period is four fclk periods.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK5</name>
         <description>SCL high period is five fclk periods.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK6</name>
         <description>SCL high period is six fclk periods.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK7</name>
         <description>SCL high period is seven fclk periods.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK8</name>
         <description>SCL high period is eight fclk periods.</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK9</name>
         <description>SCL high period is nine fclk periods.</description>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK10</name>
         <description>SCL high period is ten fclk periods.</description>
         <value>9</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK11</name>
         <description>SCL high period is eleven fclk periods.</description>
         <value>10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK12</name>
         <description>SCL high period is twelve fclk periods.</description>
         <value>11</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK13</name>
         <description>SCL high period is thirteen fclk periods.</description>
         <value>12</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK14</name>
         <description>SCL high period is fourteen fclk periods.</description>
         <value>13</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK15</name>
         <description>SCL high period is fifteen fclk periods.</description>
         <value>14</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK16</name>
         <description>SCL high period is sixteen fclk periods.</description>
         <value>15</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PPLOW</name>
       <description>Number of fclk periods to add to the base SCL low period for push-pull operation.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>FCLK0</name>
         <description>Add zero fclk periods to the SCL low period.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK1</name>
         <description>Add one fclk period to the SCL low period.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK2</name>
         <description>Add two fclk periods to the SCL low period.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK3</name>
         <description>Add three fclk periods to the SCL low period.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK4</name>
         <description>Add four fclk periods to the SCL low period.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK5</name>
         <description>Add five fclk periods to the SCL low period.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK6</name>
         <description>Add six fclk periods to the SCL low period.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK7</name>
         <description>Add seven fclk periods to the SCL low period.</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK8</name>
         <description>Add eight fclk periods to the SCL low period.</description>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK9</name>
         <description>Add nine fclk periods to the SCL low period.</description>
         <value>9</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK10</name>
         <description>Add ten fclk periods to the SCL low period.</description>
         <value>10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK11</name>
         <description>Add eleven fclk periods to the SCL low period.</description>
         <value>11</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK12</name>
         <description>Add twelve fclk periods to the SCL low period.</description>
         <value>12</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK13</name>
         <description>Add thirteen fclk periods to the SCL low period.</description>
         <value>13</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK14</name>
         <description>Add fourteen fclk periods to the SCL low period.</description>
         <value>14</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK15</name>
         <description>Add fifteen fclk periods to the SCL low period.</description>
         <value>15</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ODBAUD</name>
       <description>Number of PPBAUD periods (minus 1) to make one SCL low period for I3C open-drain operation.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>ODHPP</name>
       <description>Controls SCL high period for I3C open-drain operation.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SKEW</name>
       <description>Number of fclk periods to delay the SDA value change from the SCL edge for I3C push-pull operation.</description>
       <bitOffset>25</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>FCLK0</name>
         <description>Delay for zero fclk periods.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK1</name>
         <description>Delay for one fclk period.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK2</name>
         <description>Delay for two fclk periods.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK3</name>
         <description>Delay for three fclk periods.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK4</name>
         <description>Delay for four fclk periods.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK5</name>
         <description>Delay for five fclk periods.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK6</name>
         <description>Delay for six fclk periods.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FCLK7</name>
         <description>Delay for seven fclk periods.</description>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>I2CBAUD</name>
       <description>Determines SCL high and low periods for I2C mode, in units of ODBAUD period.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CONFIG</name>
     <description>Configuration Register</description>
     <addressOffset>0x004</addressOffset>
     <fields>
      <field>
       <name>TGTENA</name>
       <description>Target device enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>MATCHSS</name>
       <description>Match STOP and START.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>S0IGNORE</name>
       <description>Ignore TE0 and TE1 errors.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>BTML</name>
       <description>BTML specifies the number of SDA lanes to support for HDR-BT mode transfers.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>S_LANE</name>
         <description>Single-lane only.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SD_LANE</name>
         <description>Single-lane or dual-lane.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SDQ_LANE</name>
         <description>Single-lane, dual-lane, or quad-lane.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>IDRAND</name>
       <description>IDRAND contains the value for bit 32 of the 48-bit Provisioned ID,
              indicating whether the value in the PARTNO register is a Vendor
              Fixed Value or Random Value.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>OFFLINE</name>
       <description>Re-join I3C bus with existing dynamic address.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HDRCMD</name>
       <description>HDRCMD controls whether the command byte of an incoming HDR-DDR mode message is
              sent to the application through the HDRCMD register or through the
              receive buffer/FIFO.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>TO_FIFO</name>
         <description>Command byte of incoming HDR-DDR mode message is
                  written to the receive buffer/FIFO.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>TO_HDRCMD</name>
         <description>Command byte of incoming HDR-DDR mode read or write
                  message is written to the HDRCMD register.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>TO_HDRCMD_FIFO</name>
         <description>Command byte of incoming HDR-DDR mode read message is
                  written to the HDRCMD register. Command byte of incoming HDRDDR
                  mode write message is written to the receive buffer/FIFO.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BAMATCH</name>
       <description>BAMATCH contains the value to be compared with the clk_slow
              counter value to determine when the 1-us Bus Available time has
              elapsed for event generation.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>SADDR</name>
       <description>SADDR contains the 7-bit I2C-style static address written by the application.</description>
       <bitOffset>25</bitOffset>
       <bitWidth>7</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>STATUS</name>
     <description>Status Register</description>
     <addressOffset>0x008</addressOffset>
     <fields>
      <field>
       <name>STNOTSTOP</name>
       <description>Not stopped.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>STMSG</name>
       <description>Message.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>STCCCH</name>
       <description>CCC is being handled.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>STREQRD</name>
       <description>SDR mode read.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>STREQWR</name>
       <description>SDR mode write.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>STDAA</name>
       <description>DAA mode.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>STHDR</name>
       <description>HDR mode.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>START</name>
       <description>START detected.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>MATCHED</name>
       <description>Address matched.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>STOP</name>
       <description>STOP detected.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXPEND</name>
       <description>Receive (from-bus) data ready.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TXNOTFULL</name>
       <description>Ready for to-bus (transmit) data.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DACHG</name>
       <description>Dynamic address changed.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CCC</name>
       <description>CCC received.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ERRWARN</name>
       <description>Error/warning.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HDRMATCHED</name>
       <description>HDR mode address match.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CHANDLED</name>
       <description>CCC handled.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>EVENT</name>
       <description>Event requested.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TGTRST</name>
       <description>I3C Target Reset.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>EVDET</name>
       <description>Holds the status of the current (when EVENT = 1) or pending event.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>NONE</name>
         <description>None.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>REQ_NOT_SENT</name>
         <description>Request not yet sent.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>REQ_NACKED</name>
         <description>Request was sent and NACKed and will be tried again.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>REQ_ACKED</name>
         <description>Request was sent and ACKed.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>IBIDIS</name>
       <description>Indicates whether IBI events are disabled.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>MRDIS</name>
       <description>Indicates whether bus controller request events are disabled.</description>
       <bitOffset>25</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HJDIS</name>
       <description>Indicates whether Hot-Join events are disabled.</description>
       <bitOffset>27</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ACTSTATE</name>
       <description>Holds the current activity state.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>LATENCY_NONE</name>
         <description>No latency.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>LATENCY_1MS</name>
         <description>1 ms latency.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>LATENCY_100MS</name>
         <description>100 ms latency.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>LATENCY_10S</name>
         <description>10 s latency.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TIMECTRL</name>
       <description>Timing control mode.</description>
       <bitOffset>30</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>DISABLED</name>
         <description>Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SYNC</name>
         <description>Timing Control Synchronous Mode is enabled.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ASYNCHRONOUS</name>
         <description>Timing Control Asynchronous Mode 0 or 1 is enabled.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SYNC_ASYNC</name>
         <description>Both Synchronous Mode and Asynchronous Mode 0 are enabled.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL</name>
     <description>I3C Control Register</description>
     <addressOffset>0x00C</addressOffset>
     <fields>
      <field>
       <name>EVENT</name>
       <description>Generate event request on the I3C bus.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>NORMAL</name>
         <description>Normal mode (no event requested).</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IBI</name>
         <description>Generate an IBI on the I3C bus.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CTLR_REQ</name>
         <description>Request control of the I3C bus.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>HOTJOIN</name>
         <description>Generate a Hot-Join request.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTDATA</name>
       <description>Send additional IBI data bytes data when generating an IBI.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>MAPIDX</name>
       <description>Index of the dynamic address for the current IBI request.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>IBIDATA</name>
       <description>Mandatory data byte to be sent when generating an IBI.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>PENDINT</name>
       <description>Pending Interrupt field of a GETSTATUS CCC.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>ACTSTATE</name>
       <description>Activity Mode field of a GETSTATUS CCC.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>VENDINFO</name>
       <description>Vendor Reserved field of a GETSTATUS CCC.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INTSET</name>
     <description>Interrupt Enable Set Register</description>
     <addressOffset>0x010</addressOffset>
     <resetValue>0x00080000</resetValue>
     <fields>
      <field>
       <name>START</name>
       <description>START detected interrupt enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>MATCHED</name>
       <description>Address matched interrupt enable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>STOP</name>
       <description>STOP detected interrupt enable.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXPEND</name>
       <description>Receive (from-bus) data ready interrupt enable.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TXNOTFULL</name>
       <description>Ready for to-bus (transmit) data interrupt enable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DACHG</name>
       <description>W1S Dynamic address changed interrupt enable.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CCC</name>
       <description>CCC received interrupt enable.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ERRWARN</name>
       <description>Error/warning interrupt enable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HDRMATCHED</name>
       <description>HDR address match interrupt enable.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CHANDLED</name>
       <description>CCC handled interrupt enable.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>EVENT</name>
       <description>Event requested interrupt enable.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TGRST</name>
       <description>I3C target reset interrupt enable.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INTCLR</name>
     <description>Interrupt Enable Clear Register</description>
     <addressOffset>0x014</addressOffset>
     <resetValue>0x00080000</resetValue>
     <access>write-only</access>
     <fields>
      <field>
       <name>START</name>
       <description>START detected interrupt disable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>MATCHED</name>
       <description>Address matched interrupt disable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>STOP</name>
       <description>STOP detected interrupt disable.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXPEND</name>
       <description>Receive (from-bus) data ready interrupt disable.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TXNOTFULL</name>
       <description>Ready for to-bus (transmit) data interrupt disable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DACHG</name>
       <description>W1S Dynamic address changed interrupt disable.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CCC</name>
       <description>CCC received interrupt disable.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ERRWARN</name>
       <description>Error/warning interrupt disable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HDRMATCHED</name>
       <description>HDR address match interrupt disable.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CHANDLED</name>
       <description>CCC handled interrupt disable.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>EVENT</name>
       <description>Event requested interrupt disable.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TGRST</name>
       <description>I3C target reset interrupt disable.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INTMASKED</name>
     <description>Interrupt Masked Register</description>
     <addressOffset>0x018</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>START</name>
       <description>START detected interrupt active.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>MATCHED</name>
       <description>Address matched interrupt active.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>STOP</name>
       <description>STOP detected interrupt active.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXPEND</name>
       <description>Receive (from-bus) data ready interrupt active.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TXNOTFULL</name>
       <description>Ready for to-bus (transmit) data interrupt active.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DACHG</name>
       <description>W1S Dynamic address changed interrupt active.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CCC</name>
       <description>CCC received interrupt active.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ERRWARN</name>
       <description>Error/warning interrupt active.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HDRMATCHED</name>
       <description>HDR address match interrupt active.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CHANDLED</name>
       <description>CCC handled interrupt active.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>EVENT</name>
       <description>Event requested interrupt active.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TGRST</name>
       <description>I3C target reset interrupt active.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ERRWARN</name>
     <description>Error and Warning Register</description>
     <addressOffset>0x01C</addressOffset>
     <fields>
      <field>
       <name>ORUN</name>
       <description>Overrun.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>URUN</name>
       <description>Underrun.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>URUNNACK</name>
       <description>Underrun caused NACK.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TERM</name>
       <description>Controller terminated read.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>INVSTART</name>
       <description>Invalid START.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SPAR</name>
       <description>SDR parity error.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HPAR</name>
       <description>HDR parity error.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HCRC</name>
       <description>HDR CRC Error.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>S0S1</name>
       <description>TE0 or TE1 error</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HNOVERIFY</name>
       <description>An HDR-BT mode read was not verified.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HINVREQ</name>
       <description>Invalid request in HDR-BT mode.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>OREAD</name>
       <description>Read data underrun.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>OWRITE</name>
       <description>Write data overrun.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>WRONGSIZE</name>
       <description>Application wrote or read the wrong data register for the current mode.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>DMACTRL</name>
     <description>DMA Control Register</description>
     <addressOffset>0x020</addressOffset>
     <resetValue>0x00000010</resetValue>
     <fields>
      <field>
       <name>DMAFB</name>
       <description>DMA read (from-bus) enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>DISABLE</name>
         <description>Disable DMA.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>EN_ONEFRAME_SDR</name>
         <description>Enable DMA for one frame in SDR mode.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ENABLE</name>
         <description>Enable DMA until DMA is disabled by setting DMAFB to 00.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DMATB</name>
       <description>DMA write (to-bus) enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>DISABLE</name>
         <description>Disable DMA.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>EN_ONEFRAME_SDR</name>
         <description>Enable DMA for one frame in SDR mode.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ENABLE</name>
         <description>Enable DMA until DMA is disabled by setting DMATB to 00.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DMAWIDTH</name>
       <description>DMA transfer data width.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>BYTE</name>
         <description>Byte.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>HALFWORD</name>
         <description>Half-word.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>HDRBTCFG</name>
     <description>HDR-BT Configuration Register</description>
     <addressOffset>0x024</addressOffset>
     <fields>
      <field>
       <name>CRC32</name>
       <description>Allow CRC32.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>CRC16_ONLY</name>
         <description>Allow only CRC16.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CRC32_OR_CRC16</name>
         <description>Allow either CRC32 or CRC16.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>WDATAMAX</name>
       <description>Maximum data length for HDR-BT mode write, in units of 32-byte blocks.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>12</bitWidth>
      </field>
      <field>
       <name>RDATALEN</name>
       <description>Length of data to be returned for HDR-BT mode read.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>HDRBTLAST</name>
     <description>HDR-BT Last Data Length Register</description>
     <addressOffset>0x028</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>DATALEN</name>
       <description>Data length of most recent HDR-BT mode transfer.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>DATACTRL</name>
     <description>Data Control Register</description>
     <addressOffset>0x02C</addressOffset>
     <resetValue>0x80000030</resetValue>
     <fields>
      <field>
       <name>FLUSHTB</name>
       <description>Flush transmit buffer or FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>FLUSHFB</name>
       <description>Flush receive buffer or FIFO.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>UNLOCK</name>
       <description>Unlock FIFO triggers.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TXTRIG</name>
       <description>Transmit (to-bus) FIFO trigger level.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>EMPTY</name>
         <description>Trigger when empty.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>QUARTER_FULL</name>
         <description>Trigger when 1/4 full or less.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>HALF_FULL</name>
         <description>Trigger when 1/2 full or less.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ALMOST_FULL</name>
         <description>Trigger when 1 less than full or less.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXTRIG</name>
       <description>Receive (from-bus) FIFO trigger level.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>NOT_EMPTY</name>
         <description>Trigger when not empty.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>QUARTER_FULL</name>
         <description>Trigger when 1/4 full or more.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>HALF_FULL</name>
         <description>Trigger when 1/2 full or more.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>3_4_FULL</name>
         <description>Trigger when 3/4 full or more.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXCOUNT</name>
       <description>Number of entries in transmit (to-bus) buffer or FIFO.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>RXCOUNT</name>
       <description>Number of entries in receive (from-bus) buffer or FIFO.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>TXFULL</name>
       <description>Transmit buffer full.</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXEMPTY</name>
       <description>Receive buffer empty.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>WDATAB</name>
     <description>Write Byte Data Register</description>
     <addressOffset>0x030</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Data byte to be sent to the I3C or I2C bus controller.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>END</name>
       <description>End-of-data.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>END2</name>
       <description>End-of-data.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>WDATABE</name>
     <description>Write Byte Data as End Register</description>
     <addressOffset>0x034</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>The last data byte to be sent to the I3C bus controller for the current message.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>WDATAH</name>
     <description>Write Half-Word Data Register</description>
     <addressOffset>0x038</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>DATA0</name>
       <description>First data byte to be sent to the I3C or I2C bus controller.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>DATA1</name>
       <description>Second data byte to be sent to the I3C or I2C bus controller.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>END</name>
       <description>Set DATA1 as the last byte of the message.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>WDATAHE</name>
     <description>Write Half-Word Data as End Register</description>
     <addressOffset>0x03C</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>DATA0</name>
       <description>First data byte to be sent to the I3C or I2C bus controller.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>DATA1</name>
       <description>Second data byte to be sent to the I3C or I2C bus controller.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>RDATAB</name>
     <description>Read Byte Data Register</description>
     <addressOffset>0x040</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Read data byte from receive (from-bus) buffer or FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>RDATAH</name>
     <description>Read Half-Word Data Register</description>
     <addressOffset>0x048</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>DATA0</name>
       <description>First read data byte from receive (from-bus) buffer or FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>DATA1</name>
       <description>Second read data byte from receive (from-bus) buffer or FIFO.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>WDATAB1</name>
     <description>Byte-Only Write Byte Data Register</description>
     <addressOffset>0x054</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Data byte to be sent to the I3C bus controller.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CAPABILITIES2</name>
     <description>Capabilities 2 Register</description>
     <addressOffset>0x05C</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>MAPCNT</name>
       <description>Number of mapped target addresses supported.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>I2C10B</name>
       <description>I2C 10-bit address support.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>I2CRST</name>
       <description>I2C software reset support.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>I2CDEVID</name>
       <description>I2C device ID support.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DATA32</name>
       <description>32-bit WDATAW and RDATAW registers available.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>IBIEXT</name>
       <description>Extended IBI data support.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>IBIXREG</name>
       <description>Extended IBI data register support.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SMLANE</name>
       <description>Multi-lane support for HDR-BT mode.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>S_LANE</name>
         <description>Single-lane only.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SD_LANE</name>
         <description>Single-lane or dual-lane.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SDQ_LANE</name>
         <description>Single-lane, dual-lane, or quad-lane.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>V1_1</name>
       <description>I3C 1.1 CCC support.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TGRST</name>
       <description>I3C 1.1 Target Reset support.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>GROUP</name>
       <description>Group address support.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>NONE</name>
         <description>Group addresses not supported.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ONE</name>
         <description>One group address supported.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>TWO</name>
         <description>Two group addresses supported.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>THREE</name>
         <description>Two group addresses supported.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AASA</name>
       <description>SETAASA CCC support.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SSTSUB</name>
       <description>SETAASA CCC support.</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SSTWR</name>
       <description>Target-to-target write support.</description>
       <bitOffset>23</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CAPABILITIES</name>
     <description>Capabilities Register</description>
     <addressOffset>0x060</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>IDENA</name>
       <description>Provisioned ID implementation.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>PROV_PROG</name>
         <description>Provisioned ID is programmable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>PROV_SET</name>
         <description>Provisioned ID is set by hardware parameters ID_MAN, ID_PART, ID_INST, and ID_VENDOR.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>INST_PROG</name>
         <description>Provisioned ID is set by hardware parameters ID_MAN, ID_PART, and ID_VENDOR; Instance ID is programmable.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>PART_PROG</name>
         <description>Manufacturer ID field is set by hardware parameter ID_MAN; Part Number field is programmable.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>IDREG</name>
       <description>Provisioned ID, BCR, DCR implementation.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>HDRSUPP</name>
       <description>Supported HDR modes.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
      <field>
       <name>CNTLR</name>
       <description>Controller mode capable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SADDR</name>
       <description>I2C-style static address implementation.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>NONE</name>
         <description>No static address support.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SADDR</name>
         <description>The device has a 7-bit static address set.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>EXT_TGTSA</name>
         <description>The device has a 7-bit static address set through input pin.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CONFIG</name>
         <description>The static address is software-programmable.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CCCHANDLE</name>
       <description>CCCs handled by the controller.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>IBI_MR_HJ</name>
       <description>Supported events.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>TIMECTRL</name>
       <description>Timing Control support.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>EXTFIFO</name>
       <description>External FIFO configuration.</description>
       <bitOffset>23</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
      <field>
       <name>FIFOTX</name>
       <description>Internal transmit (to-bus) FIFO configuration.</description>
       <bitOffset>26</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>NONE</name>
         <description>No internal transmit FIFO.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>4BYTE</name>
         <description>4-byte transmit FIFO.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>8BYTE</name>
         <description>8-byte transmit FIFO.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>16BYTE</name>
         <description>16-byte transmit FIFO or larger.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FIFORX</name>
       <description>Internal receive (from-bus) FIFO configuration.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>NONE</name>
         <description>No internal receive FIFO.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>4BYTE</name>
         <description>4-byte receive FIFO.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>8BYTE</name>
         <description>8-byte receive FIFO.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>16BYTE</name>
         <description>16-byte receive FIFO or larger.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>INT</name>
       <description>Interrupt support.</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DMA</name>
       <description>DMA support.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>DYNADDR</name>
     <description>Dynamic Address Register</description>
     <addressOffset>0x064</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>DAVALID</name>
       <description>Address valid.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DADDR</name>
       <description>The dynamic address assigned to this I3C target device.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>7</bitWidth>
      </field>
      <field>
       <name>CAUSE</name>
       <description>How the last primary dynamic address (DA) value change occurred.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>NO_CHANGE</name>
         <description>No change to DA.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ENTDAA</name>
         <description>Primary DA was last assigned by ENTDAA.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SETDASA_AASA_NEWDA</name>
         <description>Primary DA was last assigned by SETDASA, SETAASA, or SETNEWDA.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>RSTDAA</name>
         <description>Primary DA was cleared by RSTDAA.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>MAPPED_ADDR_OP</name>
         <description>Primary DA was changed due to a mapped address related operation.</description>
         <value>4</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>MAXLIMITS</name>
     <description>Maximum Limits Register</description>
     <addressOffset>0x068</addressOffset>
     <fields>
      <field>
       <name>MAXRD</name>
       <description>The maximum number of bytes that the I3C controller may read from this I3C target device per message.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>12</bitWidth>
      </field>
      <field>
       <name>MAXWR</name>
       <description>The maximum number of bytes that the I3C bus controller may write to this I3C target device per message, with the exception of broadcast CCCs.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>12</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PARTNO</name>
     <description>Part Number Register</description>
     <addressOffset>0x06C</addressOffset>
     <fields>
      <field>
       <name>VENDDEF</name>
       <description>Vendor-defined field of Provisioned ID.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>12</bitWidth>
      </field>
      <field>
       <name>INSTID</name>
       <description>Instance ID field of Provisioned ID.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>PARTID</name>
       <description>Part ID field of Provisioned ID.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>IDEXT</name>
     <description>ID Extension Register</description>
     <addressOffset>0x070</addressOffset>
     <fields>
      <field>
       <name>INSTANCE</name>
       <description>4-bit Instance ID written by the application.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>DCR</name>
       <description>8-bit DCR value written by the application.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>BCR</name>
       <description>BCR contains the 8-bit BCR value written by the application.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>VENDORID</name>
     <description>Vendor ID Register</description>
     <addressOffset>0x074</addressOffset>
     <fields>
      <field>
       <name>VID</name>
       <description>MIPI Manufacturer ID field of the 48-bit Provisioned ID.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>15</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>TCCLOCK</name>
     <description>Timing Control Clock Register</description>
     <addressOffset>0x078</addressOffset>
     <fields>
      <field>
       <name>ACCURACY</name>
       <description>Maximum variation of the Timing Control clock source in 0.1% units.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>FREQ</name>
       <description>Frequency of the Timing Control clock source in 0.5-MHz units.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MSGLAST</name>
     <description>Matching Address Index Register</description>
     <addressOffset>0x07C</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>MAPLAST</name>
       <description>Index or group number of last matched address.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>LASTSTATIC</name>
       <description>Last matched address was a static address.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>LASTGROUP</name>
       <description>The last matched address was a group address.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>LASTMODE</name>
       <description>Mode of the last access.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>I3C_SDR_OR_I2C</name>
         <description>I3C SDR or I2C.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>HDRDDR</name>
         <description>HDR-DDR.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>HDRBT</name>
         <description>HDR-BT.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MAPLASTM1</name>
       <description>Index or group of previously matched address.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>LASTGROUPM1</name>
       <description>Group address indicator of previous access.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>LASTMODE1</name>
       <description />
       <bitOffset>14</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>I3C_SDR_OR_I2C</name>
         <description>I3C SDR or I2C.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>HDRDDR</name>
         <description>HDR-DDR.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>HDRBT</name>
         <description>HDR-BT.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MAPLASTM2</name>
       <description>Index or group of second previously matched address.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>LASTGROUPM2</name>
       <description>Group address indicator of second previous access.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>LASTMODE2</name>
       <description>Mode of second previous access.</description>
       <bitOffset>22</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>I3C_SDR_OR_I2C</name>
         <description>I3C SDR or I2C.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>HDRDDR</name>
         <description>HDR-DDR.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>HDRBT</name>
         <description>HDR-BT.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>MCTRL</name>
     <description>Controller Control Register</description>
     <addressOffset>0x084</addressOffset>
     <fields>
      <field>
       <name>REQUEST</name>
       <description>Requests an I3C or I2C bus operation.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>NONE</name>
         <description>None.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>EMIT_START_ADDR</name>
         <description>Emit a START with address and read/write bit.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>EMIT_STOP</name>
         <description>Emit a STOP.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IBI_ACK_NACK</name>
         <description>Manually ACK or NACK an IBI.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>PROCESS_DAA</name>
         <description>Starts the DAA process.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FORCE_EXIT_RESET</name>
         <description>ForceExit/Target Reset.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>AUTO_IBI</name>
         <description>Auto IBI.</description>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TYPE</name>
       <description>Controls type of operation when REQUEST = EmitStartAddr or ForceExit/Target Reset.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>IBIRESP</name>
       <description>Response to use when an IBI occurs.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>DIR</name>
       <description>Direction of the transfer.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>WRITE</name>
         <description>Write.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>READ</name>
         <description>Read.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADDR</name>
       <description>Address to send with START.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
      <field>
       <name>RDTERM</name>
       <description>Termination count for read.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MSTATUS</name>
     <description>Controller Status Register</description>
     <addressOffset>0x088</addressOffset>
     <resetValue>0x00001000</resetValue>
     <fields>
      <field>
       <name>STATE</name>
       <description>Current working state of the I3C controller.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>IDLE</name>
         <description>The I3C bus is stopped.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>TGTREQ</name>
         <description>The I3C bus is stopped and a target is holding SDA low.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>MSGSDR</name>
         <description>SDR message mode using MWMSG_SDR.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>NORMACT</name>
         <description>SDR message mode using MCTRL, MWDATAB/H(E) and MRDATAB/H.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DDR</name>
         <description>DDR message mode initiated using either MWMSG_DDR or MCTRL.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DAA</name>
         <description>DAA mode.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IBIACK</name>
         <description>Waiting for the application to provide ACK/NACK decision.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IBIRCV</name>
         <description>Receiving an IBI.</description>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BETWEEN</name>
       <description>Behavior of this field depends on current STATE.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>NACKED</name>
       <description>Address NACKed.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>IBITYPE</name>
       <description>Type of event for which arbitration was last won.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>NONE</name>
         <description>None.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IBI</name>
         <description>IBI.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CONTROLLER_REQ</name>
         <description>Controller request.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>HOTJOIN_REQ</name>
         <description>Hot-Join request.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TGTSTART</name>
       <description>Target START detected.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>MCTRLDONE</name>
       <description>MCTRL request completed.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>COMPLETE</name>
       <description>Message completed.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXPEND</name>
       <description>Receive (from-bus) data ready.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TXNOTFULL</name>
       <description>Ready for to-bus (transmit) data.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>IBIWON</name>
       <description>IBI arbitration won.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ERRWARN</name>
       <description>Error/warning.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>NOWCNTLR</name>
       <description>Controller transitioned from I3C bus target to I3C bus controller.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>IBIADDR</name>
       <description>The address of a received IBI or controller request.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>7</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>IBIRULES</name>
     <description>IBI Registry and Rules Register</description>
     <addressOffset>0x08C</addressOffset>
     <fields>
      <field>
       <name>ADDR0</name>
       <description>Target 0 dynamic address. Same function as ADDR4.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>ADDR1</name>
       <description>Target 1 dynamic address. Same function as ADDR4.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>ADDR2</name>
       <description>Target 2 dynamic address. Same function as ADDR4.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>ADDR3</name>
       <description>Target 3 dynamic address. Same function as ADDR4.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>ADDR4</name>
       <description>Target 4 dynamic address.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>MSB0</name>
       <description>Implementation of MSb for I3C dynamic addresses.</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>MAY_HAVE_MSB0</name>
         <description>I3C dynamic addresses may have MSb = 0 or MSb = 1.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>HAVE_MSB0</name>
         <description>All I3C dynamic addresses have MSb = 0.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>NOBYTE</name>
       <description>Specifies if ADDR0-ADDR4 provide a mandatory byte when sending an IBI.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MINTSET</name>
     <description>Controller Interrupt Enable Set Register</description>
     <addressOffset>0x090</addressOffset>
     <fields>
      <field>
       <name>TGTSTART</name>
       <description>Target START detected interrupt enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>MCTRLDONE</name>
       <description>MCTRL request completed interrupt enable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>COMPLETE</name>
       <description>Message complete interrupt enable.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXPEND</name>
       <description>Receive (from-bus) data ready interrupt enable.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TXNOTFULL</name>
       <description>Ready for transmit (to-bus) data interrupt enable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>IBIWON</name>
       <description>IBI arbitration won interrupt enable.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ERRWARN</name>
       <description>Error/warning interrupt enable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>NOWCNTLR</name>
       <description>Target to controller transition interrupt enable.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MINTCLR</name>
     <description>Controller Interrupt Enable Clear Register</description>
     <addressOffset>0x094</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>TGTSTART</name>
       <description>Target START detected interrupt disable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>MCTRLDONE</name>
       <description>MCTRL request completed interrupt disable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>COMPLETE</name>
       <description>Message complete interrupt disable.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXPEND</name>
       <description>Receive (from-bus) data ready interrupt disable.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TXNOTFULL</name>
       <description>Ready for transmit (to-bus) data interrupt disable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>IBIWON</name>
       <description>IBI arbitration won interrupt disable.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ERRWARN</name>
       <description>Error/warning interrupt disable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>NOWCNTLR</name>
       <description>Target to controller transition interrupt disable.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MINTMASKED</name>
     <description>Controller Interrupt Masked Register</description>
     <addressOffset>0x098</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>TGTSTART</name>
       <description>Target START detected interrupt active.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>MCTRLDONE</name>
       <description>MCTRL request completed interrupt active.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>COMPLETE</name>
       <description>Message complete interrupt active.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXPEND</name>
       <description>Receive (from-bus) data ready interrupt active.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TXNOTFULL</name>
       <description>Ready for transmit (to-bus) data interrupt active.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>IBIWON</name>
       <description>IBI arbitration won interrupt active.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ERRWARN</name>
       <description>Error/warning interrupt active.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>NOWCNTLR</name>
       <description>Target to controller transition interrupt active.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MERRWARN</name>
     <description>Controller Error and Warning Register</description>
     <addressOffset>0x09C</addressOffset>
     <fields>
      <field>
       <name>URUN</name>
       <description>Transmit buffer/FIFO underrun.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>NACK</name>
       <description>Address NACKed.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>WRABT</name>
       <description>Write aborted due to data NACK.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TERM</name>
       <description>Controller terminated read in message mode.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HPAR</name>
       <description>HDR parity error.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HCRC</name>
       <description>HDR-DDR CRC error.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HNOVERIFY</name>
       <description>Target did not verify an HDR-BT write.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>OREAD</name>
       <description>Read data underrun.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>OWRITE</name>
       <description>Write data overrun.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>MSGERR</name>
       <description>Message mode error.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>INVREQ</name>
       <description>Invalid use of request.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TIMEOUT</name>
       <description>Controller timeout.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>WRONGSIZE</name>
       <description />
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MDMACTRL</name>
     <description>Controller DMA Control Register</description>
     <addressOffset>0x0A0</addressOffset>
     <resetValue>0x00000010</resetValue>
     <fields>
      <field>
       <name>DMAFB</name>
       <description>DMA read (from-bus) enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>DISABLE</name>
         <description>Disable DMA.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>EN_ONEFRAME_SDR</name>
         <description>Enable DMA for one frame.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ENABLE</name>
         <description>Enable DMA until DMA is disabled by setting DMAFB to 00.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DMATB</name>
       <description>DMA write (to-bus) enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>DISABLE</name>
         <description>Disable DMA.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>EN_ONEFRAME_SDR</name>
         <description>Enable DMA for one frame.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ENABLE</name>
         <description>Enable DMA until DMA is disabled by setting DMATB to 00.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DMAWIDTH</name>
       <description>DMA transfer data width.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>BYTE</name>
         <description>Byte.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>HALFWORD</name>
         <description>Half-word.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>MHDRBTCFG</name>
     <description>Controller HDR-BT Configuration Register</description>
     <addressOffset>0x0A4</addressOffset>
     <fields>
      <field>
       <name>MLHDR</name>
       <description>Number of lanes to use for the header segment of an HDR-BT mode transfer.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>SINGLE_LANE</name>
         <description>Single-lane.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DUAL_LANE</name>
         <description>Dual-lane.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>QUAD_LANE</name>
         <description>Quad-lane.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MLDAT</name>
       <description>Number of lanes to use for the data segment of an HDR-BT mode transfer.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>SINGLE_LANE</name>
         <description>Single-lane.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DUAL_LANE</name>
         <description>Dual-lane.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>QUAD_LANE</name>
         <description>Quad-lane.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CRC32</name>
       <description>Select CRC32 or CRC16 for an HDR-BT mode transfer.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>CRC16</name>
         <description>CRC16.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CRC32</name>
         <description>CRC32.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DATALEN</name>
       <description>Data length for HDR-BT mode transfer.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MHDRBTLAST</name>
     <description>Controller HDR-BT Last Data Length Register</description>
     <addressOffset>0x0A8</addressOffset>
     <fields>
      <field>
       <name>DATALEN</name>
       <description>Data length of most recent HDR-BT mode transfer.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MDATACTRL</name>
     <description>Controller Data Control Register</description>
     <addressOffset>0x0AC</addressOffset>
     <resetValue>0x80000030</resetValue>
     <fields>
      <field>
       <name>FLUSHTB</name>
       <description>Flush transmit buffer or FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>FLUSHFB</name>
       <description>Flush receive buffer or FIFO.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>UNLOCK</name>
       <description>Unlock FIFO triggers.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TXTRIG</name>
       <description>Transmit (to-bus) FIFO trigger level.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>EMPTY</name>
         <description>Trigger when empty.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>QUARTER_FULL</name>
         <description>Trigger when 1/4 full or less.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>HALF_FULL</name>
         <description>Trigger when 1/2 full or less.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ALMOST_FULL</name>
         <description>Trigger when 1 less than full or less.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXTRIG</name>
       <description />
       <bitOffset>6</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>NOT_EMPTY</name>
         <description>Trigger when not empty.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>QUARTER_FULL</name>
         <description>Trigger when 1/4 full or more.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>HALF_FULL</name>
         <description>Trigger when 1/2 full or more.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>3_4_FULL</name>
         <description>Trigger when 3/4 full or more.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXCOUNT</name>
       <description>Number of entries in transmit (to-bus) buffer or FIFO.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>RXCOUNT</name>
       <description>Number of entries in receive (from-bus) buffer or FIFO.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>TXFULL</name>
       <description>Transmit buffer full.</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXEMPTY</name>
       <description>Receive buffer empty.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MWDATAB</name>
     <description>Controller Write Byte Data Register</description>
     <addressOffset>0x0B0</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Data byte to be sent to the I3C or I2C bus.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>END</name>
       <description>End-of-data.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>END2</name>
       <description>End-of-data.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MWDATABE</name>
     <description>Controller Write Byte Data as End Register</description>
     <addressOffset>0x0B4</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>The last data byte to be sent to the I3C or I2C bus for the current message.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MWDATAH</name>
     <description>Controller Write Half-Word Data Register</description>
     <addressOffset>0x0B8</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>DATA0</name>
       <description>First data byte to be sent to the I3C or I2C bus.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>DATA1</name>
       <description>Second data byte to be sent to the I3C or I2C bus.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>END</name>
       <description>End-of-data.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MWDATAHE</name>
     <description>Controller Write Half-Word Data as End Register</description>
     <addressOffset>0x0BC</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>DATA0</name>
       <description>First data byte to be sent to the I3C or I2C bus.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>DATA1</name>
       <description>Second data byte to be sent to the I3C or I2C bus.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MRDATAB</name>
     <description>Controller Read Byte Data Register</description>
     <addressOffset>0x0C0</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Read data byte from receive (from-bus) buffer or FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MRDATAH</name>
     <description>Controller Read Half-Word Data Register</description>
     <addressOffset>0x0C8</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>DATA0</name>
       <description>First read data byte from receive (from-bus) buffer or FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>DATA1</name>
       <description>Second read data byte from receive (from-bus) buffer or FIFO.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MWDATAB1</name>
     <description>Controller Byte-Only Write Byte Data Register</description>
     <addressOffset>0x0CC</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Data byte to be transmitted I3C or I2C bus.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MWMSG_SDR</name>
     <description>Start or Continue SDR Message Register</description>
     <addressOffset>0x0D0</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>DIR</name>
       <description>Direction.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>WRITE</name>
         <description>Write.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>READ</name>
         <description>Read.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADDR</name>
       <description>Destination address of message.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>7</bitWidth>
      </field>
      <field>
       <name>END</name>
       <description>How to end message.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>WAIT_SDR</name>
         <description>End waiting for new SDR message.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>STOP</name>
         <description>End by emitting STOP.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>I2C</name>
       <description>I2C mode.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>I2C_I3C_MODE</name>
         <description>I3C mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>I2C_I2C_MODE</name>
         <description>I2C mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LEN</name>
       <description>Message length in bytes.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MRMSG_SDR</name>
     <description>Read SDR Message Data Register</description>
     <addressOffset>0x0D4</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Read data (16 bits).</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MWMSG_DDR</name>
     <description>Start or Continue DDR Message Register</description>
     <addressOffset>0x0D8</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>CONTROL_ADDRCMD_DATA</name>
       <description>Control information, mode address and command, or data for HDR-DDR write message.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MRMSG_DDR</name>
     <description>Read DDR Message Data Register</description>
     <addressOffset>0x0DC</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Read data (16 bits).</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MDYNADDR</name>
     <description>Controller Dynamic Address Register</description>
     <addressOffset>0x0E4</addressOffset>
     <fields>
      <field>
       <name>DAVALID</name>
       <description>Address valid.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DADDR</name>
       <description>The assigned dynamic address.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>7</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MWDATAW</name>
     <description>Controller Write Word Data Register</description>
     <addressOffset>0x0F0</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Data to be transmitted in HDR-BT mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MRDATAW</name>
     <description>Controller Read Word Data Register</description>
     <addressOffset>0x0F8</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Read data from receive (from-bus) FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>RSTACTTIME</name>
     <description>Target Reset Recovery Time Register</description>
     <addressOffset>0x100</addressOffset>
     <fields>
      <field>
       <name>PERRSTTIM</name>
       <description>I3C peripheral reset time to be returned in response to an RSTACT CCC.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>SYSRSTTIM</name>
       <description>whole target reset time to be returned in response to an RSTACT CCC.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>HDRCMD</name>
     <description>HDR Command Byte Register</description>
     <addressOffset>0x108</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>CMD0</name>
       <description>The HDR-DDR mode command byte from the most recently received HDR-DDR mode message.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>OVFLW</name>
       <description>Command byte overflow.</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>NEWCMD</name>
       <description>New command byte stored.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>GROUPDEF</name>
     <description>Group Definition Register</description>
     <addressOffset>0x114</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>GRP0ENA</name>
       <description>Group address 0 enabled.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>GRP0DA</name>
       <description>The assigned address for group address 0.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>7</bitWidth>
      </field>
      <field>
       <name>GRP1ENA</name>
       <description>Group address 1 enabled.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>GRP1DA</name>
       <description>The assigned address for group address 1.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>7</bitWidth>
      </field>
      <field>
       <name>GRP2ENA</name>
       <description>Group address 2 enabled.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>GRP2DA</name>
       <description>The assigned address for group address 2.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>7</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MAPCTRL0</name>
     <description>Map Control Register 0</description>
     <addressOffset>0x11C</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>ENA</name>
       <description>Primary dynamic address enabled.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DA</name>
       <description>Primary dynamic address.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>7</bitWidth>
      </field>
      <field>
       <name>CAUSE</name>
       <description />
       <bitOffset>8</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>NO_CHANGE</name>
         <description>No change to DA.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ENTDAA</name>
         <description>Primary DA was last assigned by ENTDAA.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SETDASA_AASA_NEWDA</name>
         <description>Primary DA was last assigned by SETDASA, SETAASA, or SETNEWDA.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>RSTDAA</name>
         <description>Primary DA was cleared by RSTDAA.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>MAPPED_ADDR_OP</name>
         <description>Primary DA was changed due to a mapped address related operation.</description>
         <value>4</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <dim>8</dim>
     <dimIncrement>4</dimIncrement>
     <name>MAPCTRLn[%s]</name>
     <description>Map Control Register n</description>
     <addressOffset>0x120</addressOffset>
     <fields>
      <field>
       <name>ENA</name>
       <description>Slot enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ADDR</name>
       <description>Static or dynamic address assigned to this mapped address slot.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>7</bitWidth>
      </field>
      <field>
       <name>MAPSA</name>
       <description>Static address.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SA10B</name>
       <description>Upper 3 bits of a 10-bit I2C static address or 7-bit static or dynamic address.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
      <field>
       <name>NACK</name>
       <description>NACK incoming addresses that match this mapped address.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>AUTO</name>
       <description>Enable slot for automatic dynamic address assignment.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PID</name>
       <description>Slot-specific PID replacement bits [9:0].</description>
       <bitOffset>14</bitOffset>
       <bitWidth>10</bitWidth>
      </field>
      <field>
       <name>DCR_OR_PID</name>
       <description>DCR or PID replacement fields [17:10]</description>
       <bitOffset>24</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>IBIEXT1</name>
     <description>Extended IBI Data Register 1</description>
     <addressOffset>0x140</addressOffset>
     <fields>
      <field>
       <name>CNT</name>
       <description>The number of extended IBI data bytes to send from the IBIEXT1 and IBIEXT2 registers.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
      <field>
       <name>MAX</name>
       <description>The maximum number of extended IBI data bytes that can be sent using the IBIEXT1 and IBIEXT2 registers.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
      <field>
       <name>EXT1</name>
       <description>First extended IBI data byte to send with an IBI.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>EXT2</name>
       <description>Second extended IBI data byte to send with an IBI.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>EXT3</name>
       <description>Third extended IBI data byte to send with an IBI.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>IBIEXT2</name>
     <description>Extended IBI Data Register 2</description>
     <addressOffset>0x144</addressOffset>
     <fields>
      <field>
       <name>EXT4</name>
       <description>Fourth extended IBI data byte to send with an IBI.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>EXT5</name>
       <description>Fifth extended IBI data byte to send with an IBI.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>EXT6</name>
       <description>Sixth extended IBI data byte to send with an IBI.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>EXT7</name>
       <description>Seventh extended IBI data byte to send with an IBI.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>WDATAW</name>
     <description>Write Word Data Register</description>
     <addressOffset>0x150</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Data to be transmitted in HDR-BT mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>RDATAW</name>
     <description>Read Word Data Register</description>
     <addressOffset>0x158</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Read data from receive (from-bus) FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ID</name>
     <description>Block ID Register</description>
     <addressOffset>0xFFC</addressOffset>
     <fields>
      <field>
       <name>ID</name>
       <description>Vendor-specific information set by hardware configuration parameter BLOCK_ID.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
  <!--I3C I3C Registers-->
  <peripheral>
   <name>ICC0</name>
   <description>Instruction Cache Controller Registers</description>
   <baseAddress>0x4002A000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>CACHE_ID</name>
     <description>Cache ID Register.</description>
     <addressOffset>0x0000</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>RELNUM</name>
       <description>Release Number. Identifies the RTL release version.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>PARTNUM</name>
       <description>Part Number. This field reflects the value of C_ID_PART_NUMBER configuration parameter.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>CCHID</name>
       <description>Cache ID. This field reflects the value of the C_ID_CACHEID configuration parameter.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MEMCFG</name>
     <description>Memory Configuration Register.</description>
     <addressOffset>0x0004</addressOffset>
     <access>read-only</access>
     <resetValue>0x00080008</resetValue>
     <fields>
      <field>
       <name>CCHSZ</name>
       <description>Cache Size. Indicates total size in Kbytes of cache.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
      <field>
       <name>MEMSZ</name>
       <description>Main Memory Size. Indicates the total size, in units of 128 Kbytes, of code memory accessible to the cache controller.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CACHE_CTRL</name>
     <description>Cache Control and Status Register.</description>
     <addressOffset>0x0100</addressOffset>
     <fields>
      <field>
       <name>CACHE_EN</name>
       <description>Cache Enable. Controls whether the cache is bypassed or is in use. Changing the state of this bit will cause the instruction cache to be flushed and its contents invalidated.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Cache Bypassed. Instruction data is stored in the line fill buffer but is not written to main cache memory array.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Cache Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CACHE_RDY</name>
       <description>Cache Ready flag. Cleared by hardware when at any time the cache as a whole is invalidated (including a system reset). When this bit is 0, the cache is effectively in bypass mode (instruction fetches will come from main memory or from the line fill buffer). Set by hardware when the invalidate operation is complete and the cache is ready.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>notReady</name>
         <description>Not Ready.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ready</name>
         <description>Ready.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>CACHE_WAY</name>
     <description>Cache Way.</description>
     <addressOffset>0x0200</addressOffset>
     <fields>
      <field>
       <name>CACHEWAY</name>
       <description>Number of cache way, default is 2 ways cache. Allowed values are 1/2/4, set to un-allowed values will ack as 2-way cache. It is prohibited to change the SFR during cache enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>WAY1</name>
         <description>1 Way.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>WAY2</name>
         <description>2 Way.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>WAY4</name>
         <description>4 Way.</description>
         <value>4</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>REGION_CTRL</name>
     <description>Regional Control.</description>
     <addressOffset>0x0204</addressOffset>
     <fields>
      <field>
       <name>REGIONAL_EN</name>
       <description>Enable the regional high/low bound compare, cache the data only if the TAG content between the high bound and low bound.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>REGIONAL_EX</name>
       <description>Cache the data only if the TAG content is excluded in the high bound and low bound.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <cluster>
     <name>REGION[%s]</name>
     <description>Cache Region.</description>
     <dim>15</dim>
     <dimIncrement>8</dimIncrement>
     <addressOffset>0x0208</addressOffset>
     <register>
      <name>REGION_LBOUND</name>
      <description>Regional Low Bound.</description>
      <addressOffset>0x0</addressOffset>
      <size>32</size>
      <fields>
       <field>
        <name>REGION_LBOUND</name>
        <description>Low bound of the HADDR, regional logic will enable when access address equal or bigger than low bound.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>32</bitWidth>
       </field>
      </fields>
     </register>
     <register>
      <name>REGION_HBOUND</name>
      <description>Regional High Bound.</description>
      <addressOffset>0x4</addressOffset>
      <size>32</size>
      <fields>
       <field>
        <name>REGION_HBOUND</name>
        <description>High bound of the HADDR, regional logic will enable when access address equal or smaller than high bound.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>32</bitWidth>
       </field>
      </fields>
     </register>
    </cluster>
    <register>
     <name>INVALIDATE</name>
     <description>Invalidate All Registers.</description>
     <addressOffset>0x0700</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>IA</name>
       <description>Invalidate.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PFM_CTRL</name>
     <description>Performance Control.</description>
     <addressOffset>0x0300</addressOffset>
     <fields>
      <field>
       <name>PFM_EN</name>
       <description>Write 1 to enable performance counter, also the hit counter will be clear to 0. Clear to 0 when AHB access counter reach 0.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PFM_CNTR</name>
     <description>Performance Counter.</description>
     <addressOffset>0x0304</addressOffset>
     <fields>
      <field>
       <name>PFM_CNTR</name>
       <description>Write: The total AHB access counter, decreased by 1 after 1 AHB read. The Performance hit counter will stop increase and PFM_EN will be clear to 0 when the number reach 0. Read: Performance hit counter.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
  <!--ICC0 Instruction Cache Controller Registers-->
  <peripheral>
   <name>PWRSEQ</name>
   <description>Power Sequencer / Low Power Control Register.</description>
   <baseAddress>0x40006800</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>LPCN</name>
     <description>Low Power Control Register.</description>
     <addressOffset>0x00</addressOffset>
     <resetValue>0x800</resetValue>
     <fields>
      <field>
       <name>RAMRET0</name>
       <description>System RAM0 retention in BACKUP mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAMRET1</name>
       <description>System RAM1 retention in BACKUP mode.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAMRET2</name>
       <description>System RAM2 retention in BACKUP mode.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAMRET3</name>
       <description>System RAM3 retention in BACKUP mode.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAMRET4</name>
       <description>System RAM4 retention in BACKUP mode.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>LPMFAST</name>
       <description>Low-Power mode entry clock select.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ISO</name>
         <description>ISO used.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>INRO</name>
         <description>INRO used.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BG_DIS</name>
       <description>Bandgap OFF. This controls the System Bandgap in LPM and BACKUP mode.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>on</name>
         <description>Bandgap is always ON.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>off</name>
         <description>Bandgap is OFF in STANDBY and BACKUP mode (default).</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LPWKST_CLR</name>
       <description>Low Power wakeup status register clear. Write 1 to clear LPWKST0, LPWKST1 and LPPWST.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>LPWKST0</name>
     <description>Low Power I/O Wakeup Status Register 0. This register indicates the low power wakeup status for GPIO0.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Wakeup Flags.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>12</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>LPWKEN0</name>
     <description>Low Power I/O Wakeup Enable Register 0. This register enables low power wakeup functionality for GPIO0.</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Enable wakeup. These bits allow wakeup from the corresponding GPIO pin (s) on transition (s) from low to high or high to low when PM.GPIOWKEN is set. Wakeup status is indicated in LPWKST register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>12</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>LPWKST1</name>
     <description>Low Power I/O Wakeup Status Register 1. This register indicates the low power wakeup status for GPIO1.</description>
     <addressOffset>0x0C</addressOffset>
     <fields>
      <field>
       <name>WAKEST</name>
       <description>Wakeup Flags.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>LPWKEN1</name>
     <description>Low Power I/O Wakeup Enable Register 1. This register enables low power wakeup functionality for GPIO1.</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>EN</name>
       <description>Enable wakeup. These bits allow wakeup from the corresponding GPIO pin (s) on transition (s) from low to high or high to low when PM.GPIOWKEN is set. Wakeup status is indicated in LPWKST register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>LPPWST</name>
     <description>Low Power Peripheral Wakeup Status Flags.</description>
     <addressOffset>0x30</addressOffset>
     <fields>
      <field>
       <name>BACKUP</name>
       <description>BACKUP wakeup flag.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RESET</name>
       <description>Reset detected wakeup flag.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>GP0</name>
     <description>Low Power General Purpose Register 0.</description>
     <addressOffset>0x48</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>General purpose field.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>GP1</name>
     <description>Low Power General Purpose Register 1.</description>
     <addressOffset>0x4C</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>General purpose field.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
  <!--PWRSEQ Power Sequencer / Low Power Control Register.-->
  <peripheral>
   <name>RTC</name>
   <description>Real Time Clock and Alarm.</description>
   <baseAddress>0x40006000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>RTC</name>
    <description>RTC interrupt.</description>
    <value>2</value>
   </interrupt>
   <registers>
    <register>
     <name>SEC</name>
     <description>RTC Second Counter. This register contains the 32-bit second counter.</description>
     <addressOffset>0x00</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>SEC</name>
       <description>Seconds Counter.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SSEC</name>
     <description>RTC Sub-second Counter. This counter increments at 256Hz. RTC_SEC is incremented when this register rolls over from 0xFF to 0x00.</description>
     <addressOffset>0x04</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>SSEC</name>
       <description>Sub-Seconds Counter (12-bit).</description>
       <bitOffset>0</bitOffset>
       <bitWidth>12</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>TODA</name>
     <description>Time-of-day Alarm.</description>
     <addressOffset>0x08</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>TOD_ALARM</name>
       <description>Time-of-day Alarm.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>20</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SSECA</name>
     <description>RTC sub-second alarm.  This register contains the reload value for the sub-second alarm.</description>
     <addressOffset>0x0C</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>SSEC_ALARM</name>
       <description>This register contains the reload value for the sub-second alarm.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL</name>
     <description>RTC Control Register.</description>
     <addressOffset>0x10</addressOffset>
     <resetValue>0x00000008</resetValue>
     <resetMask>0xFFFFFF38</resetMask>
     <fields>
      <field>
       <name>EN</name>
       <description>Real Time Clock Enable. This bit enables the Real Time Clock. This bit can only be written when WE=1 and BUSY =0. Change to this bit is effective only after BUSY is cleared from 1 to 0.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TOD_ALARM_IE</name>
       <description>Alarm Time-of-Day Interrupt Enable. Change to this bit is effective only after BUSY is cleared from 1 to 0.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSEC_ALARM_IE</name>
       <description>Alarm Sub-second Interrupt Enable.  Change to this bit is effective only after BUSY is cleared from 1 to 0.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BUSY</name>
       <description>RTC Busy. This bit is set to 1 by hardware when changes to RTC registers required a synchronized version of the register to be in place.  This bit is automatically cleared by hardware.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>idle</name>
         <description>Idle.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>busy</name>
         <description>Busy.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RDY</name>
       <description>RTC Ready. This bit is set to 1 by hardware when the RTC count registers update.  It can be cleared to 0 by software at any time. It will also be cleared to 0 by hardware just prior to an update of the RTC count register.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>busy</name>
         <description>Register has not updated.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ready</name>
         <description>Ready.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RDY_IE</name>
       <description>RTC Ready Interrupt Enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TOD_ALARM</name>
       <description>Time-of-Day Alarm Interrupt Flag.  This alarm is qualified as wake-up source to the processor.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Not active</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Pending</name>
         <description>Active</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSEC_ALARM</name>
       <description>Sub-second Alarm Interrupt Flag. This alarm is qualified as wake-up source to the processor.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Not active</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Pending</name>
         <description>Active</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SQW_EN</name>
       <description>Square Wave Output Enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Not active</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Pending</name>
         <description>Active</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SQW_SEL</name>
       <description>Frequency Output Selection. When SQE=1, these bits specify the output frequency on the SQW pin.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>freq1Hz</name>
         <description>1 Hz (Compensated).</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>freq512Hz</name>
         <description>512 Hz (Compensated).</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>freq4KHz</name>
         <description>4 KHz.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>clkDiv8</name>
         <description>RTC Input Clock / 8.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RD_EN</name>
       <description>Asynchronous Counter Read Enable.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>WR_EN</name>
       <description>Write Enable. This register bit serves as a protection mechanism against unintentional writes to critical RTC bits.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Not active</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Pending</name>
         <description>Active</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>TRIM</name>
     <description>RTC Trim Register.</description>
     <addressOffset>0x14</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>TRIM</name>
       <description>RTC Trim. This register contains the 2's complement value that specifies the trim resolution. Each increment or decrement of the bit adds or subtracts 1ppm at each 4KHz clock value, with a maximum correction of +/- 127ppm.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>VRTC_TMR</name>
       <description>VBAT Timer Value. When RTC is running off of VBAT, this field is incremented every 32 seconds.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>24</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>OSCCTRL</name>
     <description>RTC Oscillator Control Register.</description>
     <addressOffset>0x18</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>FILTER_EN</name>
       <description>Enables analog deglitch filter.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>IBIAS_SEL</name>
       <description>If IBIAS_EN is 1, selects 4x,2x mode.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HYST_EN</name>
       <description>Enables high current hysteresis buffer.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>IBIAS_EN</name>
       <description>Enables higher 4x,2x current modes.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>BYPASS</name>
       <description>RTC Crystal Bypass</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SQW_32K</name>
       <description>RTC 32kHz Square Wave Output</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
  <!--RTC Real Time Clock and Alarm.-->
  <peripheral>
   <name>SPI0</name>
   <description>SPI peripheral.</description>
   <baseAddress>0x40046000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>SPI0</name>
    <value>12</value>
   </interrupt>
   <registers>
    <register>
     <name>FIFO32</name>
     <description>Register for reading and writing the FIFO.</description>
     <addressOffset>0x00</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Read to pull from RX FIFO, write to put into TX FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>2</dim>
     <dimIncrement>2</dimIncrement>
     <name>FIFO16[%s]</name>
     <description>Register for reading and writing the FIFO.</description>
     <addressOffset>0x00</addressOffset>
     <size>16</size>
     <access>read-write</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Read to pull from RX FIFO, write to put into TX FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>1</dimIncrement>
     <name>FIFO8[%s]</name>
     <description>Register for reading and writing the FIFO.</description>
     <addressOffset>0x00</addressOffset>
     <size>8</size>
     <access>read-write</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Read to pull from RX FIFO, write to put into TX FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL0</name>
     <description>Register for controlling SPI peripheral.</description>
     <addressOffset>0x04</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>EN</name>
       <description>SPI Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>SPI is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>SPI is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MST_MODE</name>
       <description>Master Mode Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>SPI is Slave mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>SPI is  Master mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SS_IO</name>
       <description>Slave Select 0, IO direction, to support Multi-Master mode,Slave Select 0 can be input in Master mode. This bit has no effect in slave mode.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>output</name>
         <description>Slave select 0 is output.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>input</name>
         <description>Slave Select 0 is input, only valid if MMEN=1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>START</name>
       <description>Start Transmit.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>start</name>
         <description>Master Initiates a transaction, this bit is self clearing when transactions are done. If a transaction cimpletes, and the TX FIFO is empty, the Master halts, if a transaction completes, and the TX FIFO is not empty, the Master initiates another transaction.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SS_CTRL</name>
       <description>Start Select Control. Used in Master mode to control the behavior of the Slave Select signal at the end of a transaction.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>DEASSERT</name>
         <description>SPI De-asserts Slave Select at the end of a transaction.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ASSERT</name>
         <description>SPI leaves Slave Select asserted at the end of a transaction.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SS_ACTIVE</name>
       <description>Slave Select, when in Master mode selects which Slave devices are selected. More than one Slave device can be selected.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>SS0</name>
         <description>SS0 is selected.</description>
         <value>0x1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS1</name>
         <description>SS1 is selected.</description>
         <value>0x2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS2</name>
         <description>SS2 is selected.</description>
         <value>0x4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS3</name>
         <description>SS3 is selected.</description>
         <value>0x8</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL1</name>
     <description>Register for controlling SPI peripheral.</description>
     <addressOffset>0x08</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_NUM_CHAR</name>
       <description>Nubmer of Characters to transmit.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
      <field>
       <name>RX_NUM_CHAR</name>
       <description>Nubmer of Characters to receive.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL2</name>
     <description>Register for controlling SPI peripheral.</description>
     <addressOffset>0x0C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>CLKPHA</name>
       <description>Clock Phase.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Rising_Edge</name>
         <description>Data Sampled on clock rising edge. Use when in SPI Mode 0 and Mode 2 </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Falling_Edge</name>
         <description>Data Sampled on clock falling edge. Use when in SPI Mode 1 and Mode 3</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CLKPOL</name>
       <description>Clock Polarity.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Normal</name>
         <description>Normal Clock. Use when in SPI Mode 0 and Mode 1</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Inverted</name>
         <description>Inverted Clock. Use when in SPI Mode 2 and Mode 3</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>NUMBITS</name>
       <description>Number of Bits per character.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>16</name>
         <description>16 bits per character.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>1</name>
         <description>1 bits per character.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>2</name>
         <description>2 bits per character.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>3</name>
         <description>3 bits per character.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>4</name>
         <description>4 bits per character.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>5</name>
         <description>5 bits per character.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>6</name>
         <description>6 bits per character.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>7</name>
         <description>7 bits per character.</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>8</name>
         <description>8 bits per character.</description>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>9</name>
         <description>9 bits per character.</description>
         <value>9</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>10</name>
         <description>10 bits per character.</description>
         <value>10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>11</name>
         <description>11 bits per character.</description>
         <value>11</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>12</name>
         <description>12 bits per character.</description>
         <value>12</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>13</name>
         <description>13 bits per character.</description>
         <value>13</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>14</name>
         <description>14 bits per character.</description>
         <value>14</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>15</name>
         <description>15 bits per character.</description>
         <value>15</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DATA_WIDTH</name>
       <description>SPI Data width.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Mono</name>
         <description>1 data pin.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Dual</name>
         <description>2 data pins.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Quad</name>
         <description>4 data pins.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>THREE_WIRE</name>
       <description>Three Wire mode. MOSI/MISO pin (s) shared. Only Mono mode suports Four-Wire.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Use four wire mode (Mono only).</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Use three wire mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SS_POL</name>
       <description>Slave Select Polarity, each Slave Select can have unique polarity.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>SS0_high</name>
         <description>SS0 active high.</description>
         <value>0x1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS1_high</name>
         <description>SS1 active high.</description>
         <value>0x2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS2_high</name>
         <description>SS2 active high.</description>
         <value>0x4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS3_high</name>
         <description>SS3 active high.</description>
         <value>0x8</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SSTIME</name>
     <description>Register for controlling SPI peripheral/Slave Select Timing.</description>
     <addressOffset>0x10</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>PRE</name>
       <description>Slave Select Pre delay 1.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>256</name>
         <description>256 system clocks between SS active and first serial clock edge.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>POST</name>
       <description>Slave Select Post delay 2.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>256</name>
         <description>256 system clocks between last serial clock edge and SS inactive.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>INACT</name>
       <description>Slave Select Inactive delay.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>256</name>
         <description>256 system clocks between transactions.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>CLKCTRL</name>
     <description>Register for controlling SPI clock rate.</description>
     <addressOffset>0x14</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>LO</name>
       <description>Low duty cycle control. In timer mode, reload[7:0].</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Dis</name>
         <description>Duty cycle control of serial clock generation is disabled.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>HI</name>
       <description>High duty cycle control. In timer mode, reload[15:8].</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Dis</name>
         <description>Duty cycle control of serial clock generation is disabled.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CLKDIV</name>
       <description>System Clock scale factor. Scales the AMBA clock by 2^SCALE before generating serial clock.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>DMA</name>
     <description>Register for controlling DMA.</description>
     <addressOffset>0x1C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_THD_VAL</name>
       <description>Transmit FIFO level that will trigger a DMA request, also level for threshold status. When TX FIFO has fewer than this many bytes, the associated events and conditions are triggered.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>TX_FIFO_EN</name>
       <description>Transmit FIFO enabled for SPI transactions.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Transmit FIFO is not enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Transmit FIFO is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_FLUSH</name>
       <description>Clear TX FIFO, clear is accomplished by resetting the read and write pointers. This should be done when FIFO is not being accessed on the SPI side.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>CLEAR</name>
         <description>Clear the Transmit FIFO, clears any pending TX FIFO status.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_LVL</name>
       <description>Count of entries in TX FIFO.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>6</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DMA_TX_EN</name>
       <description>TX DMA Enable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>DIS</name>
         <description>TX DMA requests are disabled, andy pending DMA requests are cleared.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>TX DMA requests are enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_THD_VAL</name>
       <description>Receive FIFO level that will trigger a DMA request, also level for threshold status. When RX FIFO has more than this many bytes, the associated events and conditions are triggered.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>RX_FIFO_EN</name>
       <description>Receive FIFO enabled for SPI transactions.</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>DIS</name>
         <description>Receive FIFO is not enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Receive FIFO is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FLUSH</name>
       <description>Clear RX FIFO, clear is accomplished by resetting the read and write pointers. This should be done when FIFO is not being accessed on the SPI side.</description>
       <bitOffset>23</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>CLEAR</name>
         <description>Clear the Receive FIFO, clears any pending RX FIFO status.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_LVL</name>
       <description>Count of entries in RX FIFO.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>6</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DMA_RX_EN</name>
       <description>RX DMA Enable.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>RX DMA requests are disabled, any pending DMA requests are cleared.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>RX DMA requests are enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INTFL</name>
     <description>Register for reading and clearing interrupt flags. All bits are write 1 to clear.</description>
     <addressOffset>0x20</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_THD</name>
       <description>TX FIFO Threshold Crossed.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_EM</name>
       <description>TX FIFO Empty.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_THD</name>
       <description>RX FIFO Threshold Crossed.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>RX FIFO FULL.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSA</name>
       <description>Slave Select Asserted.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSD</name>
       <description>Slave Select Deasserted.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FAULT</name>
       <description>Multi-Master Mode Fault.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ABORT</name>
       <description>Slave Abort Detected.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MST_DONE</name>
       <description>Master Done, set when SPI Master has completed any transactions.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_OV</name>
       <description>Transmit FIFO Overrun, set when the AMBA side attempts to write data to a full transmit FIFO.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_UN</name>
       <description>Transmit FIFO Underrun, set when the SPI side attempts to read data from an empty transmit FIFO.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_OV</name>
       <description>Receive FIFO Overrun, set when the SPI side attempts to write to a full receive FIFO.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_UN</name>
       <description>Receive FIFO Underrun, set when the AMBA side attempts to read data from an empty receive FIFO.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INTEN</name>
     <description>Register for enabling interrupts.</description>
     <addressOffset>0x24</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_THD</name>
       <description>TX FIFO Threshold interrupt enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_EM</name>
       <description>TX FIFO Empty interrupt enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_THD</name>
       <description>RX FIFO Threshold Crossed interrupt enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>RX FIFO FULL interrupt enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSA</name>
       <description>Slave Select Asserted interrupt enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSD</name>
       <description>Slave Select Deasserted interrupt enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FAULT</name>
       <description>Multi-Master Mode Fault interrupt enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ABORT</name>
       <description>Slave Abort Detected interrupt enable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MST_DONE</name>
       <description>Master Done interrupt enable.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_OV</name>
       <description>Transmit FIFO Overrun interrupt enable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_UN</name>
       <description>Transmit FIFO Underrun interrupt enable.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_OV</name>
       <description>Receive FIFO Overrun interrupt enable.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_UN</name>
       <description>Receive FIFO Underrun interrupt enable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>WKFL</name>
     <description>Register for wake up flags. All bits in this register are write 1 to clear.</description>
     <addressOffset>0x28</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_THD</name>
       <description>Wake on TX FIFO Threshold Crossed.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_EM</name>
       <description>Wake on TX FIFO Empty.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_THD</name>
       <description>Wake on RX FIFO Threshold Crossed.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>Wake on RX FIFO Full.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>WKEN</name>
     <description>Register for wake up enable.</description>
     <addressOffset>0x2C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_THD</name>
       <description>Wake on TX FIFO Threshold Crossed Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Wakeup source disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Wakeup source enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_EM</name>
       <description>Wake on TX FIFO Empty Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Wakeup source disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Wakeup source enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_THD</name>
       <description>Wake on RX FIFO Threshold Crossed Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Wakeup source disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Wakeup source enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>Wake on RX FIFO Full Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Wakeup source disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Wakeup source enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>STAT</name>
     <description>SPI Status register.</description>
     <addressOffset>0x30</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>BUSY</name>
       <description>SPI active status. In Master mode, set when transaction starts, cleared when last bit of last character is acted upon and Slave Select de-assertion would occur. In Slave mode, set when Slave Select is asserted, cleared when Slave Select is de-asserted. Not used in Timer mode. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>not</name>
         <description>SPI not active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>active</name>
         <description>SPI active.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
  <!--SPI0 SPI peripheral.-->
  <peripheral>
   <name>FCR</name>
   <description>Function Control Register.</description>
   <baseAddress>0x40000800</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>FCTRL0</name>
     <description>Function Control 0.</description>
     <addressOffset>0x00</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>I2CI3CDGEN0</name>
       <description>I2C/I3C SDA Glitch Filter Enable.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Glitch filter disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Glitch filter enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>I2CI3CDGEN1</name>
       <description>I2C/I3C SCL Glitch Filter Enable.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Glitch filter disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Glitch filter enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BLELDORX</name>
       <description>BLE LDO RX Trim</description>
       <bitOffset>8</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>BLELDOTX</name>
       <description>BLE LDO tX Trim</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>AUTOCAL0</name>
     <description>Automatic Calibration 0.</description>
     <addressOffset>0x04</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>ACEN</name>
       <description>IPO Auto-calibration Enable. Selects the trim value to use for the IPO. The reset default for this field uses the factory trim for the IPO. Setting this field to 1 uses the automatic calibration trim output stored in FCR_AUTOCAL0.ldtrm.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Use default trim from factory.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Use automatic calibration trim value calculated and stored in FCR_AUTOCAL0.ldtrm.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ACRUN</name>
       <description>Autocalibration Run.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>not</name>
         <description>Not Running.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>run</name>
         <description>Running.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LDTRM</name>
       <description>Load Trim.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>GAININV</name>
       <description>IPO Trim Step Invert. Set this field to invert the up/down trim steps during calibration operations.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>not</name>
         <description>Trim steps are not inverted.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>run</name>
         <description>Enable inverted trim steps for calibration.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ATOMIC</name>
       <description>IPO Trim Atomic Start. Set this bit to start an atomic automatic calibration of the IPO. The calibration will run for FCR_AUTOCAL2.donecnt milliseconds. This bit is automatically cleared by hardware when the calibration is complete.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>not</name>
         <description>Not Running.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>run</name>
         <description>Running.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MU</name>
       <description>IPO Trim Pulse Count. Load this field with the desired number of trim adjustment pulses required before the trim is updated during automatic calibration operation. The recommended value for this field is 4.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>12</bitWidth>
      </field>
      <field>
       <name>IPOMACTMROUT</name>
       <description>IPO Automatic Trim Value Output. This field contains the calculated trim output from an automatic calibration run.</description>
       <bitOffset>23</bitOffset>
       <bitWidth>9</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>AUTOCAL1</name>
     <description>Automatic Calibration 1.</description>
     <addressOffset>0x08</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>INITIAL</name>
       <description>IPO Trim Automatic Calibration Initial Trim. This field contains the initial trim setting for the IPO. Set this field to the desired initial trim value to use for an IPO automatic calibration operation. The closer this field is to the target trim value required, the faster the automatic trim operation completes.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>9</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>AUTOCAL2</name>
     <description>Automatic Calibration 2</description>
     <addressOffset>0x0C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>RUNTIME</name>
       <description>IPO Trim Automatic Calibration Run Time. Set this field to the desired number of milliseconds for the atomic calibration runtime for the IPO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>DIV</name>
       <description>IPO Trim Automatic Calibration Divide Factor. The target frequency of the calibration is determined by dividing the IPO frequency by 32,768 before comparing it with the ERTCO frequency. For example, to achieve a target IPO frequency of 100MHz, load this field with 0xBEB (3,051).</description>
       <bitOffset>8</bitOffset>
       <bitWidth>13</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ERFOKS</name>
     <description>ERFO Kick Start Register.</description>
     <addressOffset>0x18</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>KSERFO_CNT</name>
       <description>Kick Start ERFO Counter.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>7</bitWidth>
      </field>
      <field>
       <name>KSERFO_EN</name>
       <description>Kick Start ERFO Enable.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>KSERFODRIVER</name>
       <description>Kick Start ERFO Drive Strength.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
      <field>
       <name>KSERFO2X</name>
       <description>Kick Start ERFO Double Pulse Length.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>KSCLKSEL</name>
       <description>Kick Start Clock Select for ERFO.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>NONE</name>
         <description>No kick start clock.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IPO</name>
         <description>IPO.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
  <!--FCR Function Control Register.-->
  <peripheral>
   <name>GCR</name>
   <description>Global Control Registers.</description>
   <baseAddress>0x40000000</baseAddress>
   <addressBlock>
    <offset>0</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>SYSCTRL</name>
     <description>System Control.</description>
     <addressOffset>0x00</addressOffset>
     <resetMask>0xFFFFFFFE</resetMask>
     <fields>
      <field>
       <name>ICC_FLUSH</name>
       <description>ICC Cache Flush. Write 1 to flush the code cache and the instruction buffer for the M4. This bit is automatically cleared to 0 when the flush is complete. Writing 0 has no effect and does not stop a cache flush in progress.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>clear</modifiedWriteValues>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>ICC flush complete</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>flush</name>
         <description>Flush the contents of the ICC cache</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CCHK</name>
       <description>Compute ROM Checksum. This bit is self-cleared when calculation is completed. Once set, software clearing this bit is ignored and the bit will remain set until the operation is completed.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>clear</modifiedWriteValues>
       <enumeratedValues>
        <enumeratedValue>
         <name>complete</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CHKRES</name>
       <description>ROM Checksum Result. This is the result after setting bit GCR_SYSCTRL.cchk. This bit is only valid after the ROM checksum is complete and GCR_SYSCTRL.cchk is cleared.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>pass</name>
         <description>ROM Checksum Correct.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>fail</name>
         <description>ROM Checksum Fail.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>OVR</name>
       <description>Operating Voltage Range. Set this field to match the VCORE voltage to enable the on-chip RAM to operate at the optimal timing range.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>0_9V</name>
         <description>0.9V +- 10%</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>1_0V</name>
         <description>1.0V +- 10%</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>1_1V</name>
         <description>1.1V +- 10%</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>RST0</name>
     <description>Reset.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>DMA0</name>
       <description>DMA0 Reset.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>clear</modifiedWriteValues>
       <enumeratedValues>
        <name>reset</name>
        <usage>read-write</usage>
        <enumeratedValue>
         <name>reset_done</name>
         <description>Reset complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>busy</name>
         <description>Starts Reset or indicates reset in progress.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="DMA0">
       <name>WDT0</name>
       <description>Watchdog Timer 0 Reset.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA0">
       <name>GPIO0</name>
       <description>GPIO0 Reset. Setting this bit to 1 resets GPIO0 pins to their default states.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA0">
       <name>TMR0</name>
       <description>Timer 0 Reset. Setting this bit to 1 resets Timer 0 block.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA0">
       <name>TMR1</name>
       <description>Timer 1 Reset. Setting this bit to 1 resets Timer 1 block.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA0">
       <name>TMR2</name>
       <description>Timer 2 Reset. Setting this bit to 1 resets Timer 2 block.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA0">
       <name>TMR3</name>
       <description>Timer 3 Reset. Setting this bit to 1 resets Timer 3 block.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA0">
       <name>TMR4</name>
       <description>Timer 4 Reset. Setting this bit to 1 resets Timer 4 block.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA0">
       <name>TMR5</name>
       <description>Timer 5 Reset. Setting this bit to 1 resets Timer 5 block.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA0">
       <name>UART</name>
       <description>UART Reset. Setting this bit to 1 reset UART block.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA0">
       <name>SPI</name>
       <description>SPI Reset. Setting this bit to 1 resets SPI block.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA0">
       <name>I2C_I3C</name>
       <description>I2C/I3C Reset.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA0">
       <name>RTC</name>
       <description>Real Time Clock Reset.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA0">
       <name>BTLE</name>
       <description>Bluetooth Reset.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA0">
       <name>TRNG</name>
       <description>TRNG Reset.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA0">
       <name>DMA1</name>
       <description>DMA1 Reset.</description>
       <bitOffset>27</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA0">
       <name>SOFT</name>
       <description>Soft Reset. This is the same as a peripheral reset except that it also resets the GPIO to its POR state.</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA0">
       <name>PERIPH</name>
       <description>Peripheral Reset. Setting this bit to 1 resets all peripherals. Watchdog timers, GPIO ports, the AoD, RAM retention and the GCR are unaffected.</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA0">
       <name>SYS</name>
       <description>System Reset. This is the same as soft reset except it also resets all GCR, resetting the clocks to their default state. The CPU state is reset as well as the watchdog timers. The AoD and RAM are unaffected.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CLKCTRL</name>
     <description>Clock Control.</description>
     <addressOffset>0x08</addressOffset>
     <resetValue>0x00000008</resetValue>
     <fields>
      <field>
       <name>SYSCLK_DIV</name>
       <description>Prescaler Select. This 3 bit field sets the system operating frequency by controlling the prescaler that divides the output of the PLL0.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>div1</name>
         <description>Divide by 1.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div2</name>
         <description>Divide by 2.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div4</name>
         <description>Divide by 4.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div8</name>
         <description>Divide by 8.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div16</name>
         <description>Divide by 16.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div32</name>
         <description>Divide by 32.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div64</name>
         <description>Divide by 64.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div128</name>
         <description>Divide by 128.</description>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSCLK_SEL</name>
       <description>Clock Source Select. This 3 bit field selects the source for the system clock.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>IPO</name>
         <description>The internal 64 MHz oscillator is used for the system clock.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ERFO</name>
         <description>16-32MHz Crystal is used for the system clock.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>INRO</name>
         <description>8 kHz Internal Nano-Ring Oscillator is used for the system clock.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IBRO</name>
         <description>The internal 7.3728 MHz oscillator is used for the system clock.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ERTCO</name>
         <description> 32.768 kHz is used for the system clock.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>EXTCLK</name>
         <description> External clock.</description>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSCLK_RDY</name>
       <description>SYS_OSC Select Ready. When SYS_OSC is changed by modifying GCR_CLKCTRL.sysclk_sel, there is a delay until the switchover is complete. This bit is cleared until the switchover is complete.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>busy</name>
         <description>Switchover to the new clock source (as selected by CLKSEL) has not yet occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ready</name>
         <description>System clock running from CLKSEL clock source.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ERFO_EN</name>
       <description>32MHz Crystal Oscillator Enable.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Is Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Is Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ERTCO_EN</name>
       <description>32 kHz Crystal Oscillator Enable.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Is Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Is Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="ERTCO_EN">
       <name>IPO_EN</name>
       <description>64 MHz Internal Reference Clock Enable.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="ERTCO_EN">
       <name>IBRO_EN</name>
       <description>7.3728 MHz High Frequency Internal Reference Clock Enable. The IBRO is always enabled.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>IBRO_VS</name>
       <description>7.3728 MHz High Frequency Internal Reference Clock Voltage Select. This register bit is used to select the power supply to the IBRO.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Vcor</name>
         <description>VCore Supply</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>1V</name>
         <description>Dedicated 1V regulated supply.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ERFO_RDY</name>
       <description>32MHz Crystal Oscillator Ready</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>not</name>
         <description>Is not Ready.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ready</name>
         <description>Is Ready.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ERTCO_RDY</name>
       <description>32.768 kHz Crystal Oscillator Ready</description>
       <bitOffset>25</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>not</name>
         <description>Is not Ready.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ready</name>
         <description>Is Ready.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="ERTCO_RDY">
       <name>IPO_RDY</name>
       <description>IPO Ready Status.</description>
       <bitOffset>26</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="ERTCO_RDY">
       <name>IBRO_RDY</name>
       <description>7.3728 MHz Internal Baud Rate Oscillator Ready.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="ERTCO_RDY">
       <name>INRO_RDY</name>
       <description>8 kHz Internal Nano-Ring Oscillator Ready.</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PM</name>
     <description>Power Management.</description>
     <addressOffset>0x0C</addressOffset>
     <fields>
      <field>
       <name>MODE</name>
       <description>Operating Mode. This two bit field selects the current operating mode for the device. Note that code execution only occurs during ACTIVE mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>Active Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>sleep</name>
         <description>Cortex-M4 Active, RISC-V Sleep Mode.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>standby</name>
         <description>Standby Mode.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>backup</name>
         <description>Backup Mode.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>powerdown</name>
         <description>Power Down Mode.</description>
         <value>10</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>GPIO_WE</name>
       <description>GPIO Wake Up Enable. This bit enables all GPIO pins as potential wakeup sources. Any GPIO configured for wakeup is capable of causing an exit from IDLE or STANDBY modes when this bit is set.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Wake Up Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Wake Up Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="GPIO_WE">
       <name>RTC_WE</name>
       <description>RTC Alarm Wake Up Enable. This bit enables RTC alarm as wakeup source. If enabled, the desired RTC alarm must be configured via the RTC control registers.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO_WE">
       <name>WUT_WE</name>
       <description>WUT Wake Up Enable. This bit enables the Wake-Up Timer as wakeup source. </description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ERFO_BP</name>
       <description>32MHz Oscillator Bypass. This bit is set to 0 on a POR is not affected by other forms of reset. Set this field to 1 to use a square wave input as the clock source for the ERFO driving the HFXIN pin.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PCLKDIV</name>
     <description>Peripheral Clock Divider.</description>
     <addressOffset>0x18</addressOffset>
     <resetValue>0x00000001</resetValue>
     <access>read-only</access>
    </register>
    <register>
     <name>PCLKDIS0</name>
     <description>Peripheral Clock Disable.</description>
     <addressOffset>0x24</addressOffset>
     <fields>
      <field>
       <name>GPIO0</name>
       <description>GPIO0 Clock Disable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="GPIO0">
       <name>DMA0</name>
       <description>DMA Clock Disable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>SPI</name>
       <description>SPI Clock Disable.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>UART</name>
       <description>UART Clock Disable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>I2C_I3C</name>
       <description>I2C/I3C Clock Disable.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>TMR0</name>
       <description>Timer 0 Clock Disable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>TMR1</name>
       <description>Timer 1 Clock Disable.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>TMR2</name>
       <description>Timer 2 Clock Disable.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>TMR3</name>
       <description>Timer 3 Clock Disable.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>TMR4</name>
       <description>Timer 4 Clock Disable.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>TMR5</name>
       <description>Timer 5 Clock Disable.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MEMCTRL</name>
     <description>Memory Clock Control Register.</description>
     <addressOffset>0x28</addressOffset>
     <fields>
      <field>
       <name>FWS</name>
       <description>Flash Wait State. These bits define the number of wait-state cycles per Flash data read access. Minimum wait state is 2 for IPO, 1 for other clock sources.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MEMZ</name>
     <description>Memory Zeroize Control.</description>
     <addressOffset>0x2C</addressOffset>
     <fields>
      <field>
       <name>RAM0</name>
       <description>System RAM Block 0 Zeroization.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>clear</modifiedWriteValues>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="RAM0">
       <name>RAM1</name>
       <description>System RAM Block 1 Zeroization.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0">
       <name>RAM2</name>
       <description>System RAM Block 2 Zeroization.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0">
       <name>RAM3</name>
       <description>System RAM Block 3 Zeroization.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0">
       <name>RAM4</name>
       <description>System RAM Block 4 Zeroization.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0">
       <name>ICC</name>
       <description>Instruction Cache Zeroization.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SYSST</name>
     <description>System Status Register.</description>
     <addressOffset>0x40</addressOffset>
     <fields>
      <field>
       <name>ICELOCK</name>
       <description>ARM ICE Lock Status.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>unlocked</name>
         <description>ICE is unlocked.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>locked</name>
         <description>ICE is locked.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>RST1</name>
     <description>Reset 1.</description>
     <addressOffset>0x44</addressOffset>
     <fields>
      <field>
       <name>CRC</name>
       <description>CRC Reset.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <name>reset_read</name>
        <usage>read</usage>
        <enumeratedValue>
         <name>reset_done</name>
         <description>Reset complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>busy</name>
         <description>Starts reset or indicates reset in progress.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CRC">
       <name>AES</name>
       <description>AES Reset.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PCLKDIS1</name>
     <description>Peripheral Clock Disable.</description>
     <addressOffset>0x48</addressOffset>
     <fields>
      <field>
       <name>TRNG</name>
       <description>TRNG Clock Disable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="TRNG">
       <name>CRC</name>
       <description>CRC Clock Disable.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="TRNG">
       <name>AES</name>
       <description>AES Clock Disable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="TRNG">
       <name>SPI</name>
       <description>SPI Clock Disable.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="TRNG">
       <name>WDT</name>
       <description>Watch Dog Timer 0 Clock Disable.</description>
       <bitOffset>27</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>EVENTEN</name>
     <description>Event Enable Register.</description>
     <addressOffset>0x4C</addressOffset>
     <access>read-only</access>
    </register>
    <register>
     <name>REVISION</name>
     <description>Revision Register.</description>
     <addressOffset>0x50</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>REVISION</name>
       <description>Manufacturer Chip Revision. Returns the chip revision ID as packed BCD. For example, 0xA1 would indicate the device is revision A1.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SYSIE</name>
     <description>System Status Interrupt Enable Register.</description>
     <addressOffset>0x54</addressOffset>
     <fields>
      <field>
       <name>ICEUNLOCK</name>
       <description>ARM ICE Unlock Interrupt Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>ECCERR</name>
     <description>ECC Error Register</description>
     <addressOffset>0x64</addressOffset>
     <fields>
      <field>
       <name>FLECCERR</name>
       <description>ECC Flash Error Flag. Write 1 to clear.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
     </fields>
    </register>
    <register>
     <name>ECCIE</name>
     <description>ECC IRQ Enable Register</description>
     <addressOffset>0x6C</addressOffset>
     <fields>
      <field>
       <name>FLLIRQEN</name>
       <description>ECC Flash Error Interrupt Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ECCADDR</name>
     <description>ECC Error Address Register</description>
     <addressOffset>0x70</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>ECCERRAD</name>
       <description>ECC Error Address.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>BTLELDOCTRL</name>
     <description>BTLE LDO Control Register</description>
     <addressOffset>0x74</addressOffset>
     <resetValue>0x00000066</resetValue>
     <fields>
      <field>
       <name>LDORXEN</name>
       <description>LDORX Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>LDORXPULLD</name>
       <description>LDORX Pull Down.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>LDORXVSEL</name>
       <description>LDORX Output Voltage Setting.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>0_85</name>
         <description>0.85V</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>0_9</name>
         <description>0.9V</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>1_0</name>
         <description>1.0V</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>1_1</name>
         <description>1.1V</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LDOTXEN</name>
       <description>LDOTX Enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>LDOTXPULLD</name>
       <description>LDOTX Pull Down.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>LDOTXVSEL</name>
       <description>LDOTX Output Voltage Setting.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>0_85</name>
         <description>0.85V</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>0_9</name>
         <description>0.9V</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>1_0</name>
         <description>1.0V</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>1_1</name>
         <description>1.1V</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LDOTXBYP</name>
       <description>LDOTX Bypass Enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>LDORTDISCH</name>
       <description>LDORX Discharge.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>LDORXBYP</name>
       <description>LDORX Bypass Enable.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>LDORXDISCH</name>
       <description>LDORX Discharge.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>LDORXENDLY</name>
       <description>LDORX Enable Delay.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>LDOTXENDLY</name>
       <description>LDOTX Enable Delay.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>LDOTXBYPENENDLY</name>
       <description>LDOTX Bypass Enable Delay.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>LDORXBYPENENDLY</name>
       <description>LDORX Bypass Enable Delay.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>BTLELDODLY</name>
     <description>BTLE LDO Delay Register</description>
     <addressOffset>0x78</addressOffset>
     <resetValue>0x01B01B28</resetValue>
     <fields>
      <field>
       <name>BYPDLYCNT</name>
       <description>Bypass Delay Count. Not used.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>LDORXDLYCNT</name>
       <description>LDORX Delay Count. Not used.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>9</bitWidth>
      </field>
      <field>
       <name>LDOTXDLYCNT</name>
       <description>LDOTX Delay Count. Not used.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>9</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>GPR</name>
     <description>General Purpose Register.</description>
     <addressOffset>0x80</addressOffset>
    </register>
   </registers>
  </peripheral>
  <!--GCR Global Control Registers.-->
  <peripheral>
   <name>MCR</name>
   <description>Misc Control.</description>
   <baseAddress>0x40006C00</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>FLECCE</name>
     <description>Error Correction Coding Enable</description>
     <addressOffset>0x00</addressOffset>
     <fields>
      <field>
       <name>FLECCE</name>
       <description>Flash Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>OUTEN</name>
     <description>Output Enable Register</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>SQWOUT_EN</name>
       <description>Square Wave Output Enable on P1.0 (SQWOUT)</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PDOWN_OUT_EN</name>
       <description>Power Down Output Enable on P1.0</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL</name>
     <description>Miscellaneous Control Register.</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>ERTCO32K_EN</name>
       <description>ERTCO 32KHz Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ERTCO_EN</name>
       <description>ERTCO Enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>GPIO1_CTRL</name>
     <description>GPIO1 Pin Control Register.</description>
     <addressOffset>0x20</addressOffset>
     <fields>
      <field>
       <name>P10_DO</name>
       <description>GPIO3 Pin 0 Data Output.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>P10_OE</name>
       <description>GPIO3 Pin 0 Output Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>P10_PE</name>
       <description>GPIO3 Pin 0 Pull-up Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>P10_IN</name>
       <description>GPIO3 Pin 0 Input Status.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>P11_DO</name>
       <description>GPIO3 Pin 1 Data Output.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>P11_OE</name>
       <description>GPIO3 Pin 1 Output Enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>P11_PE</name>
       <description>GPIO3 Pin 1 Pull-up Enable.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>P11_IN</name>
       <description>GPIO3 Pin 1 Input Status.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>RTCTRIM</name>
     <description>RTC Trim System Initialization</description>
     <addressOffset>0x24</addressOffset>
     <fields>
      <field>
       <name>X1TRIM</name>
       <description>RTC X1 Trim. The X1 trim setting for the RTC.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>X2TRIM</name>
       <description>RTC X2 Trim. The X2 trim setting for the RTC.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
  <!--MCR Misc Control.-->
  <peripheral>
   <name>MPC</name>
   <description>Memory Protection Control.</description>
   <baseAddress>0x50091000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>MPC</name>
    <value>48</value>
   </interrupt>
   <registers>
    <register>
     <name>CTRL</name>
     <description>Control register.</description>
     <addressOffset>0x00</addressOffset>
     <resetValue>0x00000100</resetValue>
     <fields>
      <field>
       <name>CFG_SEC_RESP</name>
       <description>Security error response configuration.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>RAZ_WI</name>
         <description>Read as zero or writes ignored.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>BUS_ERR</name>
         <description>Bus error.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DATA_IF_GATE_REQ</name>
       <description>Data interface gating request.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DATA_IF_GATE_ACK</name>
       <description>Data interface gating acknowledge.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>AUTOINCREMENT</name>
       <description>Auto increment block index.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SEC_LOCKDOWN</name>
       <description>Security lockdown.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>BLK_MAX</name>
     <description>Maximum value of block based index register.</description>
     <addressOffset>0x10</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>IND_MAX</name>
       <description>Maximum value.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>BLK_CFG</name>
     <description>Block configuration.</description>
     <addressOffset>0x14</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>BLOCK_SIZE</name>
       <description>Block size.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>INIT</name>
       <description>Initialization in progress.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>BLK_IDX</name>
     <description>Index value for accessing block based look up table.</description>
     <addressOffset>0x18</addressOffset>
     <fields>
      <field>
       <name>INDEX</name>
       <description>Index value.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>BLK_LUTn</name>
     <description>Block based LUT. Access to block based look up configuration space pointed to by BLK_IDX.</description>
     <addressOffset>0x1C</addressOffset>
     <fields>
      <field>
       <name>BLOCK</name>
       <description>Each bit indicates one block.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>SECURE</name>
         <description>Secure.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>NONSECURE</name>
         <description>Non-secure.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_STAT</name>
     <description>Interrupt status register.</description>
     <addressOffset>0x20</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>mpc_irq_fl</name>
       <description>MPC interrupt triggered.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_CLEAR</name>
     <description>Interrupt enable register.</description>
     <addressOffset>0x24</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>mpc_irq_clr</name>
       <description>MPC interrupt clear (cleared automatically).</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN</name>
     <description>Interrupt enable register.</description>
     <addressOffset>0x28</addressOffset>
     <resetValue>0x1</resetValue>
     <fields>
      <field>
       <name>mpc_irq_en</name>
       <description>Enables interrupt output generation.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_INFO1</name>
     <description>First security violating address. Subsequent security violationg transfers are not captured in this register until mpc_irq is cleared.</description>
     <addressOffset>0x2C</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>HADDR</name>
       <description>Security violating address.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_INFO2</name>
     <description>Additional control bits of the first security violating address.</description>
     <addressOffset>0x30</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>HMASTER</name>
       <description>Master identifier.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
      <field>
       <name>HNONSEC</name>
       <description>Non-secure transfer indicator.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CFG_NS</name>
       <description>Non-secure.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_SET</name>
     <description>Interrupt setting.</description>
     <addressOffset>0x34</addressOffset>
     <fields>
      <field>
       <name>mpc_irq</name>
       <description>Debug only. Sets mpc_irq triggered in INT_STAT regardless of mpc_irq being enabled or not.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PIDR4</name>
     <description>Peripheral ID 4.</description>
     <addressOffset>0xFD0</addressOffset>
     <access>read-only</access>
     <resetValue>0x04</resetValue>
     <fields>
      <field>
       <name>JEP106_C_CODE</name>
       <description>JEP106 continuation code.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>BLOCK_COUNT</name>
       <description>Block count.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PIDR5</name>
     <description>Peripheral ID 5.</description>
     <addressOffset>0xFD4</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>PID5</name>
       <description>Not used.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PIDR6</name>
     <description>Peripheral ID 6.</description>
     <addressOffset>0xFD8</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>PID6</name>
       <description>Not used.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PIDR7</name>
     <description>Peripheral ID 7.</description>
     <addressOffset>0xFDC</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>PID7</name>
       <description>Not used.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PIDR0</name>
     <description>Peripheral ID 0.</description>
     <addressOffset>0xFE0</addressOffset>
     <access>read-only</access>
     <resetValue>0x60</resetValue>
     <fields>
      <field>
       <name>PART_NUMBER</name>
       <description>Part number.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PIDR1</name>
     <description>Peripheral ID 1.</description>
     <addressOffset>0xFE4</addressOffset>
     <access>read-only</access>
     <resetValue>0xB8</resetValue>
     <fields>
      <field>
       <name>PART_NUMBER</name>
       <description>Bits [11:8] of part number.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>JEP106_ID_3_0</name>
       <description>Bits [3:0] of the JEDEC JEP106 Manufacturer ID code.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PIDR2</name>
     <description>Peripheral ID 2.</description>
     <addressOffset>0xFE8</addressOffset>
     <access>read-only</access>
     <resetValue>0x1B</resetValue>
     <fields>
      <field>
       <name>JEP106_ID_6_4</name>
       <description>Bits [6:4] of the JEDEC JEP106 Manufacturer ID code.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
      <field>
       <name>JEDEC_USED</name>
       <description>Jedec used.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>REVISION</name>
       <description>Revision.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PIDR3</name>
     <description>Peripheral ID 3.</description>
     <addressOffset>0xFEC</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>CUSTOMER_MOD_NO</name>
       <description>Customer modification number.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>ECO_REV</name>
       <description>ECO revision number.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CIDR0</name>
     <description>Component ID 0.</description>
     <addressOffset>0xFF0</addressOffset>
     <access>read-only</access>
     <resetValue>0x0D</resetValue>
     <fields>
      <field>
       <name>CID0</name>
       <description>Component ID 0.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CIDR1</name>
     <description>Component ID 1.</description>
     <addressOffset>0xFF4</addressOffset>
     <access>read-only</access>
     <resetValue>0xF0</resetValue>
     <fields>
      <field>
       <name>CID1</name>
       <description>Component ID 1 (PrimeCell class).</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CIDR2</name>
     <description>Component ID 2.</description>
     <addressOffset>0xFF8</addressOffset>
     <access>read-only</access>
     <resetValue>0x05</resetValue>
     <fields>
      <field>
       <name>CID2</name>
       <description>Component ID 2.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CIDR3</name>
     <description>Component ID 3.</description>
     <addressOffset>0xFFC</addressOffset>
     <access>read-only</access>
     <resetValue>0xB1</resetValue>
     <fields>
      <field>
       <name>CID3</name>
       <description>Component ID 3.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
  <!--MPC Memory Protection Control.-->
  <peripheral>
   <name>SIR</name>
   <description>System Initialization Registers.</description>
   <baseAddress>0x40000400</baseAddress>
   <access>read-only</access>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>SISTAT</name>
     <description>System Initialization Status Register.</description>
     <addressOffset>0x00</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>MAGIC</name>
       <description>Configuration Valid Flag. This field is set to 1 by hardware during reset if the device configuration is valid.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <usage>read</usage>
        <enumeratedValue>
         <name>magicNotSet</name>
         <description>Configuration invalid.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>magicSet</name>
         <description>Configuration valid.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CRCERR</name>
       <description>Configuration Error Flag. This field is set by hardware during reset if an error in the device configuration is detected.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <usage>read</usage>
        <enumeratedValue>
         <name>noError</name>
         <description>Configuration valid.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>error</name>
         <description>Configuration invalid.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>ADDR</name>
     <description>System Initialization Address Error Register.</description>
     <addressOffset>0x04</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>ERRADDR</name>
       <description>Configuration Error Address. If the SIR_SISTAT.crcerr field is set to 1, the value in this register is the address of the configuration failure.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SFSTAT</name>
     <description>System Initialization Security Function Status Register.</description>
     <addressOffset>0x104</addressOffset>
     <fields>
      <field>
       <name>SECBOOT</name>
       <description>SecROM Function Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>disable</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>enable</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SECEXT</name>
       <description>M33 SecExt Function Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>disable</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>enable</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SICFG0</name>
     <description>System Initialization Configuration Register 0.</description>
     <addressOffset>0x08</addressOffset>
    </register>
    <register>
     <name>SICFG1</name>
     <description>System Initialization Configuration Register 1.</description>
     <addressOffset>0x0C</addressOffset>
     <fields>
      <field>
       <name>SRAMCLKGDIS</name>
       <description>System RAM Clock Gate Disable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ICCLKGDIS</name>
       <description>ICache Clock Gate Disable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CRBDIS</name>
       <description>Cache Read Buffer Disable.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>FLCREDDIS</name>
       <description>Flash Redundancy Disable.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SIR4</name>
     <description>System Initialization Register 4.</description>
     <addressOffset>0x10</addressOffset>
    </register>
    <register>
     <name>SIR5</name>
     <description>System Initialization Register 5.</description>
     <addressOffset>0x14</addressOffset>
    </register>
    <register>
     <name>SIR6</name>
     <description>System Initialization Register 6.</description>
     <addressOffset>0x18</addressOffset>
     <fields>
      <field>
       <name>SECBOOTL</name>
       <description>SecROM Function Disable. Write 0xAA to disable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>SECEXTL</name>
       <description>SecExt Function Disable. Write 0xAA to disable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>SECBOOTH</name>
       <description>SecROM Function Disable. Write 0xAA to disable.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>SECEXTH</name>
       <description>SecExt Function Disable. Write 0xAA to disable.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SIR7</name>
     <description>System Initialization Register 7.</description>
     <addressOffset>0x1C</addressOffset>
    </register>
    <register>
     <name>SIR8</name>
     <description>System Initialization Register 8.</description>
     <addressOffset>0x20</addressOffset>
     <resetValue>0x00100008</resetValue>
     <fields>
      <field>
       <name>RNGEN</name>
       <description>RNGEN[31:0] Trim bits.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SIR9</name>
     <description>System Initialization Register 9.</description>
     <addressOffset>0x24</addressOffset>
     <resetValue>0x3</resetValue>
     <fields>
      <field>
       <name>XOBIAS</name>
       <description>XO Bias Trim bits.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>24MHZ</name>
         <description>24MHz</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>32MHZ</name>
         <description>32MHZ</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SIR10</name>
     <description>System Initialization Register 10.</description>
     <addressOffset>0x28</addressOffset>
     <fields>
      <field>
       <name>RNGEN</name>
       <description>RNGEN[63:32] Trim bits.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SIR11</name>
     <description>System Initialization Register 11.</description>
     <addressOffset>0x2C</addressOffset>
     <fields>
      <field>
       <name>ENTROPYDIS</name>
       <description>RNG Entropy Disable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SIR12</name>
     <description>System Initialization Register 12.</description>
     <addressOffset>0x30</addressOffset>
     <fields>
      <field>
       <name>RNGEN2</name>
       <description>RNGEN2[31:0] Trim bits.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SIR13</name>
     <description>System Initialization Register 13.</description>
     <addressOffset>0x34</addressOffset>
    </register>
    <register>
     <name>SIR14</name>
     <description>System Initialization Register 14.</description>
     <addressOffset>0x38</addressOffset>
     <fields>
      <field>
       <name>RNGEN2</name>
       <description>RNGEN2[63:32] Trim bits.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SIR15</name>
     <description>System Initialization Register 15.</description>
     <addressOffset>0x3C</addressOffset>
     <fields>
      <field>
       <name>I2CIRRX</name>
       <description>I2C Glitch Filter Trim bits.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SIR16</name>
     <description>System Initialization Register 16.</description>
     <addressOffset>0x40</addressOffset>
     <resetValue>0xFF0100</resetValue>
     <fields>
      <field>
       <name>ACMIN</name>
       <description>Auto Cal Min Trim bits.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>9</bitWidth>
      </field>
      <field>
       <name>ACMAX</name>
       <description>Auto Cal Min Trim bits.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>9</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SIR17</name>
     <description>System Initialization Register 17.</description>
     <addressOffset>0x44</addressOffset>
    </register>
   </registers>
  </peripheral>
  <!--SIR System Initialization Registers.-->
  <peripheral>
   <name>UART</name>
   <description>UART Low Power Registers</description>
   <baseAddress>0x40042000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>UART</name>
    <description>UART interrupt.</description>
    <value>11</value>
   </interrupt>
   <registers>
    <register>
     <name>CTRL</name>
     <description>Control register</description>
     <addressOffset>0x0000</addressOffset>
     <fields>
      <field>
       <name>RX_THD_VAL</name>
       <description>This field specifies the depth of receive FIFO for interrupt generation (value 0 and &gt; 8 are ignored) </description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>PAR_EN</name>
       <description>Parity Enable</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PAR_EO</name>
       <description>when PAREN=1 selects odd or even parity odd is 1 even is 0</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PAR_MD</name>
       <description>Selects parity based on 1s or 0s count (when PAREN=1) </description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CTS_DIS</name>
       <description>CTS Sampling Disable </description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TX_FLUSH</name>
       <description>Flushes the TX FIFO buffer. This bit always reads 0.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_FLUSH</name>
       <description>Flushes the RX FIFO buffer. This bit always reads 0.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CHAR_SIZE</name>
       <description>Selects UART character size</description>
       <bitOffset>10</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>5bits</name>
         <description>5 bits</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>6bits</name>
         <description>6 bits</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>7bits</name>
         <description>7 bits</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>8bits</name>
         <description>8 bits</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>STOPBITS</name>
       <description>Selects the number of stop bits that will be generated</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HFC_EN</name>
       <description>Enables/disables hardware flow control</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RTSDC</name>
       <description>Hardware Flow Control RTS Mode</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>BCLKEN</name>
       <description>Baud clock enable</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>BCLKSRC</name>
       <description>To select the UART clock source for the UART engine (except APB registers). Secondary clock (used for baud rate generator) can be asynchronous from APB clock.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>CLK0</name>
         <description>Clock option 0</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CLK1</name>
         <description>Clock option 1</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CLK2</name>
         <description>Clock option 2</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CLK3</name>
         <description>Clock option 3</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BCLKRDY</name>
       <description>Baud clock Ready read only bit</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>UCAGM</name>
       <description>UART Clock Auto Gating mode</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>STATUS</name>
     <description>Status register</description>
     <addressOffset>0x0004</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>TX_BUSY</name>
       <description>Read-only flag indicating the UART transmit status</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_BUSY</name>
       <description>Read-only flag indicating the UART receiver status</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_EM</name>
       <description>Read-only flag indicating the RX FIFO state</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>Read-only flag indicating the RX FIFO state</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TX_EM</name>
       <description>Read-only flag indicating the TX FIFO state</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TX_FULL</name>
       <description>Read-only flag indicating the TX FIFO state</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_LVL</name>
       <description>Indicates the number of bytes currently in the RX FIFO (0-8) </description>
       <bitOffset>8</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>TX_LVL</name>
       <description>Indicates the number of bytes currently in the TX FIFO (0-8) </description>
       <bitOffset>12</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN</name>
     <description>Interrupt Enable control register</description>
     <addressOffset>0x0008</addressOffset>
     <fields>
      <field>
       <name>RX_FERR</name>
       <description>Enable Interrupt For RX Frame Error</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_PAR</name>
       <description>Enable Interrupt For RX Parity Error</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CTS_EV</name>
       <description>Enable Interrupt For CTS signal change Error</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_OV</name>
       <description>Enable Interrupt For RX FIFO Overrun Error</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_THD</name>
       <description>Enable Interrupt For RX FIFO reaches the number of bytes configured by RXTHD</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TX_OB</name>
       <description>Enable Interrupt For TX FIFO has one byte remaining</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TX_HE</name>
       <description>Enable Interrupt For TX FIFO has half empty</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>Enable Interrupt For RX FIFO full</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_FL</name>
     <description>Interrupt status flags Control register</description>
     <addressOffset>0x000C</addressOffset>
     <fields>
      <field>
       <name>RX_FERR</name>
       <description>Flag for RX Frame Error Interrupt.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_PAR</name>
       <description>Flag for RX Parity Error interrupt</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CTS_EV</name>
       <description>Flag for CTS signal change interrupt (hardware flow control disabled) </description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_OV</name>
       <description>Flag for RX FIFO Overrun interrupt</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_THD</name>
       <description>Flag for interrupt when RX FIFO reaches the number of bytes configured by the RXTHD field</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TX_OB</name>
       <description>Flag for interrupt when TX FIFO has one byte remaining</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TX_HE</name>
       <description>Flag for interrupt when TX FIFO is half empty</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>Flag for interrupt when RX FIFO is full</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CLKDIV</name>
     <description>Clock Divider register</description>
     <addressOffset>0x0010</addressOffset>
     <fields>
      <field>
       <name>CLKDIV</name>
       <description>Baud rate divisor value</description>
       <bitOffset>0</bitOffset>
       <bitWidth>20</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>OSR</name>
     <description>Over Sampling Rate register</description>
     <addressOffset>0x0014</addressOffset>
     <fields>
      <field>
       <name>OSR</name>
       <description>OSR</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>128</name>
         <description>128x</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>64</name>
         <description>64x</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>32</name>
         <description>32x</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>16</name>
         <description>16x</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>8</name>
         <description>8x</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>4</name>
         <description>4x</description>
         <value>5</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>TXPEEK</name>
     <description>TX FIFO Output Peek register</description>
     <addressOffset>0x0018</addressOffset>
     <fields>
      <field>
       <name>DATA</name>
       <description>Transmit FIFO Data. Reading from this field does not affect the contents of TX FIFO. Note that the parity bit is available from this field.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PNR</name>
     <description>Pin register</description>
     <addressOffset>0x001C</addressOffset>
     <fields>
      <field>
       <name>CTS</name>
       <description>Current sampled value of CTS IO</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RTS</name>
       <description>This bit controls the value to apply on the RTS IO. If set to 1, the RTS IO is set to high level. If set to 0, the RTS IO is set to low level.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO</name>
     <description>FIFO Read/Write register</description>
     <addressOffset>0x0020</addressOffset>
     <fields>
      <field>
       <name>DATA</name>
       <description>Load/unload location for TX and RX FIFO buffers.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>RX_PAR</name>
       <description>Parity error flag for next byte to be read from FIFO.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>DMA</name>
     <description>DMA Configuration register</description>
     <addressOffset>0x0030</addressOffset>
     <fields>
      <field>
       <name>TX_THD_VAL</name>
       <description>TX FIFO Level DMA Trigger If the TX FIFO level is less than this value, then the TX FIFO DMA interface will send a signal to system DMA to notify that TX FIFO is ready to receive data from memory.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>TX_EN</name>
       <description>TX DMA channel enable</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_THD_VAL</name>
       <description>Rx FIFO Level DMA Trigger If the RX FIFO level is greater than this value, then the RX FIFO DMA interface will send a signal to the system DMA to notify that RX FIFO has characters to transfer to memory.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>RX_EN</name>
       <description>RX DMA channel enable</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>WKEN</name>
     <description>Wake up enable Control register</description>
     <addressOffset>0x0034</addressOffset>
     <fields>
      <field>
       <name>RX_NE</name>
       <description>Wake-Up Enable for RX FIFO Not Empty</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>Wake-Up Enable for RX FIFO Full</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_THD</name>
       <description>Wake-Up Enable for RX FIFO Threshold Met</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>WKFL</name>
     <description>Wake up Flags register</description>
     <addressOffset>0x0038</addressOffset>
     <fields>
      <field>
       <name>RX_NE</name>
       <description>Wake-Up Flag for RX FIFO Not Empty</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>Wake-Up Flag for RX FIFO Full</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_THD</name>
       <description>Wake-Up Flag for RX FIFO Threshold Met</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
  <!--UART UART Low Power Registers-->
  <peripheral>
   <name>TMR</name>
   <description>Low-Power Configurable Timer</description>
   <baseAddress>0x40010000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>TMR</name>
    <value>4</value>
   </interrupt>
   <registers>
    <register>
     <name>CNT</name>
     <description>Timer Counter Register.</description>
     <addressOffset>0x00</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>COUNT</name>
       <description>The current count value for the timer. This field increments as the timer counts.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CMP</name>
     <description>Timer Compare Register.</description>
     <addressOffset>0x04</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>COMPARE</name>
       <description>The value in this register is used as the compare value for the timer's count value. The compare field meaning is determined by the specific mode of the timer.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PWM</name>
     <description>Timer PWM Register.</description>
     <addressOffset>0x08</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>PWM</name>
       <description>Timer PWM Match:
                In PWM Mode, this field sets the count value for the first transition period of the PWM cycle. At the end of the cycle where CNT equals PWM, the PWM output transitions to the second period of the PWM cycle. The second PWM period count is stored in the CMP register. The value set for PWM must me less than the value set in CMP for PWM mode operation. Timer Capture Value:
                In Capture, Compare, and Capture/Compare modes, this field is used to store the CNT value when a Capture, Compare, or Capture/Compare event occurs.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INTFL</name>
     <description>Timer Interrupt Status Register.</description>
     <addressOffset>0x0C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>IRQ_A</name>
       <description>Interrupt Flag for Timer A.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>WRDONE_A</name>
       <description>Write Done Flag for Timer A indicating the write is complete from APB to CLK_TMR domain.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>WR_DIS_A</name>
       <description>Write Disable to CNT/PWM for Timer A in the non-cascaded dual timer configuration.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>IRQ_B</name>
       <description>Interrupt Flag for Timer B.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>WRDONE_B</name>
       <description>Write Done Flag for Timer B indicating the write is complete from APB to CLK_TMR domain.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>WR_DIS_B</name>
       <description>Write Disable to CNT/PWM for Timer B in the non-cascaded dual timer configuration.</description>
       <bitOffset>25</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL0</name>
     <description>Timer Control Register.</description>
     <addressOffset>0x10</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>MODE_A</name>
       <description>Mode Select for Timer A</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ONE_SHOT</name>
         <description>One-Shot Mode</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CONTINUOUS</name>
         <description>Continuous Mode</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>COUNTER</name>
         <description>Counter Mode</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>PWM</name>
         <description>PWM Mode</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CAPTURE</name>
         <description>Capture Mode</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>COMPARE</name>
         <description>Compare Mode</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>GATED</name>
         <description>Gated Mode</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CAPCOMP</name>
         <description>Capture/Compare Mode</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DUAL_EDGE</name>
         <description>Dual Edge Capture Mode</description>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IGATED</name>
         <description>Inactive Gated Mode</description>
         <value>12</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CLKDIV_A</name>
       <description>Clock Divider Select for Timer A</description>
       <bitOffset>4</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>DIV_BY_1</name>
         <description>Prescaler Divide-By-1</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_2</name>
         <description>Prescaler Divide-By-2</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_4</name>
         <description>Prescaler Divide-By-4</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_8</name>
         <description>Prescaler Divide-By-8</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_16</name>
         <description>Prescaler Divide-By-16</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_32</name>
         <description>Prescaler Divide-By-32</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_64</name>
         <description>Prescaler Divide-By-64</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_128</name>
         <description>Prescaler Divide-By-128</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_256</name>
         <description>Prescaler Divide-By-256</description>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_512</name>
         <description>Prescaler Divide-By-512</description>
         <value>9</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_1024</name>
         <description>Prescaler Divide-By-1024</description>
         <value>10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_2048</name>
         <description>Prescaler Divide-By-2048</description>
         <value>11</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_4096</name>
         <description>TBD</description>
         <value>12</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>POL_A</name>
       <description>Timer Polarity for Timer A</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PWMSYNC_A</name>
       <description>PWM Synchronization Mode for Timer A</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>NOLHPOL_A</name>
       <description>PWM Phase A (Non-Overlapping High) Polarity for Timer A</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>NOLLPOL_A</name>
       <description>PWM Phase A-Prime (Non-Overlapping Low) Polarity for Timer A</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PWMCKBD_A</name>
       <description>PWM Phase A-Prime Output Disable for Timer A</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RST_A</name>
       <description>Resets all flip flops in the CLK_TMR domain for Timer A. Self-clears.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CLKEN_A</name>
       <description>Write 1 to Enable CLK_TMR for Timer A</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>EN_A</name>
       <description>Enable for Timer A</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>MODE_B</name>
       <description>Mode Select for Timer B</description>
       <bitOffset>16</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ONE_SHOT</name>
         <description>One-Shot Mode</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CONTINUOUS</name>
         <description>Continuous Mode</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>COUNTER</name>
         <description>Counter Mode</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>PWM</name>
         <description>PWM Mode</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CAPTURE</name>
         <description>Capture Mode</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>COMPARE</name>
         <description>Compare Mode</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>GATED</name>
         <description>Gated Mode</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CAPCOMP</name>
         <description>Capture/Compare Mode</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DUAL_EDGE</name>
         <description>Dual Edge Capture Mode</description>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IGATED</name>
         <description>Inactive Gated Mode</description>
         <value>12</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CLKDIV_B</name>
       <description>Clock Divider Select for Timer B</description>
       <bitOffset>20</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>DIV_BY_1</name>
         <description>Prescaler Divide-By-1</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_2</name>
         <description>Prescaler Divide-By-2</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_4</name>
         <description>Prescaler Divide-By-4</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_8</name>
         <description>Prescaler Divide-By-8</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_16</name>
         <description>Prescaler Divide-By-16</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_32</name>
         <description>Prescaler Divide-By-32</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_64</name>
         <description>Prescaler Divide-By-64</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_128</name>
         <description>Prescaler Divide-By-128</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_256</name>
         <description>Prescaler Divide-By-256</description>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_512</name>
         <description>Prescaler Divide-By-512</description>
         <value>9</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_1024</name>
         <description>Prescaler Divide-By-1024</description>
         <value>10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_2048</name>
         <description>Prescaler Divide-By-2048</description>
         <value>11</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV_BY_4096</name>
         <description>TBD</description>
         <value>12</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>POL_B</name>
       <description>Timer Polarity for Timer B</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PWMSYNC_B</name>
       <description>PWM Synchronization Mode for Timer B</description>
       <bitOffset>25</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>NOLHPOL_B</name>
       <description>PWM Phase A (Non-Overlapping High) Polarity for Timer B</description>
       <bitOffset>26</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>NOLLPOL_B</name>
       <description>PWM Phase A-Prime (Non-Overlapping Low) Polarity for Timer B</description>
       <bitOffset>27</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PWMCKBD_B</name>
       <description>PWM Phase A-Prime Output Disable for Timer B</description>
       <bitOffset>28</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RST_B</name>
       <description>Resets all flip flops in the CLK_TMR domain for Timer B. Self-clears.</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CLKEN_B</name>
       <description>Write 1 to Enable CLK_TMR for Timer B</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>EN_B</name>
       <description>Enable for Timer B</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>NOLCMP</name>
     <description>Timer Non-Overlapping Compare Register.</description>
     <addressOffset>0x14</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>LO_A</name>
       <description>Non-Overlapping Low Compare value for Timer A controls the time between the falling edge of PWM Phase A and the next rising edge of PWM Phase A-Prime.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>HI_A</name>
       <description>Non-Overlapping High Compare value for Timer A controls the time between the falling edge of PWM Phase A-Prime and the next rising edge of PWM Phase A.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>LO_B</name>
       <description>Non-Overlapping Low Compare value for Timer B controls the time between the falling edge of PWM Phase A and the next rising edge of PWM Phase A-Prime.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>HI_B</name>
       <description>Non-Overlapping High Compare value for Timer B controls the time between the falling edge of PWM Phase A-Prime and the next rising edge of PWM Phase A.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL1</name>
     <description>Timer Configuration Register.</description>
     <addressOffset>0x18</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>CLKSEL_A</name>
       <description>Timer Clock Select for Timer A</description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>CLKEN_A</name>
       <description>Timer A Enable Status</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CLKRDY_A</name>
       <description>CLK_TMR Ready Flag for Timer A</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>EVENT_SEL_A</name>
       <description>Event Select for Timer A</description>
       <bitOffset>4</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
      <field>
       <name>NEGTRIG_A</name>
       <description>Negative Edge Trigger for Event for Timer A</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>IE_A</name>
       <description>Interrupt Enable for Timer A</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CAPEVENT_SEL_A</name>
       <description>Capture Event Select for Timer A</description>
       <bitOffset>9</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>SW_CAPEVENT_A</name>
       <description>Software Capture Event for Timer A</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>WE_A</name>
       <description>Wake-Up Enable for Timer A</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>OUTEN_A</name>
       <description>OUT_OE_O Enable for Modes 0, 1,and 5 for Timer A</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>OUTBEN_A</name>
       <description>PWM_CKB_EN_O Enable for Modes other than Mode 3 for Timer A</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CLKSEL_B</name>
       <description>Timer Clock Select for Timer B</description>
       <bitOffset>16</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>CLKEN_B</name>
       <description>Timer B Enable Status</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CLKRDY_B</name>
       <description>CLK_TMR Ready Flag for Timer B</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>EVENT_SEL_B</name>
       <description>Event Select for Timer B</description>
       <bitOffset>20</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
      <field>
       <name>NEGTRIG_B</name>
       <description>Negative Edge Trigger for Event for Timer B</description>
       <bitOffset>23</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>IE_B</name>
       <description>Interrupt Enable for Timer B</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CAPEVENT_SEL_B</name>
       <description>Capture Event Select for Timer B</description>
       <bitOffset>25</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>SW_CAPEVENT_B</name>
       <description>Software Capture Event for Timer B</description>
       <bitOffset>27</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>WE_B</name>
       <description>Wake-Up Enable for Timer B</description>
       <bitOffset>28</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CASCADE</name>
       <description>Cascade two 16-bit timers into one 32-bit timer. Only available when C_TMR16=0 adn C_DUALTMR16=1.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>WKFL</name>
     <description>Timer Wakeup Status Register.</description>
     <addressOffset>0x1C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>A</name>
       <description>Wake-Up Flag for Timer A</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>B</name>
       <description>Wake-Up Flag for Timer B</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
  <!--TMR Low-Power Configurable Timer-->
  <peripheral derivedFrom="TMR">
   <name>TMR1</name>
   <description>Low-Power Configurable Timer 1</description>
   <baseAddress>0x40011000</baseAddress>
   <interrupt>
    <name>TMR1</name>
    <description>TMR1 IRQ</description>
    <value>5</value>
   </interrupt>
  </peripheral>
  <!--TMR1 Low-Power Configurable Timer 1-->
  <peripheral derivedFrom="TMR">
   <name>TMR2</name>
   <description>Low-Power Configurable Timer 2</description>
   <baseAddress>0x40012000</baseAddress>
   <interrupt>
    <name>TMR2</name>
    <description>TMR2 IRQ</description>
    <value>6</value>
   </interrupt>
  </peripheral>
  <!--TMR2 Low-Power Configurable Timer 2-->
  <peripheral derivedFrom="TMR">
   <name>TMR3</name>
   <description>Low-Power Configurable Timer 3</description>
   <baseAddress>0x40013000</baseAddress>
   <interrupt>
    <name>TMR3</name>
    <description>TMR3 IRQ</description>
    <value>7</value>
   </interrupt>
  </peripheral>
  <!--TMR3 Low-Power Configurable Timer 3-->
  <peripheral derivedFrom="TMR">
   <name>TMR4</name>
   <description>Low-Power Configurable Timer 4</description>
   <baseAddress>0x40014000</baseAddress>
   <interrupt>
    <name>TMR4</name>
    <description>TMR4 IRQ</description>
    <value>8</value>
   </interrupt>
  </peripheral>
  <!--TMR4 Low-Power Configurable Timer 4-->
  <peripheral derivedFrom="TMR">
   <name>TMR5</name>
   <description>Low-Power Configurable Timer 5</description>
   <baseAddress>0x40015000</baseAddress>
   <interrupt>
    <name>TMR5</name>
    <description>TMR5 IRQ</description>
    <value>9</value>
   </interrupt>
  </peripheral>
  <!--TMR5 Low-Power Configurable Timer 5-->
  <peripheral>
   <name>TRNG</name>
   <description>Random Number Generator.</description>
   <baseAddress>0x4004D000</baseAddress>
   <access>read-write</access>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>TRNG</name>
    <description>TRNG interrupt.</description>
    <value>3</value>
   </interrupt>
   <registers>
    <register>
     <name>CTRL</name>
     <description>TRNG Control Register.</description>
     <addressOffset>0x00</addressOffset>
     <resetValue>0x00000003</resetValue>
     <fields>
      <field>
       <name>OD_HEALTH</name>
       <description>Start On-Demand health test.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RND_IE</name>
       <description>Enable IRQ generation when a new 32-bit Random number is ready.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>disable</name>
         <description>Disable</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>enable</name>
         <description>Enable</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>HEALTH_IE</name>
       <description>Enable IRQ generation when a health test fails.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>MEU_KEYGEN</name>
       <description>NVSRAM MEU AES Key Generate. When enabled, the key for securing NVSRAM is generated and transferred to the secure MEU key register automatically without user visibility or intervention. This bit is cleared by hardware once the key has been transferred to the secure MEU key register.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>OD_ROMON</name>
       <description>On Demand Health Test Ring Oscillator Monitor. Set this field to 1 to start the ODHT ring oscillator test. Clear TRNG_STATUS.romon_done field before starting this test.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal operation</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start test</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>OD_EE</name>
       <description>On Demand Health Test Entropy Estimator. Set this field to 1 to start the ODHT entropy estimator test. Clear the TRNG_STATUS.ee_done field before starting this test.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal operation</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start test</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ROMON_EE_FOE</name>
       <description>Ring Oscillator Monitors and Entropy Estimator Test Freeze on Error.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ROMON_EE_FOD</name>
       <description>Ring Oscillator Monitors and Entropy Estimator Test Freeze on Done.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>EBLS</name>
       <description>Entropy Bit Load Select. This field selects where the random data is output.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>TRNG_DATA</name>
         <description>TRNG_DATA register</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>TRNG_DATA_NIST</name>
         <description>TRNG_DATA_NIST register</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>KEYWIPE</name>
       <description>Set this field to 1 to wipe the AES keys (AESKEYS_MEU[7]:AESKEYS_MEU[0] and AESKEYS_XIP[3]:AESKEYS_XIP[0]). This field is automatically cleared to 0 when the operation is complete.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>clear</modifiedWriteValues>
      </field>
      <field>
       <name>GET_TERO_CNT</name>
       <description>Reserved.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EE_DONE_IE</name>
       <description>Entropy Estimator Done Interrupt Enable. Set this field to 1 to generate an Entropy Estimator done interrupt.</description>
       <bitOffset>23</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>disable</name>
         <description>Disable</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>enable</name>
         <description>Enable</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ROMON_DIS</name>
       <description>Ring Oscillator Monitor Disable. This field allows disabling of each ring oscillator. Bit 0 corresponds to RO_0., bit 1 corresponds to RO_1, and bit 2 corresponds to RO_2.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>disable_ro_0</name>
         <description>Disable RO_0</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>disable_ro_1</name>
         <description>Disable RO_1</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>disable_ro_2</name>
         <description>Disable RO_2</description>
         <value>4</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>STATUS</name>
     <description>TRNG Status Register.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>RDY</name>
       <description>32-bit random data is ready to read from TRNG_DATA register. Reading TRNG_DATA when RND_RDY=0 will return all 0's. IRQ is generated when RND_RDY=1 if TRNG_CN.RND_IRQ_EN=1.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Busy</name>
         <description>TRNG Busy</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Ready</name>
         <description>32 bit random data is ready</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ODHT</name>
       <description>On-Demand health test status.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HT</name>
       <description>Health test status.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SRCFAIL</name>
       <description>TRNG Source Fail. If this field is set to 1, either a ring oscillator, entropy estimator, or post processing error occurred. The cause of the error is set in the error flags of this register.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>AES_KEYGEN</name>
       <description>AES Key Generation Status.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>OD_ROMON</name>
       <description>On-Demand Health Test Ring Oscillator Monitor Test. This field is set to 1 while the ODHT ring oscillator test is running.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>OD_EE</name>
       <description>On-Demand Health Test Entropy Estimator Test. This field is set to 1 while the ODHT entropy estimator test is running.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>PP_ERR</name>
       <description>Post Processing Error. The post processing engine compares pairs of random bits and throws them out if they are both 0 or both 1. If more than 128 consecutive pairs are thrown out, this error is generated.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>ROMON_0_ERR</name>
       <description>RO 0 Error.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>ROMON_1_ERR</name>
       <description>RO 1 Error.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>ROMON_2_ERR</name>
       <description>RO 2 Error.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>EE_ERR_THR</name>
       <description>Entropy Estimator Threshold Error.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>EE_ERR_OOB</name>
       <description>Entropy Estimator Out-of-Bounds Error.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>EE_ERR_LOCK</name>
       <description>Entropy Estimator Lock Error.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>TERO_CNT_RDY</name>
       <description>Health Test Done.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>RC_ERR</name>
       <description>Health Test Done.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>APP_ERR</name>
       <description>Health Test Done.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>DATA_DONE</name>
       <description>Data Generation Done. This field is set to 1 when 32-bits of data is loaded to the TRNG_DATA register.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>DATA_NIST_DONE</name>
       <description>Data NIST Generation Done. This field is set to 1 when 32-bits of data is loaded to the TRNG_DATA_NIST register.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>HEALTH_DONE</name>
       <description>Health Test Done.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>ROMON_DONE</name>
       <description>Ring Oscillator Monitor Test Done.</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>EE_DONE</name>
       <description>Entropy Estimator Test Done.</description>
       <bitOffset>23</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
     </fields>
    </register>
    <register>
     <name>DATA</name>
     <description>TRNG Data. The 32-bit random number generated is available in this field when the TRNG_STATUS.rdy field is set to 1.</description>
     <addressOffset>0x08</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>TRNG Data. The 32-bit random number generated is available in this field when the TRNG_STATUS.rdy field is set to 1.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>DATA_NIST</name>
     <description>TRNG Data NIST. If TRNG_CTRL.ebls is 1, then the 32-bit random number generated is available in this field when the TRNG_STATUS.rdy field is set to 1.</description>
     <addressOffset>0x38</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>If TRNG_CTRL.ebls is 1, then the 32-bit random number generated is available in this field when the TRNG_STATUS.rdy field is set to 1.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
  <!--TRNG Random Number Generator.-->
  <peripheral>
   <name>WDT</name>
   <description>Windowed Watchdog Timer</description>
   <baseAddress>0x40003000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x0400</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>WWDT</name>
    <value>1</value>
   </interrupt>
   <registers>
    <register>
     <name>CTRL</name>
     <description>Watchdog Timer Control Register.</description>
     <addressOffset>0x00</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>INT_LATE_VAL</name>
       <description>Windowed Watchdog Interrupt Upper Limit. Sets the number of WDTCLK cycles until a windowed watchdog timer interrupt is generated (if enabled) if the CPU does not write the windowed watchdog reset sequence to the WWDT_RST register before the watchdog timer has counted this time period since the last timer reset.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>wdt2pow31</name>
         <description>2**31 clock cycles.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow30</name>
         <description>2**30 clock cycles.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow29</name>
         <description>2**29 clock cycles.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow28</name>
         <description>2**28 clock cycles.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow27</name>
         <description>2^27 clock cycles.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow26</name>
         <description>2**26 clock cycles.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow25</name>
         <description>2**25 clock cycles.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow24</name>
         <description>2**24 clock cycles.</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow23</name>
         <description>2**23 clock cycles.</description>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow22</name>
         <description>2**22 clock cycles.</description>
         <value>9</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow21</name>
         <description>2**21 clock cycles.</description>
         <value>10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow20</name>
         <description>2**20 clock cycles.</description>
         <value>11</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow19</name>
         <description>2**19 clock cycles.</description>
         <value>12</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow18</name>
         <description>2**18 clock cycles.</description>
         <value>13</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow17</name>
         <description>2**17 clock cycles.</description>
         <value>14</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow16</name>
         <description>2**16 clock cycles.</description>
         <value>15</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RST_LATE_VAL</name>
       <description>Windowed Watchdog Reset Upper Limit. Sets the number of WDTCLK cycles until a system reset occurs (if enabled) if the CPU does not write the watchdog reset sequence to the WDT_RST register before the watchdog timer has counted this time period since the last timer reset.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>wdt2pow31</name>
         <description>2**31 clock cycles.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow30</name>
         <description>2**30 clock cycles.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow29</name>
         <description>2**29 clock cycles.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow28</name>
         <description>2**28 clock cycles.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow27</name>
         <description>2^27 clock cycles.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow26</name>
         <description>2**26 clock cycles.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow25</name>
         <description>2**25 clock cycles.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow24</name>
         <description>2**24 clock cycles.</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow23</name>
         <description>2**23 clock cycles.</description>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow22</name>
         <description>2**22 clock cycles.</description>
         <value>9</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow21</name>
         <description>2**21 clock cycles.</description>
         <value>10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow20</name>
         <description>2**20 clock cycles.</description>
         <value>11</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow19</name>
         <description>2**19 clock cycles.</description>
         <value>12</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow18</name>
         <description>2**18 clock cycles.</description>
         <value>13</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow17</name>
         <description>2**17 clock cycles.</description>
         <value>14</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow16</name>
         <description>2**16 clock cycles.</description>
         <value>15</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EN</name>
       <description>Windowed Watchdog Timer Enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>INT_LATE</name>
       <description>Windowed Watchdog Timer Interrupt Flag Too Late.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <usage>read-write</usage>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>WDT_INT_EN</name>
       <description>Windowed Watchdog Timer Interrupt Enable.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>WDT_RST_EN</name>
       <description>Windowed Watchdog Timer Reset Enable.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>INT_EARLY</name>
       <description>Windowed Watchdog Timer Interrupt Flag Too Soon.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <usage>read-write</usage>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>INT_EARLY_VAL</name>
       <description>Windowed Watchdog Interrupt Lower Limit. Sets the number of WDTCLK cycles that establishes the lower boundary of the watchdog window. A windowed watchdog timer interrupt is generated (if enabled) if the CPU writes the windowed watchdog reset sequence to the WWDT_RST register before the watchdog timer has counted this time period since the last timer reset.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>wdt2pow31</name>
         <description>2**31 clock cycles.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow30</name>
         <description>2**30 clock cycles.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow29</name>
         <description>2**29 clock cycles.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow28</name>
         <description>2**28 clock cycles.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow27</name>
         <description>2^27 clock cycles.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow26</name>
         <description>2**26 clock cycles.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow25</name>
         <description>2**25 clock cycles.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow24</name>
         <description>2**24 clock cycles.</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow23</name>
         <description>2**23 clock cycles.</description>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow22</name>
         <description>2**22 clock cycles.</description>
         <value>9</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow21</name>
         <description>2**21 clock cycles.</description>
         <value>10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow20</name>
         <description>2**20 clock cycles.</description>
         <value>11</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow19</name>
         <description>2**19 clock cycles.</description>
         <value>12</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow18</name>
         <description>2**18 clock cycles.</description>
         <value>13</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow17</name>
         <description>2**17 clock cycles.</description>
         <value>14</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow16</name>
         <description>2**16 clock cycles.</description>
         <value>15</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RST_EARLY_VAL</name>
       <description>Windowed Watchdog Reset Lower Limit. Sets the number of WDTCLK cycles that establishes the lower boundary of the watchdog window. A system reset occurs (if enabled) if the CPU writes the windowed watchdog reset sequence to the WWDT_RST register before the watchdog timer has counted this time period since the last timer reset.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>wdt2pow31</name>
         <description>2**31 clock cycles.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow30</name>
         <description>2**30 clock cycles.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow29</name>
         <description>2**29 clock cycles.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow28</name>
         <description>2**28 clock cycles.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow27</name>
         <description>2^27 clock cycles.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow26</name>
         <description>2**26 clock cycles.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow25</name>
         <description>2**25 clock cycles.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow24</name>
         <description>2**24 clock cycles.</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow23</name>
         <description>2**23 clock cycles.</description>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow22</name>
         <description>2**22 clock cycles.</description>
         <value>9</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow21</name>
         <description>2**21 clock cycles.</description>
         <value>10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow20</name>
         <description>2**20 clock cycles.</description>
         <value>11</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow19</name>
         <description>2**19 clock cycles.</description>
         <value>12</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow18</name>
         <description>2**18 clock cycles.</description>
         <value>13</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow17</name>
         <description>2**17 clock cycles.</description>
         <value>14</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow16</name>
         <description>2**16 clock cycles.</description>
         <value>15</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CLKRDY_IE</name>
       <description>Switch Ready Interrupt Enable. Fires an interrupt when it is safe to swithc the clock.</description>
       <bitOffset>27</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CLKRDY</name>
       <description>Clock Status.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>WIN_EN</name>
       <description>Enables the Windowed Watchdog Function.</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Windowed Mode Disabled (i.e. Compatibility Mode).</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Windowed Mode Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RST_EARLY</name>
       <description>Windowed Watchdog Timer Reset Flag Too Soon.</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <usage>read-write</usage>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RST_LATE</name>
       <description>Windowed Watchdog Timer Reset Flag Too Late.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <usage>read-write</usage>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>RST</name>
     <description>Windowed Watchdog Timer Reset Register.</description>
     <addressOffset>0x04</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>RESET</name>
       <description>Writing the watchdog counter 'reset sequence' to this register resets the watchdog counter. If the watchdog count exceeds INT_PERIOD_UPPER_LIMIT then a watchdog interrupt will occur, if enabled. If the watchdog count exceeds RST_PERIOD_UPPER_LIMIT then a watchdog reset will occur, if enabled.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>seq0</name>
         <description>The first value to be written to reset the WDT.</description>
         <value>0x000000A5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>seq1</name>
         <description>The second value to be written to reset the WDT.</description>
         <value>0x0000005A</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>CLKSEL</name>
     <description>Windowed Watchdog Timer Clock Select Register.</description>
     <addressOffset>0x08</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>SOURCE</name>
       <description>WWDT Clock Selection Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CNT</name>
     <description>Windowed Watchdog Timer Count Register.</description>
     <addressOffset>0x0C</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>COUNT</name>
       <description>Current Value of the Windowed Watchdog Timer Counter.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
  <!--WDT Windowed Watchdog Timer-->
  <peripheral>
   <name>WUT</name>
   <description>32-bit reloadable timer that can be used for timing and wakeup.</description>
   <baseAddress>0x40006400</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x200</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>Wakeup_Timer</name>
    <description>WUT IRQ</description>
    <value>24</value>
   </interrupt>
   <registers>
    <register>
     <name>CNT</name>
     <description>Count. This register stores the current timer count.</description>
     <addressOffset>0x00</addressOffset>
     <resetValue>0x00000000</resetValue>
     <fields>
      <field>
       <name>COUNT</name>
       <description>Timer Count Value. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CMP</name>
     <description>Compare. This register stores the compare value for the timer's count value.</description>
     <addressOffset>0x04</addressOffset>
     <resetValue>0x00000000</resetValue>
     <fields>
      <field>
       <name>COMPARE</name>
       <description>Timer Compare Value.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INTFL</name>
     <description>Timer Interrupt Flag. Writing a value (0 or 1) to a bit in this register clears the associated interrupt.</description>
     <addressOffset>0x0C</addressOffset>
     <modifiedWriteValues>oneToClear</modifiedWriteValues>
     <fields>
      <field>
       <name>IRQ_CLR</name>
       <description>Clear Interrupt.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL</name>
     <description>Timer Control Register.</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>TMODE</name>
       <description>Timer Mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>oneShot</name>
         <description>One Shot Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>continuous</name>
         <description>Continuous Mode.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>compare</name>
         <description>Compare Mode.</description>
         <value>5</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PRES</name>
       <description>Prescaler.  Set the Timer's prescaler value. The prescaler divides the PCLK input to the timer and sets the Timer's Count Clock, F_CNT_CLK = PCLK(HZ)/prescaler. The Timer's prescaler setting is a 4-bit value with pres3:pres[2:0].</description>
       <bitOffset>3</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>div1</name>
         <description>Divide by 1.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div2</name>
         <description>Divide by 2.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div4</name>
         <description>Divide by 4.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div8</name>
         <description>Divide by 8.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div16</name>
         <description>Divide by 16.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div32</name>
         <description>Divide by 32.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div64</name>
         <description>Divide by 64.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div128</name>
         <description>Divide by 128.</description>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TPOL</name>
       <description>Reserved.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>TEN</name>
       <description>Timer Enable.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PRES3</name>
       <description>MSB of prescaler value.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PWMSYNC</name>
       <description>Reserved.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>NOLHPOL</name>
       <description>Reserved.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>NOLLPOL</name>
       <description>Reserved.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PWMCLKBD</name>
       <description>Reserved.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>NOLCMP</name>
     <description>Reserved.</description>
     <addressOffset>0x14</addressOffset>
     <access>read-only</access>
    </register>
   </registers>
  </peripheral>
  <!--WUT 32-bit reloadable timer that can be used for timing and wakeup.-->
  <peripheral derivedFrom="WUT">
   <name>WUT1</name>
   <description>32-bit reloadable timer that can be used for timing and wakeup. 1</description>
   <baseAddress>0x40006600</baseAddress>
   <interrupt>
    <name>WUT1</name>
    <description>WUT1 IRQ</description>
    <value>25</value>
   </interrupt>
  </peripheral>
  <!--WUT1 32-bit reloadable timer that can be used for timing and wakeup. 1-->
 </peripherals>
</device>
